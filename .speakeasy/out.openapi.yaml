openapi: 3.0.2
servers:
  - url: /
info:
  title: Cribl API Reference
  description: This API Reference lists available REST endpoints, along with their supported operations for accessing, creating, updating, or deleting resources. See our complementary product documentation at [docs.cribl.io](http://docs.cribl.io).
  version: 4.15.0-alpha.1758566860656-1c3a24b3
  contact:
    name: Support
    url: https://portal.support.cribl.io
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    clientOauth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://login.cribl.cloud/oauth/token
          x-speakeasy-token-endpoint-additional-properties:
            audience:
              type: string
              example: "https://api.cribl.cloud"
          scopes: {}
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
    CloudProvider:
      type: string
      nullable: true
      enum:
        - aws
        - azure
      x-speakeasy-unknown-values: allow
    ConfigGroupCloud:
      type: object
      properties:
        provider:
          $ref: "#/components/schemas/CloudProvider"
        region:
          type: string
      required:
        - provider
        - region
    Commit:
      type: object
      properties:
        author_email:
          type: string
        author_name:
          type: string
        date:
          type: string
        hash:
          type: string
        message:
          type: string
        short:
          type: string
      required:
        - date
        - hash
        - message
        - short
    ConfigGroupLookups:
      type: object
      properties:
        context:
          type: string
        lookups:
          type: array
          items:
            type: object
            properties:
              deployedVersion:
                type: string
              file:
                type: string
              version:
                type: string
            required:
              - file
      required:
        - context
        - lookups
    ConfigGroup:
      type: object
      properties:
        cloud:
          $ref: "#/components/schemas/ConfigGroupCloud"
        configVersion:
          type: string
        deployingWorkerCount:
          type: number
        description:
          type: string
        estimatedIngestRate:
          type: number
        git:
          type: object
          properties:
            commit:
              type: string
            localChanges:
              type: number
            log:
              type: array
              items:
                $ref: "#/components/schemas/Commit"
        id:
          type: string
        incompatibleWorkerCount:
          type: number
        inherits:
          type: string
        isFleet:
          type: boolean
        isSearch:
          type: boolean
        lookupDeployments:
          type: array
          items:
            $ref: "#/components/schemas/ConfigGroupLookups"
        maxWorkerAge:
          type: string
        name:
          type: string
        onPrem:
          type: boolean
        provisioned:
          type: boolean
        streamtags:
          type: array
          items:
            type: string
        tags:
          type: string
        type:
          type: string
          enum:
            - lake_access
          x-speakeasy-unknown-values: allow
        upgradeVersion:
          type: string
        workerCount:
          type: number
        workerRemoteAccess:
          type: boolean
      required:
        - id
    RbacResource:
      type: string
      enum:
        - groups
        - datasets
        - dataset-providers
        - projects
        - dashboards
        - macros
        - notebooks
      x-speakeasy-unknown-values: allow
    ResourcePolicy:
      type: object
      properties:
        gid:
          type: string
        id:
          type: string
        policy:
          type: string
        type:
          $ref: "#/components/schemas/RbacResource"
      required:
        - gid
        - policy
        - type
    UserAccessControlList:
      type: object
      properties:
        perms:
          type: array
          items:
            $ref: "#/components/schemas/ResourcePolicy"
        user:
          type: string
      required:
        - perms
        - user
    DeployRequestLookups:
      type: object
      properties:
        context:
          type: string
        lookups:
          type: array
          items:
            type: object
            properties:
              file:
                type: string
              version:
                type: string
            required:
              - file
              - version
      required:
        - context
        - lookups
    DeployRequest:
      type: object
      properties:
        lookups:
          type: array
          items:
            $ref: "#/components/schemas/DeployRequestLookups"
        version:
          type: string
      required:
        - version
    ProductsCore:
      type: string
      enum:
        - stream
        - edge
      x-speakeasy-unknown-values: allow
    CacheConnectionBackfillStatus:
      type: string
      enum:
        - scheduled
        - pending
        - started
        - finished
        - incomplete
      x-speakeasy-unknown-values: allow
    LakehouseConnectionType:
      type: string
      enum:
        - cache
        - zeroPoint
      x-speakeasy-unknown-values: allow
    CacheConnection:
      type: object
      properties:
        acceleratedFields:
          type: array
          items:
            type: string
        backfillStatus:
          $ref: "#/components/schemas/CacheConnectionBackfillStatus"
        cacheRef:
          type: string
        createdAt:
          type: number
        lakehouseConnectionType:
          $ref: "#/components/schemas/LakehouseConnectionType"
        migrationQueryId:
          type: string
        retentionInDays:
          type: number
      required:
        - cacheRef
        - createdAt
        - retentionInDays
    DatasetMetadataRunInfo:
      type: object
      properties:
        earliestScannedTime:
          type: number
        finishedAt:
          type: number
        latestScannedTime:
          type: number
        objectCount:
          type: number
    DatasetMetadata:
      type: object
      properties:
        earliest:
          type: string
        enableAcceleration:
          type: boolean
        fieldList:
          type: array
          items:
            type: string
        latestRunInfo:
          $ref: "#/components/schemas/DatasetMetadataRunInfo"
        scanMode:
          type: string
          enum:
            - detailed
            - quick
          x-speakeasy-unknown-values: allow
      required:
        - earliest
        - enableAcceleration
        - fieldList
        - scanMode
    LakeDatasetSearchConfig:
      type: object
      properties:
        datatypes:
          type: array
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/DatasetMetadata"
    CriblLakeDataset:
      type: object
      properties:
        acceleratedFields:
          type: array
          items:
            type: string
        bucketName:
          type: string
        cacheConnection:
          $ref: "#/components/schemas/CacheConnection"
        deletionStartedAt:
          type: number
        description:
          type: string
        format:
          type: string
          enum:
            - json
            - ddss
            - parquet
          x-speakeasy-unknown-values: allow
        httpDAUsed:
          type: boolean
        id:
          type: string
        retentionPeriodInDays:
          type: number
        searchConfig:
          $ref: "#/components/schemas/LakeDatasetSearchConfig"
        storageLocationId:
          type: string
        viewName:
          type: string
      required:
        - id
    object:
      type: string
    InputCollection:
      type: object
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - collection
          default: collection
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process results
        sendToRoutes:
          type: boolean
          title: Send to Routes
          description: Send events to normal routing and event processing. Disable to select a specific Pipeline/Destination combination.
          default: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        output:
          type: string
          title: Destination
          description: Destination to send results to
      required:
        - type
    InputKafka:
      type: object
      required:
        - type
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kafka
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify the hostname and port (such as mykafkabroker:9092) or just the hostname (in which case @{product} will assign port 9092).
          minItems: 1
          items:
            type: string
            minLength: 1
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
            schemaType:
              type: string
              default: avro
              enum:
                - avro
                - json
              title: Schema type
              description: The schema format used to encode and decode event data
              x-speakeasy-unknown-values: allow
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: |-
                    Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              x-speakeasy-unknown-values: allow
            oauthEnabled:
              type: boolean
              title: Enable OAuth
              description: Enable OAuth authentication
              default: false
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: |2-
                  Timeout used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires,
                  the broker will remove the client from the group and initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: |2-
                  Maximum allowed time for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: |2-
                  Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputMsk:
      type: object
      required:
        - type
        - brokers
        - topics
        - region
        - awsAuthenticationMethod
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - msk
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify the hostname and port (such as mykafkabroker:9092) or just the hostname (in which case @{product} will assign port 9092).
          minItems: 1
          items:
            type: string
            minLength: 1
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: |2-
                  Timeout used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires,
                  the broker will remove the client from the group and initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: |2-
                  Maximum allowed time for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: |2-
                  Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
            schemaType:
              type: string
              default: avro
              enum:
                - avro
                - json
              title: Schema type
              description: The schema format used to encode and decode event data
              x-speakeasy-unknown-values: allow
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: |-
                    Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the MSK cluster is located
        endpoint:
          type: string
          title: Endpoint
          description: MSK cluster service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to MSK cluster-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MSK cluster requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for MSK
          description: Use Assume Role credentials to access MSK
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
    InputHttp:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - http
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        criblAPI:
          type: string
          title: Cribl HTTP event API
          description: Absolute path on which to listen for the Cribl HTTP API requests. Only _bulk (default /cribl/_bulk) is available. Use empty string to disable.
          default: /cribl
          pattern: ^/|^$
        elasticAPI:
          type: string
          title: Elasticsearch API endpoint (Bulk API)
          description: Absolute path on which to listen for the Elasticsearch API requests. Only _bulk (default /elastic/_bulk) is available. Use empty string to disable.
          default: /elastic
          pattern: ^/|^$
        splunkHecAPI:
          type: string
          title: Splunk HEC endpoint
          description: Absolute path on which listen for the Splunk HTTP Event Collector API requests. Use empty string to disable.
          default: /services/collector
          pattern: ^/|^$
        splunkHecAcks:
          type: boolean
          title: Enable Splunk HEC acknowledgements
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        authTokensExt:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: "Shared secret to be provided by any client (Authorization: <token>)"
              description:
                type: string
                title: Description
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputSplunk:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - splunk
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        authTokens:
          type: array
          title: Auth tokens
          description: Shared secrets to be provided by any Splunk forwarder. If empty, unauthorized access is permitted.
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: Shared secrets to be provided by any Splunk forwarder. If empty, unauthorized access is permitted.
              description:
                type: string
                title: Description
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake
          enum:
            - v3
            - v4
          default: v3
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        useFwdTimezone:
          type: boolean
          title: Use Universal Forwarder time zone
          default: true
          description: Event Breakers will determine events' time zone from UF-provided metadata, when TZ can't be inferred from the raw event
        dropControlFields:
          type: boolean
          title: Drop control fields
          description: Drop Splunk control fields such as `crcSalt` and `_savedPort`. If disabled, control fields are stored in the internal field `__ctrlFields`.
          default: true
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Extract and process Splunk-generated metrics as Cribl metrics
          default: false
        compress:
          type: string
          title: Compression
          description: Controls whether to support reading compressed data from a forwarder. Select 'Automatic' to match the forwarder's configuration, or 'Disabled' to reject compressed connections.
          default: disabled
          enum:
            - disabled
            - auto
            - always
          x-speakeasy-unknown-values: allow
    InputSplunkSearch:
      type: object
      required:
        - type
        - searchHead
        - search
        - cronSchedule
        - endpoint
        - outputMode
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - splunk_search
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        searchHead:
          title: Search head
          type: string
          default: https://localhost:8089
          description: Search head base URL. Can be an expression. Default is https://localhost:8089.
        search:
          type: string
          title: Search
          description: "Enter Splunk search here. Examples: 'index=myAppLogs level=error channel=myApp' OR '| mstats avg(myStat) as myStat WHERE index=myStatsIndex.'"
        earliest:
          title: Earliest
          type: string
          description: "The earliest time boundary for the search. Can be an exact or relative time. Examples: '2022-01-14T12:00:00Z' or '-16m@m'"
          default: -16m@m
        latest:
          title: Latest
          type: string
          description: "The latest time boundary for the search. Can be an exact or relative time. Examples: '2022-01-14T12:00:00Z' or '-1m@m'"
          default: -1m@m
        cronSchedule:
          type: string
          title: Cron schedule
          description: A cron schedule on which to run this job
          default: "*/15 * * * *"
        endpoint:
          type: string
          title: Search endpoint
          default: /services/search/v2/jobs/export
          description: REST API used to create a search
        outputMode:
          type: string
          title: Output mode
          description: Format of the returned output
          enum:
            - csv
            - json
          default: json
          x-speakeasy-unknown-values: allow
        endpointParams:
          title: Endpoint parameters
          type: array
          description: Optional request parameters to send to the endpoint
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                title: Parameter Name
                type: string
              value:
                title: Value
                type: string
                description: JavaScript expression to compute the parameter's value, normally enclosed in backticks (e.g., `${earliest}`). If a constant, use single quotes (e.g., 'earliest'). Values without delimiters (e.g., earliest) are evaluated as strings.
        endpointHeaders:
          title: Endpoint headers
          description: Optional request headers to send to the endpoint
          type: array
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Header Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute the header's value, normally enclosed in backticks (e.g., `${earliest}`). If a constant, use single quotes (e.g., 'earliest'). Values without delimiters (e.g., earliest) are evaluated as strings.
        logLevel:
          type: string
          title: Log level
          enum:
            - error
            - warn
            - info
            - debug
          description: Collector runtime log level (verbosity)
          x-speakeasy-unknown-values: allow
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Use 0 for no timeout.
          minimum: 0
          maximum: 2400
          default: 0
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned
          default: false
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA (such as self-signed certificates)
          default: false
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
              x-speakeasy-unknown-values: allow
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of HTTP codes that trigger a retry. Leave empty to use the default list of 429 and 503.
              minItems: 1
              default:
                - 429
                - 503
              items:
                type: number
                minLength: 1
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          default:
            - Splunk Search Ruleset
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        authType:
          type: string
          title: Authentication type
          description: Splunk Search authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: basic
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
    InputSplunkHec:
      type: object
      required:
        - type
        - host
        - port
        - splunkHecAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - splunk_hec
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              authType:
                title: Authentication method
                type: string
                enum:
                  - manual
                  - secret
                default: manual
                description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                x-speakeasy-unknown-values: allow
              tokenSecret: {}
              token: {}
              enabled:
                type: boolean
                title: Enable token
                default: true
              description:
                type: string
                title: Description
                description: Optional token description
              allowedIndexesAtToken:
                type: array
                title: Allowed indexes
                description: Enter the values you want to allow in the HEC event index field at the token level. Supports wildcards. To skip validation, leave blank.
                items:
                  type: string
                  minLength: 1
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck: {}
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        splunkHecAPI:
          type: string
          title: Splunk HEC endpoint
          description: Absolute path on which to listen for the Splunk HTTP Event Collector API requests. This input supports the /event, /raw and /s2s endpoints.
          default: /services/collector
          pattern: ^/
        metadata:
          type: array
          title: Fields
          description: Fields to add to every event. Overrides fields added at the token or request level. See [the Source documentation](https://docs.cribl.io/stream/sources-splunk-hec/#fields) for more info.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        allowedIndexes:
          type: array
          title: Allowed indexes
          description: List values allowed in HEC event index field. Leave blank to skip validation. Supports wildcards. The values here can expand index validation at the token level.
          items:
            type: string
            minLength: 1
        splunkHecAcks:
          type: boolean
          title: Splunk HEC acks
          description: Enable Splunk HEC acknowledgements
          default: false
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        useFwdTimezone:
          type: boolean
          title: Use Universal Forwarder time zone (S2S only)
          default: true
          description: Event Breakers will determine events' time zone from UF-provided metadata, when TZ can't be inferred from the raw event
        dropControlFields:
          type: boolean
          title: Drop control fields (S2S only)
          description: Drop Splunk control fields such as `crcSalt` and `_savedPort`. If disabled, control fields are stored in the internal field `__ctrlFields`.
          default: true
        extractMetrics:
          type: boolean
          title: Extract metrics (S2S only)
          description: Extract and process Splunk-generated metrics as Cribl metrics
          default: false
        accessControlAllowOrigin:
          title: CORS allowed origins
          type: array
          description: Optionally, list HTTP origins to which @{product} should send CORS (cross-origin resource sharing) Access-Control-Allow-* headers. Supports wildcards.
          items:
            type: string
            minLength: 1
        accessControlAllowHeaders:
          title: CORS allowed headers
          type: array
          description: Optionally, list HTTP headers that @{product} will send to allowed origins as "Access-Control-Allow-Headers" in a CORS preflight response. Use "*" to allow all headers.
          items:
            type: string
            minLength: 1
        emitTokenMetrics:
          type: boolean
          title: Emit per-token request metrics
          description: Emit per-token (<prefix>.http.perToken) and summary (<prefix>.http.summary) request metrics
          default: false
        description:
          type: string
          title: Description
    InputAzureBlob:
      type: object
      required:
        - type
        - queueName
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - azure_blob
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        queueName:
          type: string
          title: Queue
          description: "The storage account queue name blob notifications will be read from. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myQueue-${C.vars.myVar}`"
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        visibilityTimeout:
          type: number
          title: Visibility timeout (secs)
          description: The duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a ReceiveMessage request.
          default: 600
          minimum: 0
          maximum: 604800
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages to return in a poll request. Azure storage queues never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 32."
          default: 1
          minimum: 1
          maximum: 32
        servicePeriodSecs:
          type: number
          title: Service period (secs)
          description: The duration (in seconds) which pollers should be validated and restarted if exited
          default: 5
          minimum: 1
          maximum: 10
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
            - clientSecret
            - clientCert
          default: manual
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        connectionString:
          type: string
          title: Connection string
          description: Enter your Azure Storage account connection string. If left blank, Stream will fall back to env.AZURE_STORAGE_CONNECTION_STRING.
        textSecret:
          type: string
          title: Connection string (text secret)
          description: Select or create a stored text secret
        storageAccountName:
          type: string
          title: Storage account name
          description: The name of your Azure storage account
        tenantId:
          type: string
          title: Tenant ID
          description: The service principal's tenant ID
        clientId:
          type: string
          title: Client ID
          description: The service principal's client ID
        azureCloud:
          type: string
          title: Azure Cloud
          description: The Azure cloud to use. Defaults to Azure Public Cloud.
        endpointSuffix:
          type: string
          title: Endpoint suffix
          description: Endpoint suffix for the service URL. Takes precedence over the Azure Cloud setting. Defaults to core.windows.net.
        clientTextSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
        certificate:
          type: object
          required:
            - certificateName
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The certificate you registered as credentials for your app in the Azure portal
    InputElastic:
      type: object
      required:
        - type
        - host
        - port
        - elasticAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - elastic
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        elasticAPI:
          type: string
          title: Elasticsearch API endpoint
          description: Absolute path on which to listen for Elasticsearch API requests. Defaults to /. _bulk will be appended automatically. For example, /myPath becomes /myPath/_bulk. Requests can then be made to either /myPath/_bulk or /myPath/<myIndexName>/_bulk. Other entries are faked as success.
          default: /
          pattern: ^/
        authType:
          type: string
          title: Authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - authTokens
          default: none
          x-speakeasy-unknown-values: allow
        apiVersion:
          type: string
          title: API version
          description: The API version to use for communicating with the server
          enum:
            - 6.8.4
            - 8.3.2
            - custom
          default: 8.3.2
          x-speakeasy-unknown-values: allow
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
          default:
            - name: X-elastic-product
              value: Elasticsearch
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        proxyMode:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable proxy mode
              default: false
              description: Enable proxying of non-bulk API requests to an external Elastic server. Enable this only if you understand the implications. See [Cribl Docs](https://docs.cribl.io/stream/sources-elastic/#proxy-mode) for more details.
            url:
              type: string
              title: Proxy URL
              description: URL of the Elastic server to proxy non-bulk requests to, such as http://elastic:9200
            rejectUnauthorized:
              type: boolean
              title: Reject unauthorized certificates
              description: Reject certificates that cannot be verified against a valid CA (such as self-signed certificates)
              default: false
            removeHeaders:
              type: array
              title: Remove headers
              description: List of headers to remove from the request to proxy
              items:
                type: string
                minLength: 1
            timeoutSec:
              type: number
              default: 60
              minimum: 1
              maximum: 9007199254740991
              title: Proxy request timeout
              description: Amount of time, in seconds, to wait for a proxy request to complete before canceling it
            authType:
              title: Authentication method
              type: string
              enum:
                - none
                - manual
                - secret
              default: none
              description: Enter credentials directly, or select a stored secret
              x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        authTokens:
          type: array
          title: Token
          description: Bearer tokens to include in the authorization header
          items:
            type: string
        customAPIVersion:
          type: string
          title: Custom API Version
          description: Custom version information to respond to requests
          default: |-
            {
                "name": "AzU84iL",
                "cluster_name": "cribl",
                "cluster_uuid": "Js6_Z2VKS3KbfRSxPmPbaw",
                "version": {
                    "number": "8.3.2",
                    "build_type": "tar",
                    "build_hash": "bca0c8d",
                    "build_date": "2019-10-16T06:19:49.319352Z",
                    "build_snapshot": false,
                    "lucene_version": "9.7.2",
                    "minimum_wire_compatibility_version": "7.17.0",
                    "minimum_index_compatibility_version": "7.0.0"
                },
                "tagline": "You Know, for Search"
            }
    InputConfluentCloud:
      type: object
      required:
        - type
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - confluent_cloud
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        brokers:
          type: array
          title: Bootstrap servers
          description: List of Confluent Cloud bootstrap servers to use, such as yourAccount.confluent.cloud:9092
          minItems: 1
          items:
            type: string
            minLength: 1
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
            schemaType:
              type: string
              default: avro
              enum:
                - avro
                - json
              title: Schema type
              description: The schema format used to encode and decode event data
              x-speakeasy-unknown-values: allow
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: |-
                    Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              x-speakeasy-unknown-values: allow
            oauthEnabled:
              type: boolean
              title: Enable OAuth
              description: Enable OAuth authentication
              default: false
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: |2-
                  Timeout used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires,
                  the broker will remove the client from the group and initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: |2-
                  Maximum allowed time for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: |2-
                  Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputGrafana:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - grafana
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep alive timeout (seconds)
          description: Maximum time to wait for additional data, after the last response was sent, before closing a socket connection. This can be very useful when Grafana Agent remote write's request frequency is high so, reusing connections, would help mitigating the cost of creating a new connection per request. Note that Grafana Agent's embedded Prometheus would attempt to keep connections open for up to 5 minutes.
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        prometheusAPI:
          type: string
          title: Remote Write API endpoint
          description: "Absolute path on which to listen for Grafana Agent's Remote Write requests. Defaults to /api/prom/push, which will expand as: 'http://<your‑upstream‑URL>:<your‑port>/api/prom/push'. Either this field or 'Logs API endpoint' must be configured."
          default: /api/prom/push
          pattern: ^/
        lokiAPI:
          type: string
          title: Logs API endpoint
          description: "Absolute path on which to listen for Loki logs requests. Defaults to /loki/api/v1/push, which will (in this example) expand as: 'http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push'. Either this field or 'Remote Write API endpoint' must be configured."
          default: /loki/api/v1/push
          pattern: ^/
        prometheusAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              description: Remote Write authentication type
              enum:
                - none
                - basic
                - credentialsSecret
                - token
                - textSecret
                - oauth
              default: none
              x-speakeasy-unknown-values: allow
            username:
              type: string
              title: Username
            password:
              type: string
              title: Password
            token:
              type: string
              title: Token
              description: Bearer token to include in the authorization header
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
            textSecret:
              type: string
              title: Token (text secret)
              description: Select or create a stored text secret
            loginUrl:
              type: string
              title: Login URL
              description: URL for OAuth
              pattern: ^https?://.*
            secretParamName:
              type: string
              title: OAuth Secret parameter name
              description: Secret parameter name to pass in request body
            secret:
              type: string
              title: OAuth secret
              description: Secret parameter value to pass in request body
            tokenAttributeName:
              type: string
              title: Token attribute name
              description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
            authHeaderExpr:
              type: string
              title: Authorize expression
              description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
              default: "`Bearer ${token}`"
            tokenTimeoutSecs:
              type: number
              title: Refresh interval (secs.)
              description: How often the OAuth token should be refreshed.
              minimum: 1
              maximum: 300000
              default: 3600
            oauthParams:
              type: array
              title: OAuth parameters
              description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth parameter name
                  value:
                    type: string
                    title: Value
                    description: OAuth parameter value
            oauthHeaders:
              type: array
              title: OAuth headers
              description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth header name
                  value:
                    type: string
                    title: Value
                    description: OAuth header value
        lokiAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              description: Loki logs authentication type
              enum:
                - none
                - basic
                - credentialsSecret
                - token
                - textSecret
                - oauth
              default: none
              x-speakeasy-unknown-values: allow
            username:
              type: string
              title: Username
            password:
              type: string
              title: Password
            token:
              type: string
              title: Token
              description: Bearer token to include in the authorization header
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
            textSecret:
              type: string
              title: Token (text secret)
              description: Select or create a stored text secret
            loginUrl:
              type: string
              title: Login URL
              description: URL for OAuth
              pattern: ^https?://.*
            secretParamName:
              type: string
              title: OAuth Secret parameter name
              description: Secret parameter name to pass in request body
            secret:
              type: string
              title: OAuth secret
              description: Secret parameter value to pass in request body
            tokenAttributeName:
              type: string
              title: Token attribute name
              description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
            authHeaderExpr:
              type: string
              title: Authorize expression
              description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
              default: "`Bearer ${token}`"
            tokenTimeoutSecs:
              type: number
              title: Refresh interval (secs.)
              description: How often the OAuth token should be refreshed.
              minimum: 1
              maximum: 300000
              default: 3600
            oauthParams:
              type: array
              title: OAuth parameters
              description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth parameter name
                  value:
                    type: string
                    title: Value
                    description: OAuth parameter value
            oauthHeaders:
              type: array
              title: OAuth headers
              description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth header name
                  value:
                    type: string
                    title: Value
                    description: OAuth header value
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      anyOf:
        - required:
            - prometheusAPI
        - required:
            - lokiAPI
    InputLoki:
      type: object
      required:
        - type
        - host
        - port
        - lokiAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - loki
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        lokiAPI:
          type: string
          title: Logs API endpoint
          description: "Absolute path on which to listen for Loki logs requests. Defaults to /loki/api/v1/push, which will (in this example) expand as: 'http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push'."
          default: /loki/api/v1/push
          pattern: ^/
        authType:
          type: string
          title: Authentication type
          description: Loki logs authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          x-speakeasy-unknown-values: allow
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
    InputPrometheusRw:
      type: object
      required:
        - type
        - host
        - port
        - prometheusAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - prometheus_rw
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        prometheusAPI:
          type: string
          title: Remote Write API endpoint
          description: "Absolute path on which to listen for Prometheus requests. Defaults to /write, which will expand as: http://<your‑upstream‑URL>:<your‑port>/write."
          default: /write
          pattern: ^/
        authType:
          type: string
          title: Authentication type
          description: Remote Write authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          x-speakeasy-unknown-values: allow
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
    InputPrometheus:
      type: object
      required:
        - type
        - interval
        - logLevel
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - prometheus
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        dimensionList:
          type: array
          title: Extra Dimensions
          default:
            - host
            - source
          description: Other dimensions to include in events
          items:
            type: string
            title: dimension
        discoveryType:
          title: Discovery Type
          type: string
          enum:
            - static
            - dns
            - ec2
          description: Target discovery mechanism. Use static to manually enter a list of targets.
          default: static
          x-speakeasy-unknown-values: allow
        interval:
          type: number
          title: Poll Interval
          description: How often in minutes to scrape targets for metrics, 60 must be evenly divisible by the value or save will fail.
          minimum: 1
          maximum: 60
          default: 15
        logLevel:
          type: string
          title: Log Level
          enum:
            - error
            - warn
            - info
            - debug
          description: Collector runtime Log Level
          default: info
          x-speakeasy-unknown-values: allow
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter credentials directly, or select a stored secret
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        targetList:
          type: array
          title: Targets
          minItems: 1
          default: []
          description: "List of Prometheus targets to pull metrics from. Values can be in URL or host[:port] format. For example: http://localhost:9090/metrics, localhost:9090, or localhost. In cases where just host[:port] is specified, the endpoint will resolve to 'http://host[:port]/metrics'."
          items:
            type: string
            title: Targets
        nameList:
          type: array
          title: DNS Names
          minItems: 1
          default: []
          description: List of DNS names to resolve
          items:
            type: string
            title: DNS Names
        recordType:
          type: string
          title: Record Type
          enum:
            - SRV
            - A
            - AAAA
          description: DNS Record type to resolve
          default: SRV
          x-speakeasy-unknown-values: allow
        scrapeProtocol:
          type: string
          title: Metrics Protocol
          enum:
            - http
            - https
          description: Protocol to use when collecting metrics
          default: http
          x-speakeasy-unknown-values: allow
        scrapePath:
          type: string
          title: Metrics Path
          description: Path to use when collecting metrics from discovered targets
          default: /metrics
          pattern: ^/.*
        usePublicIp:
          type: boolean
          title: Use Public IP
          description: Use public IP address for discovered targets. Set to false if the private IP address should be used.
          default: true
        scrapePort:
          type: number
          title: Metrics Port
          description: The port number in the metrics URL for discovered targets.
          minimum: 1
          maximum: 65535
          default: 9090
        searchFilter:
          title: Search Filter
          description: EC2 Instance Search Filter
          type: array
          items:
            type: object
            required:
              - Name
              - Values
            properties:
              Name:
                type: string
                title: Filter Name
                description: "Search filter attribute name, see: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html for more information. Attributes can be manually entered if not present in the drop down list"
              Values:
                type: array
                title: Filter Values
                description: Search Filter Values, if empty only "running" EC2 instances will be returned
                default: []
                items:
                  type: string
                  minLength: 1
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the EC2 is located
        endpoint:
          type: string
          title: Endpoint
          description: EC2 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to EC2-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing EC2 requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for EC2
          description: Use Assume Role credentials to access EC2
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        username:
          type: string
          title: Username
          description: Username for Prometheus Basic authentication
        password:
          type: string
          title: Password
          description: Password for Prometheus Basic authentication
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
    InputEdgePrometheus:
      type: object
      required:
        - type
        - interval
        - discoveryType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - edge_prometheus
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        dimensionList:
          type: array
          title: Extra Dimensions
          default:
            - host
            - source
          description: Other dimensions to include in events
          items:
            type: string
            title: dimension
        discoveryType:
          title: Discovery Type
          type: string
          enum:
            - static
            - dns
            - ec2
            - k8s-node
            - k8s-pods
          description: Target discovery mechanism. Use static to manually enter a list of targets.
          default: static
          x-speakeasy-unknown-values: allow
        interval:
          type: number
          title: Poll Interval
          description: How often in seconds to scrape targets for metrics.
          minimum: 2
          default: 15
        timeout:
          type: number
          title: HTTP Connection Timeout
          description: Timeout, in milliseconds, before aborting HTTP connection attempts; 1-60000 or 0 to disable
          default: 5000
          maximum: 60000
          minimum: 0
        persistence:
          type: object
          title: Disk Spooling
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events on disk for Cribl Edge and Search. Default is disabled.
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time period for grouping spooled events. Default is 10m.
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space that can be consumed before older buckets are deleted. Examples: 420MB, 4GB. Default is 1GB."
              pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data before older buckets are deleted. Examples: 2h, 4d. Default is 24h."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Compression
              description: Data compression format. Default is gzip.
              enum:
                - none
                - gzip
              default: gzip
              x-speakeasy-unknown-values: allow
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
            - kubernetes
          default: manual
          description: Enter credentials directly, or select a stored secret
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        targets:
          type: array
          title: Targets
          default: []
          minItems: 1
          items:
            type: object
            required:
              - host
            properties:
              protocol:
                type: string
                title: Protocol
                enum:
                  - http
                  - https
                description: Protocol to use when collecting metrics
                default: http
                x-speakeasy-unknown-values: allow
              host:
                type: string
                title: Host
                description: Name of host from which to pull metrics.
              port:
                type: number
                title: Port
                description: The port number in the metrics URL for discovered targets.
                minimum: 1
                maximum: 65535
                default: 9090
              path:
                type: string
                title: Path
                description: Path to use when collecting metrics from discovered targets
                default: /metrics
                pattern: ^/.*
        nameList:
          type: array
          title: DNS Names
          minItems: 1
          default: []
          description: List of DNS names to resolve
          items:
            type: string
            title: DNS Names
        recordType:
          type: string
          title: Record Type
          enum:
            - SRV
            - A
            - AAAA
          description: DNS Record type to resolve
          default: SRV
          x-speakeasy-unknown-values: allow
        scrapeProtocol:
          type: string
          title: Protocol
          enum:
            - http
            - https
          description: Protocol to use when collecting metrics
          default: http
          x-speakeasy-unknown-values: allow
        scrapePath:
          type: string
          title: Path
          description: Path to use when collecting metrics from discovered targets
          default: /metrics
          pattern: ^/.*
        usePublicIp:
          type: boolean
          title: Use Public IP
          description: Use public IP address for discovered targets. Set to false if the private IP address should be used.
          default: true
        scrapePort:
          type: number
          title: Port
          description: The port number in the metrics URL for discovered targets.
          minimum: 1
          maximum: 65535
          default: 9090
        searchFilter:
          title: Search Filter
          description: EC2 Instance Search Filter
          type: array
          items:
            type: object
            required:
              - Name
              - Values
            properties:
              Name:
                type: string
                title: Filter Name
                description: "Search filter attribute name, see: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html for more information. Attributes can be manually entered if not present in the drop down list"
              Values:
                type: array
                title: Filter Values
                description: Search Filter Values, if empty only "running" EC2 instances will be returned
                default: []
                items:
                  type: string
                  minLength: 1
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the EC2 is located
        endpoint:
          type: string
          title: Endpoint
          description: EC2 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to EC2-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing EC2 requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for EC2
          description: Use Assume Role credentials to access EC2
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        scrapeProtocolExpr:
          type: string
          title: Protocol
          description: Protocol to use when collecting metrics
          default: metadata.annotations['prometheus.io/scheme'] || 'http'
        scrapePortExpr:
          type: string
          title: Port
          description: The port number in the metrics URL for discovered targets.
          default: metadata.annotations['prometheus.io/port'] || 9090
        scrapePathExpr:
          type: string
          title: Path
          description: Path to use when collecting metrics from discovered targets
          default: metadata.annotations['prometheus.io/path'] || '/metrics'
        podFilter:
          type: array
          title: Filter Rules
          description: |2
              Add rules to decide which pods to discover for metrics.
              Pods are searched if no rules are given or of all the rules'
              expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to pods objects. Return 'true' to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: metadata.annotations['prometheus.io/scrape']
              description: Scrape pod if annotation is true
        username:
          type: string
          title: Username
          description: Username for Prometheus Basic authentication
        password:
          type: string
          title: Password
          description: Password for Prometheus Basic authentication
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
    InputOffice365Mgmt:
      type: object
      required:
        - type
        - tenantId
        - appId
        - planType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - office365_mgmt
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
          enum:
            - enterprise_gcc
            - gcc
            - gcc_high
            - dod
          default: enterprise_gcc
          x-speakeasy-unknown-values: allow
        tenantId:
          type: string
          title: Tenant ID
          description: Office 365 Azure Tenant ID
        appId:
          type: string
          title: App ID
          description: Office 365 Azure Application ID
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout, use 0 to disable
          minimum: 0
          maximum: 2400
          default: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        publisherIdentifier:
          type: string
          title: Publisher Identifier
          description: Optional Publisher Identifier to use in API requests, defaults to tenant id if not defined. For more information see [here](https://docs.microsoft.com/en-us/office/office-365-management-api/office-365-management-activity-api-reference#start-a-subscription)
        contentConfig:
          type: array
          title: Content Types
          default:
            - contentType: Active Directory
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: Exchange
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: SharePoint
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: General
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: DLP
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
          items:
            type: object
            properties:
              contentType:
                type: string
                title: Content Type
                description: Office 365 Management Activity API Content Type
              description:
                type: string
                title: Interval Description
                description: If interval type is minutes the value entered must evenly divisible by 60 or save will fail
              interval:
                type: number
                title: Interval
                minimum: 1
                maximum: 60
              logLevel:
                type: string
                title: Log Level
                enum:
                  - error
                  - warn
                  - info
                  - debug
                description: Collector runtime Log Level
                x-speakeasy-unknown-values: allow
              enabled:
                type: boolean
                title: Enabled
          description: "Enable Office 365 Management Activity API content types and polling intervals. Polling intervals are used to set up search date range and cron schedule, e.g.: */${interval} * * * *. Because of this, intervals entered must be evenly divisible by 60 to give a predictable schedule."
        ingestionLag:
          type: number
          title: Ingestion lag (minutes)
          description: Use this setting to account for ingestion lag. This is necessary because there can be a lag of 60 - 90 minutes (or longer) before Office 365 events are available for retrieval.
          default: 0
          minimum: 0
          maximum: 7200
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
              x-speakeasy-unknown-values: allow
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
              minItems: 1
              default:
                - 429
                - 500
                - 503
              items:
                type: number
                minLength: 1
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        clientSecret:
          type: string
          title: Client secret
          description: Office 365 Azure client secret
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
    InputOffice365Service:
      type: object
      required:
        - type
        - tenantId
        - appId
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - office365_service
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
          enum:
            - enterprise_gcc
            - gcc
            - gcc_high
            - dod
          default: enterprise_gcc
          x-speakeasy-unknown-values: allow
        tenantId:
          type: string
          title: Tenant ID
          description: Office 365 Azure Tenant ID
        appId:
          type: string
          title: App ID
          description: Office 365 Azure Application ID
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout, use 0 to disable
          minimum: 0
          maximum: 2400
          default: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        contentConfig:
          type: array
          title: Content Types
          default:
            - contentType: Current Status
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: Messages
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
          items:
            type: object
            properties:
              contentType:
                type: string
                title: Content Type
                description: Office 365 Services API Content Type
              description:
                type: string
                title: Interval Description
                description: If interval type is minutes the value entered must evenly divisible by 60 or save will fail
              interval:
                type: number
                title: Interval
                minimum: 0
                maximum: 60
              logLevel:
                type: string
                title: Log Level
                enum:
                  - error
                  - warn
                  - info
                  - debug
                description: Collector runtime Log Level
                x-speakeasy-unknown-values: allow
              enabled:
                type: boolean
                title: Enabled
          description: "Enable Office 365 Service Communication API content types and polling intervals. Polling intervals are used to set up search date range and cron schedule, e.g.: */${interval} * * * *. Because of this, intervals entered for current and historical status must be evenly divisible by 60 to give a predictable schedule."
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
              x-speakeasy-unknown-values: allow
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
              minItems: 1
              default:
                - 429
                - 500
                - 503
              items:
                type: number
                minLength: 1
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        clientSecret:
          type: string
          title: Client secret
          description: Office 365 Azure client secret
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
    InputOffice365MsgTrace:
      type: object
      required:
        - type
        - url
        - interval
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - office365_msg_trace
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        url:
          title: Report URL
          type: string
          description: URL to use when retrieving report data.
          default: https://reports.office365.com/ecp/reportingwebservice/reporting.svc/MessageTrace
        interval:
          type: number
          title: Poll interval
          description: How often (in minutes) to run the report. Must divide evenly into 60 minutes to create a predictable schedule, or Save will fail.
          minimum: 1
          maximum: 60
          default: 60
        startDate:
          title: Date range start
          type: string
          description: "Backward offset for the search range's head. (E.g.: -3h@h) Message Trace data is delayed; this parameter (with Date range end) compensates for delay and gaps."
        endDate:
          title: Date range end
          type: string
          description: "Backward offset for the search range's tail. (E.g.: -2h@h) Message Trace data is delayed; this parameter (with Date range start) compensates for delay and gaps."
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Maximum is 2400 (40 minutes); enter 0 to wait indefinitely.
          minimum: 0
          maximum: 2400
          default: 300
        disableTimeFilter:
          type: boolean
          title: Disable time filter
          description: Disables time filtering of events when a date range is specified.
          default: true
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
            - oauth
            - oauthSecret
            - oauthCert
          default: oauth
          description: Select authentication method.
          x-speakeasy-unknown-values: allow
        rescheduleDroppedTasks:
          type: boolean
          title: Reschedule tasks
          description: Reschedule tasks that failed with non-fatal errors
          default: true
        maxTaskReschedule:
          type: number
          title: Task reschedule limit
          description: Maximum number of times a task can be rescheduled
          default: 1
          minimum: 1
        logLevel:
          type: string
          title: Log level
          description: Log Level (verbosity) for collection runtime behavior.
          enum:
            - error
            - warn
            - info
            - debug
            - silly
          default: info
          x-speakeasy-unknown-values: allow
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
              x-speakeasy-unknown-values: allow
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
              minItems: 1
              default:
                - 429
                - 500
                - 503
              items:
                type: number
                minLength: 1
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
          description: Username to run Message Trace API call.
        password:
          type: string
          title: Password
          description: Password to run Message Trace API call.
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials.
        clientSecret:
          type: string
          title: Client secret
          description: client_secret to pass in the OAuth request parameter.
        tenantId:
          type: string
          title: Tenant identifier
          description: Directory ID (tenant identifier) in Azure Active Directory.
        clientId:
          type: string
          title: Client ID
          description: client_id to pass in the OAuth request parameter.
        resource:
          type: string
          title: Resource
          description: Resource to pass in the OAuth request parameter.
          default: https://outlook.office365.com
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
          enum:
            - enterprise_gcc
            - gcc
            - gcc_high
            - dod
          default: enterprise_gcc
          x-speakeasy-unknown-values: allow
        textSecret:
          type: string
          title: Client secret
          description: Select or create a secret that references your client_secret to pass in the OAuth request parameter.
        certOptions:
          type: object
          required:
            - privKeyPath
            - certPath
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path to the private key to use. Key should be in PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt the private key.
            certPath:
              type: string
              title: Certificate path
              description: Path to the certificate to use. Certificate should be in PEM format. Can reference $ENV_VARS.
    InputEventhub:
      type: object
      required:
        - type
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - eventhub
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        brokers:
          type: array
          title: Brokers
          description: "List of Event Hubs Kafka brokers to connect to (example: yourdomain.servicebus.windows.net:9093). The hostname can be found in the host portion of the primary or secondary connection string in Shared Access Policies."
          minItems: 1
          items:
            type: string
            minLength: 1
        topics:
          type: array
          title: Event Hub name
          description: "The name of the Event Hub (Kafka topic) to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Event Hubs Source to only a single topic."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group this instance belongs to. Default is 'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Start reading from earliest available data; relevant only during initial subscription
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            mechanism:
              type: string
              enum:
                - plain
                - oauthbearer
              title: SASL mechanism
              default: plain
              x-speakeasy-unknown-values: allow
        tls:
          type: object
          title: TLS settings (client side)
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certificates that are not authorized by a CA in the CA certificate path, or by another trusted CA (such as the system's)
              default: true
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: |2-
                  Timeout (session.timeout.ms in Kafka domain) used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires, the broker will remove the client from the group and initiate a rebalance.
                  Value must be lower than rebalanceTimeout.
                  See details [here](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 30000
          minimum: 6000
          maximum: 300000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: |2-
                  Maximum allowed time (rebalance.timeout.ms in Kafka domain) for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Recommended configurations](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: |2-
                  Expected time (heartbeat.interval.ms in Kafka domain) between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Recommended configurations](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 3000
          minimum: 1000
          maximum: 3600000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
        minimizeDuplicates:
          type: boolean
          title: Minimize duplicates
          description: Minimize duplicate events by starting only one consumer for each topic partition
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputExec:
      type: object
      required:
        - type
        - command
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          enum:
            - exec
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        command:
          type: string
          title: Command
          description: Command to execute; supports Bourne shell (or CMD on Windows) syntax
        retries:
          type: number
          title: Retry limit
          description: Maximum number of retry attempts in the event that the command fails
          default: 10
          minimum: 0
        scheduleType:
          title: Schedule type
          type: string
          enum:
            - interval
            - cronSchedule
          default: interval
          description: Select a schedule type; either an interval (in seconds) or a cron-style schedule.
          x-speakeasy-unknown-values: allow
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        interval:
          type: number
          title: Interval
          description: Interval between command executions in seconds.
          default: 60
          minimum: 1
        cronSchedule:
          type: string
          title: Schedule
          description: Cron schedule to execute the command on.
          default: "* * * * *"
    InputFirehose:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - firehose
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputGooglePubsub:
      type: object
      required:
        - type
        - subscriptionName
        - topicName
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - google_pubsub
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        topicName:
          type: string
          title: Topic ID
          description: ID of the topic to receive events from. When Monitor subscription is enabled, any value may be entered.
          default: cribl
        subscriptionName:
          type: string
          title: Subscription ID
          description: "ID of the subscription to use when receiving events. When Monitor subscription is enabled, the fully qualified subscription name must be entered. Example: projects/myProject/subscriptions/mySubscription"
        monitorSubscription:
          type: boolean
          title: Monitor subscription for new messages
          description: Use when the subscription is not created by this Source and topic is not known
          default: false
        createTopic:
          type: boolean
          title: Create topic
          description: Create topic if it does not exist
          default: false
        createSubscription:
          type: boolean
          title: Create subscription
          description: Create subscription if it does not exist
          default: true
        region:
          type: string
          title: Region
          description: Region to retrieve messages from. Select 'default' to allow Google to auto-select the nearest region. When using ordered delivery, the selected region must be allowed by message storage policy.
        googleAuthMethod:
          type: string
          title: Google authentication method
          description: Choose Auto to use Google Application Default Credentials (ADC), Manual to enter Google service account credentials directly, or Secret to select or create a stored secret that references Google service account credentials.
          default: manual
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
        maxBacklog:
          type: number
          title: Backlog limit
          description: If Destination exerts backpressure, this setting limits how many inbound events Stream will queue for processing before it stops retrieving events
          default: 1000
          minimum: 1
        concurrency:
          type: number
          title: Number of concurrent streams
          description: How many streams to pull messages from at one time. Doubling the value doubles the number of messages this Source pulls from the topic (if available), while consuming more CPU and memory. Defaults to 5.
          default: 5
          minimum: 1
          maximum: 100
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Pull request timeout, in milliseconds
          default: 60000
          minimum: 10000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        orderedDelivery:
          type: boolean
          title: Ordered delivery
          description: Receive events in the order they were added to the queue. The process sending events must have ordering enabled.
          default: false
    InputCribl:
      type: object
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - cribl
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        filter:
          type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      required:
        - type
    InputCriblTcp:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - cribl_tcp
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
        description:
          type: string
          title: Description
    InputCriblHttp:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - cribl_http
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputCriblLakeHttp:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - cribl_lake_http
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        criblAPI:
          type: string
          title: Cribl HTTP event API
          description: Absolute path on which to listen for the Cribl HTTP API requests. Only _bulk (default /cribl/_bulk) is available. Use empty string to disable.
          default: /cribl
          pattern: ^/|^$
        elasticAPI:
          type: string
          title: Elasticsearch API endpoint (Bulk API)
          description: Absolute path on which to listen for the Elasticsearch API requests. Only _bulk (default /elastic/_bulk) is available. Use empty string to disable.
          default: /elastic
          pattern: ^/|^$
        splunkHecAPI:
          type: string
          title: Splunk HEC endpoint
          description: Absolute path on which listen for the Splunk HTTP Event Collector API requests. Use empty string to disable.
          default: /services/collector
          pattern: ^/|^$
        splunkHecAcks:
          type: boolean
          title: Enable Splunk HEC acknowledgements
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        authTokensExt:
          type: array
          title: Auth tokens
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
              description:
                type: string
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
              splunkHecMetadata:
                type: object
                properties:
                  enabled:
                    type: boolean
              elasticsearchMetadata:
                type: object
                properties:
                  enabled:
                    type: boolean
        description:
          type: string
          title: Description
    InputTcpjson:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - tcpjson
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        authToken:
          type: string
          title: Auth token
          description: Shared secret to be provided by any client (in authToken header field). If empty, unauthorized access is permitted.
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
    InputSystemMetrics:
      type: object
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - system_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metric collections. Default is 10 seconds.
        host:
          type: object
          properties:
            mode:
              type: string
              description: Select level of detail for host metrics
              enum:
                - basic
                - all
                - custom
                - disabled
              default: basic
              x-speakeasy-unknown-values: allow
            custom:
              type: object
              properties:
                system:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for system metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      x-speakeasy-unknown-values: allow
                    processes:
                      type: boolean
                      default: false
                      title: Process metrics
                      description: Generate metrics for the numbers of processes in various states
                cpu:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for CPU metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      x-speakeasy-unknown-values: allow
                    perCpu:
                      type: boolean
                      default: false
                      title: Per-CPU metrics
                      description: Generate metrics for each CPU
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all CPU states
                    time:
                      type: boolean
                      default: false
                      title: CPU time metrics
                      description: Generate raw, monotonic CPU time counters
                memory:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for memory metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      x-speakeasy-unknown-values: allow
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all memory states
                network:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for network metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      x-speakeasy-unknown-values: allow
                    devices:
                      type: array
                      title: Interface filter
                      description: "Network interfaces to include/exclude. Examples: eth0, !lo. All interfaces are included if this list is empty."
                      default:
                        - "!lo"
                        - "*"
                      items:
                        type: string
                    perInterface:
                      type: boolean
                      default: false
                      title: Per-interface metrics
                      description: Generate separate metrics for each interface
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full network metrics
                disk:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for disk metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      x-speakeasy-unknown-values: allow
                    devices:
                      type: array
                      title: Device filter
                      description: "Block devices to include/exclude. Examples: sda*, !loop*. Wildcards and ! (not) operators are supported. All devices are included if this list is empty."
                      default:
                        - "!loop*"
                        - "*"
                      items:
                        type: string
                    mountpoints:
                      type: array
                      title: Mountpoint filter
                      description: "Filesystem mountpoints to include/exclude. Examples: /, /home, !/proc*, !/tmp. Wildcards and ! (not) operators are supported. All mountpoints are included if this list is empty."
                      default: []
                      items:
                        type: string
                    fstypes:
                      type: array
                      title: Filesystem type filter
                      description: "Filesystem types to include/exclude. Examples: ext4, !*tmpfs, !squashfs. Wildcards and ! (not) operators are supported. All types are included if this list is empty."
                      default: []
                      items:
                        type: string
                    perDevice:
                      type: boolean
                      default: false
                      title: Per-device metrics
                      description: Generate separate metrics for each device
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full disk metrics
        process:
          type: object
          properties:
            sets:
              type: array
              title: Process sets
              description: Configure sets to collect process metrics
              items:
                type: object
                required:
                  - name
                  - filter
                properties:
                  name:
                    type: string
                    title: Set Name
                  filter:
                    type: string
                    title: Filter Expression
                  includeChildren:
                    type: boolean
                    title: Include Child Processes
                    default: false
        container:
          type: object
          properties:
            mode:
              type: string
              description: Select the level of detail for container metrics
              enum:
                - basic
                - all
                - custom
                - disabled
              default: basic
              x-speakeasy-unknown-values: allow
            dockerSocket:
              type: array
              title: Docker socket
              description: Full paths for Docker's UNIX-domain socket
              default:
                - /var/run/docker.sock
                - /run/docker.sock
              items:
                type: string
            dockerTimeout:
              type: number
              default: 5
              minimum: 1
              title: Docker timeout
              description: Timeout, in seconds, for the Docker API
            filters:
              type: array
              title: Container filters
              description: Containers matching any of these will be included. All are included if no filters are added.
              items:
                type: object
                required:
                  - expr
                properties:
                  expr:
                    type: string
                    title: Expression
            allContainers:
              type: boolean
              default: false
              title: All containers
              description: Include stopped and paused containers
            perDevice:
              type: boolean
              default: false
              title: Per-device metrics
              description: Generate separate metrics for each device
            detail:
              type: boolean
              default: false
              title: Detailed metrics
              description: Generate full container metrics
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
              x-speakeasy-unknown-values: allow
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/system_metrics
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/system_metrics
        description:
          type: string
          title: Description
      required:
        - type
    InputSystemState:
      type: object
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - system_state
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        interval:
          type: number
          default: 300
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive state collections. Default is 300 seconds (5 minutes).
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        collectors:
          type: object
          properties:
            hostsfile:
              type: object
              title: Hosts File
              description: Creates events based on entries collected from the hosts file
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            interfaces:
              type: object
              title: Interfaces
              description: Creates events for each of the host’s network interfaces
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            disk:
              type: object
              title: Disks & File Systems
              description: Creates events for physical disks, partitions, and file systems
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            metadata:
              type: object
              title: Host Info
              description: Creates events based on the host system’s current state
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            routes:
              type: object
              title: Routes
              description: Creates events based on entries collected from the host’s network routes
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            dns:
              type: object
              title: DNS
              description: Creates events for DNS resolvers and search entries
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            user:
              type: object
              title: Users & Groups
              description: Creates events for local users and groups
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            firewall:
              type: object
              title: Firewall
              description: Creates events for Firewall rules entries
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            services:
              type: object
              title: Services
              description: Creates events from the list of services
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            ports:
              type: object
              title: Listening Ports
              description: Creates events from list of listening ports
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            loginUsers:
              type: object
              title: Logged-In Users
              description: Creates events from list of logged-in users
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
        persistence:
          type: object
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: none
              x-speakeasy-unknown-values: allow
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/system_state
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/system_state
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell) to collect events instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-system-state/#advanced-tab)
        description:
          type: string
          title: Description
      required:
        - type
    InputKubeMetrics:
      type: object
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kube_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        interval:
          type: number
          default: 15
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metrics collections. Default is 15 secs.
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which Kubernetes objects to generate metrics for. Events are generated if no rules are given or of all the rules' expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Kubernetes objects. Return 'true' to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: "!metadata.namespace.startsWith('kube-')"
              description: Ignore the kube-* namespace
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics on disk for Cribl Search
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
              x-speakeasy-unknown-values: allow
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/kube_metrics
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/<id>
        description:
          type: string
          title: Description
      required:
        - type
    InputKubeLogs:
      type: object
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kube_logs
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        interval:
          type: number
          default: 15
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between checks for new containers. Default is 15 secs.
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which Pods to collect logs from. Logs are collected if no rules are given or if all the rules' expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Pod objects. Return 'true' to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: "!metadata.namespace.startsWith('kube-')"
              description: Ignore the kube-* namespace
        timestamps:
          type: boolean
          default: false
          title: Enable timestamps
          description: For use when containers do not emit a timestamp, prefix each line of output with a timestamp. If you enable this setting, you can use the Kubernetes Logs Event Breaker and the kubernetes_logs Pre-processing Pipeline to remove them from the events after the timestamps are extracted.
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        persistence:
          type: object
          title: Disk Spooling
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events on disk for Cribl Edge and Search. Default is disabled.
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time period for grouping spooled events. Default is 10m.
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space that can be consumed before older buckets are deleted. Examples: 420MB, 4GB. Default is 1GB."
              pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data before older buckets are deleted. Examples: 2h, 4d. Default is 24h."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Compression
              description: Data compression format. Default is gzip.
              enum:
                - none
                - gzip
              default: gzip
              x-speakeasy-unknown-values: allow
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
        description:
          type: string
          title: Description
      required:
        - type
    InputKubeEvents:
      type: object
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kube_events
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        rules:
          type: array
          title: Filter Rules
          description: Filtering on event fields
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Kubernetes objects. Return 'true' to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default: []
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      required:
        - type
    InputWindowsMetrics:
      type: object
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - windows_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metric collections. Default is 10 seconds.
        host:
          type: object
          properties:
            mode:
              type: string
              description: Select level of detail for host metrics
              enum:
                - basic
                - all
                - custom
                - disabled
              default: basic
              x-speakeasy-unknown-values: allow
            custom:
              type: object
              properties:
                system:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for system metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      x-speakeasy-unknown-values: allow
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all system information
                cpu:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for CPU metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      x-speakeasy-unknown-values: allow
                    perCpu:
                      type: boolean
                      default: false
                      title: Per-CPU metrics
                      description: Generate metrics for each CPU
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all CPU states
                    time:
                      type: boolean
                      default: false
                      title: CPU time metrics
                      description: Generate raw, monotonic CPU time counters
                memory:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for memory metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      x-speakeasy-unknown-values: allow
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all memory states
                network:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for network metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      x-speakeasy-unknown-values: allow
                    devices:
                      type: array
                      title: Interface filter
                      description: Network interfaces to include/exclude. All interfaces are included if this list is empty.
                      default:
                        - "!6to4*"
                        - "!*Debug*"
                        - "!*Virtual*"
                        - "!*Tunneling*"
                        - "!*IP-HTTPS*"
                        - "*"
                      items:
                        type: string
                    perInterface:
                      type: boolean
                      default: false
                      title: Per interface metrics
                      description: Generate separate metrics for each interface
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full network metrics
                disk:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for disk metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                      x-speakeasy-unknown-values: allow
                    volumes:
                      type: array
                      title: Volume filter
                      description: "Windows volumes to include/exclude. E.g.: C:, !E:, etc. Wildcards and ! (not) operators are supported. All volumes are included if this list is empty."
                      default:
                        - "!HarddiskVolume*"
                        - "*"
                      items:
                        type: string
                    perVolume:
                      type: boolean
                      default: false
                      title: Per volume metrics
                      description: Generate separate metrics for each volume
        process:
          type: object
          properties:
            sets:
              type: array
              title: Process sets
              description: Configure sets to collect process metrics
              items:
                type: object
                required:
                  - name
                  - filter
                properties:
                  name:
                    type: string
                    title: Set Name
                  filter:
                    type: string
                    title: Filter Expression
                  includeChildren:
                    type: boolean
                    title: Include Child Processes
                    default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
              x-speakeasy-unknown-values: allow
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/windows_metrics
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/windows_metrics
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell) to collect metrics instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-windows-metrics/#advanced-tab)
        description:
          type: string
          title: Description
      required:
        - type
    InputCrowdstrike:
      type: object
      required:
        - type
        - queueName
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - crowdstrike
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 21600
          minimum: 0
          maximum: 43200
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
        includeSqsMetadata:
          type: boolean
          title: Include notification metadata
          description: Attach SQS notification metadata to a __sqsMetadata field on each event
          default: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        tagAfterProcessing:
          enum:
            - false
            - true
          x-speakeasy-unknown-values: allow
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
    InputDatadogAgent:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - datadog_agent
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Toggle to Yes to extract each incoming metric to multiple events, one per data point. This works well when sending metrics to a statsd-type output. If sending metrics to DatadogHQ or any destination that accepts arbitrary JSON, leave toggled to No (the default).
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        proxyMode:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Forward API key validation requests
              default: false
              description: Toggle to Yes to send key validation requests from Datadog Agent to the Datadog API. If toggled to No (the default), Stream handles key validation requests by always responding that the key is valid.
            rejectUnauthorized:
              type: boolean
              title: Reject unauthorized certificates
              description: Whether to reject certificates that cannot be verified against a valid CA (e.g., self-signed certificates).
              default: true
        description:
          type: string
          title: Description
    InputDatagen:
      type: object
      required:
        - type
        - samples
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - datagen
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        samples:
          title: Datagens
          type: array
          minItems: 1
          items:
            type: object
            required:
              - sample
              - eventsPerSec
            properties:
              sample:
                type: string
                title: Data Generator File Name
              eventsPerSec:
                type: number
                title: Events Per Second Per Worker Node
                description: Maximum number of events to generate per second per Worker Node. Defaults to 10.
                default: 10
                minimum: 1
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputHttpRaw:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - http_raw
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        allowedPaths:
          type: array
          title: Allowed URI paths
          description: List of URI paths accepted by this input, wildcards are supported, e.g /api/v*/hook. Defaults to allow all.
          default:
            - "*"
          items:
            type: string
            minLength: 1
        allowedMethods:
          type: array
          title: Allowed HTTP methods
          description: List of HTTP methods accepted by this input. Wildcards are supported (such as P*, GET). Defaults to allow all.
          default:
            - "*"
          items:
            type: string
            minLength: 1
        authTokensExt:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: "Shared secret to be provided by any client (Authorization: <token>)"
              description:
                type: string
                title: Description
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputKinesis:
      type: object
      required:
        - type
        - streamName
        - region
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kinesis
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        streamName:
          type: string
          title: Stream name
          description: Kinesis Data Stream to read data from
        serviceInterval:
          type: number
          title: Service period
          description: Time interval in minutes between consecutive service calls
          default: 1
          minimum: 1
          maximum: 5
        shardExpr:
          type: string
          title: Shard selection expression
          description: A JavaScript expression to be called with each shardId for the stream. If the expression evaluates to a truthy value, the shard will be processed.
          default: "true"
        shardIteratorType:
          type: string
          title: Shard iterator start
          description: Location at which to start reading a shard for the first time
          enum:
            - TRIM_HORIZON
            - LATEST
          default: TRIM_HORIZON
          x-speakeasy-unknown-values: allow
        payloadFormat:
          type: string
          title: Record data format
          description: Format of data inside the Kinesis Stream records. Gzip compression is automatically detected.
          enum:
            - cribl
            - ndjson
            - cloudwatch
            - line
          default: cribl
          x-speakeasy-unknown-values: allow
        getRecordsLimit:
          type: number
          title: Records limit per call
          description: Maximum number of records per getRecords call
          minimum: 5000
          default: 5000
          maximum: 10000
        getRecordsLimitTotal:
          type: number
          title: Total records limit
          description: Maximum number of records, across all shards, to pull down at once per Worker Process
          minimum: 20000
          default: 20000
        loadBalancingAlgorithm:
          type: string
          title: Shard load balancing
          description: The load-balancing algorithm to use for spreading out shards across Workers and Worker Processes
          enum:
            - ConsistentHashing
            - RoundRobin
          default: ConsistentHashing
          x-speakeasy-unknown-values: allow
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the Kinesis stream is located
        endpoint:
          type: string
          title: Endpoint
          description: Kinesis stream service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to Kinesis stream-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Kinesis stream requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for Kinesis stream
          description: Use Assume Role credentials to access Kinesis stream
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        verifyKPLCheckSums:
          type: boolean
          title: Verify KPL checksums
          description: Verify Kinesis Producer Library (KPL) event checksums
          default: false
        avoidDuplicates:
          type: boolean
          title: Avoid duplicate records
          description: When resuming streaming from a stored state, Stream will read the next available record, rather than rereading the last-read record. Enabling this setting can cause data loss after a Worker Node's unexpected shutdown or restart.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
    InputCriblmetrics:
      type: object
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - criblmetrics
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        prefix:
          type: string
          title: Metric name prefix
          description: A prefix that is applied to the metrics provided by Cribl Stream
          default: cribl.logstream.
        fullFidelity:
          type: boolean
          title: Full fidelity
          description: "Include granular metrics. Disabling this will drop the following metrics events: `cribl.logstream.host.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.index.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.source.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.sourcetype.(in_bytes,in_events,out_bytes,out_events)`."
          default: true
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      required:
        - type
    InputMetrics:
      type: object
      required:
        - type
        - host
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
        udpPort:
          type: number
          title: UDP Port
          maximum: 65535
          description: Enter UDP port number to listen on. Not required if listening on TCP.
        tcpPort:
          type: number
          title: TCP Port
          maximum: 65535
          description: Enter TCP port number to listen on. Not required if listening on UDP.
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking. Only applies to UDP.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy Protocol V1 or V2
          default: false
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
        description:
          type: string
          title: Description
    InputS3:
      type: object
      required:
        - type
        - queueName
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - s3
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
        includeSqsMetadata:
          type: boolean
          title: Include notification metadata
          description: Attach SQS notification metadata to a __sqsMetadata field on each event
          default: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
        tagAfterProcessing:
          type: boolean
          title: Tag after processing
          description: Add a tag to processed S3 objects. Requires s3:GetObjectTagging and s3:PutObjectTagging AWS permissions.
          default: false
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
    InputS3Inventory:
      type: object
      required:
        - type
        - queueName
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - s3_inventory
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
        includeSqsMetadata:
          type: boolean
          title: Include notification metadata
          description: Attach SQS notification metadata to a __sqsMetadata field on each event
          default: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        checksumSuffix:
          type: string
          title: Checksum Suffix
          description: Filename suffix of the manifest checksum file. If a filename matching this suffix is received        in the queue, the matching manifest file will be downloaded and validated against its value. Defaults to "checksum"
          default: checksum
        maxManifestSizeKB:
          type: integer
          title: Manifest size limit (KB)
          description: Maximum download size (KB) of each manifest or checksum file. Manifest files larger than this size will not be read.        Defaults to 4096.
          default: 4096
          minimum: 1
        validateInventoryFiles:
          type: boolean
          title: Validate inventory files
          description: If set to Yes, each inventory file in the manifest will be validated against its checksum. Defaults to false
          default: false
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        tagAfterProcessing:
          enum:
            - false
            - true
          x-speakeasy-unknown-values: allow
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
    InputSnmp:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - snmp
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
        port:
          type: number
          title: UDP port
          maximum: 65535
          description: UDP port to receive SNMP traps on. Defaults to 162.
          default: 162
        snmpV3Auth:
          type: object
          title: SNMPv3 authentication
          description: Authentication parameters for SNMPv3 trap. Set the log level to debug if you are experiencing authentication or decryption issues.
          required:
            - v3AuthEnabled
          properties:
            v3AuthEnabled:
              type: boolean
              title: Enabled
              default: false
            allowUnmatchedTrap:
              type: boolean
              title: Allow unmatched traps
              description: Pass through traps that don't match any of the configured users. @{product} will not attempt to decrypt these traps.
              default: false
            v3Users:
              type: array
              title: SNMP v3 users
              description: User credentials for receiving v3 traps
              minItems: 1
              items:
                type: object
                required:
                  - name
                properties:
                  name:
                    title: V3 name
                    type: string
                    minLength: 1
                  authProtocol:
                    type: string
                    default: none
                    enum:
                      - none
                      - md5
                      - sha
                      - sha224
                      - sha256
                      - sha384
                      - sha512
                    title: Authentication protocol
                    x-speakeasy-unknown-values: allow
                  authKey: {}
                  privProtocol:
                    default: none
                    type: string
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
        varbindsWithTypes:
          type: boolean
          title: Include varbind types
          description: If enabled, parses varbinds as an array of objects that include OID, value, and type
          default: false
        bestEffortParsing:
          type: boolean
          title: Best effort parsing
          description: If enabled, the parser will attempt to parse varbind octet strings as UTF-8, first, otherwise will fallback to other methods
          default: false
        description:
          type: string
          title: Description
    InputOpenTelemetry:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - open_telemetry
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 4317
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader: {}
        captureHeaders: {}
        activityLogSampleRate: {}
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 sec.; maximum 600 sec. (10 min.).
          default: 15
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Enable to expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist.
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        protocol:
          type: string
          title: Protocol
          description: Select whether to leverage gRPC or HTTP for OpenTelemetry
          enum:
            - grpc
            - http
          default: grpc
          x-speakeasy-unknown-values: allow
        extractSpans:
          type: boolean
          title: Extract spans
          description: Enable to extract each incoming span to a separate event
          default: false
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Enable to extract each incoming Gauge or IntGauge metric to multiple events, one per data point
          default: false
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when interpreting received data
          enum:
            - 0.10.0
            - 1.3.1
          default: 0.10.0
          x-speakeasy-unknown-values: allow
        authType:
          type: string
          title: Authentication type
          description: OpenTelemetry authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          x-speakeasy-unknown-values: allow
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
        extractLogs:
          type: boolean
          title: Extract logs
          description: Enable to extract each incoming log record to a separate event
          default: false
    InputModelDrivenTelemetry:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - model_driven_telemetry
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 57000
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        shutdownTimeoutMs:
          type: number
          title: Shutdown timeout
          description: Time in milliseconds to allow the server to shutdown gracefully before forcing shutdown. Defaults to 5000.
          default: 5000
          minimum: 1
        description:
          type: string
          title: Description
    InputSqs:
      type: object
      required:
        - type
        - queueName
        - queueType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - sqs
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read events from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can only be evaluated at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        queueType:
          title: Queue type
          type: string
          description: The queue type used (or created)
          enum:
            - standard
            - fifo
          default: standard
          x-speakeasy-unknown-values: allow
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
        createQueue:
          type: boolean
          title: Create queue
          description: Create queue if it does not exist
          default: false
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the SQS queue is located. Required, unless the Queue entry is a URL or ARN that includes a Region.
        endpoint:
          type: string
          title: Endpoint
          description: SQS service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to SQS-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SQS requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for SQS
          description: Use Assume Role credentials to access SQS
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 10
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: number
          title: Visibility Timeout Seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 3
          minimum: 1
          maximum: 100
    InputSyslog:
      type: object
      required:
        - type
        - host
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - syslog
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
        udpPort:
          type: number
          title: UDP port
          maximum: 65535
          description: Enter UDP port number to listen on. Not required if listening on TCP.
        tcpPort:
          type: number
          title: TCP port
          maximum: 65535
          description: Enter TCP port number to listen on. Not required if listening on UDP.
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking. Only applies to UDP.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        timestampTimezone:
          type: string
          title: Default timezone
          description: Timezone to assign to timestamps without timezone info
          default: local
        singleMsgUdpPackets:
          type: boolean
          title: Single msg per UDP
          description: Treat UDP packet data received as full syslog message
          default: false
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy Protocol V1 or V2
          default: false
        keepFieldsList:
          type: array
          title: Fields to keep
          description: Wildcard list of fields to keep from source data; * = ALL (default)
          default: []
          items:
            type: string
        octetCounting:
          type: boolean
          title: Octet count framing
          description: Enable if incoming messages use octet counting per RFC 6587.
          default: false
        inferFraming:
          type: boolean
          title: Infer Syslog framing
          description: Enable if we should infer the syslog framing of the incoming messages.
          default: true
        strictlyInferOctetCounting:
          type: boolean
          title: Strictly infer octet count framing
          description: Enable if we should infer octet counting only if the messages comply with RFC 5424.
          default: true
        allowNonStandardAppName:
          type: boolean
          title: Allow non-standard app name
          description: Enable if RFC 3164-formatted messages have hyphens in the app name portion of the TAG section. If disabled, only alphanumeric characters and underscores are allowed. Ignored for RFC 5424-formatted messages.
          default: false
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process for TCP connections. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: TCP socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: TCP forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: TCP Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
        enableLoadBalancing:
          type: boolean
          title: Enable TCP load balancing
          description: Load balance traffic across all Worker Processes
          default: false
        description:
          type: string
          title: Description
        enableEnhancedProxyHeaderParsing:
          type: boolean
          title: Enable enhanced TLS handshake for proxy protocol
          description: When enabled, parses PROXY protocol headers during the TLS handshake. Disable if compatibility issues arise.
      anyOf:
        - required:
            - host
            - udpPort
        - required:
            - host
            - tcpPort
    InputFile:
      type: object
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          enum:
            - file
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        mode:
          type: string
          enum:
            - auto
            - manual
          default: auto
          description: Choose how to discover files to monitor
          x-speakeasy-unknown-values: allow
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between scanning for files
        filenames:
          type: array
          title: Filename allowlist
          description: The full path of discovered files are matched against this wildcard list
          default:
            - "*/log/*"
            - "*log"
          items:
            type: string
        tailOnly:
          type: boolean
          default: false
          title: Collect from end
          description: Read only new entries at the end of all files discovered at next startup. @{product} will then read newly discovered files from the head. Disable this to resume reading all files from head.
        idleTimeout:
          type: number
          default: 300
          minimum: 1
          title: Idle timeout
          description: Time, in seconds, before an idle file is closed
        maxAgeDur:
          type: string
          title: Age duration limit
          description: "The maximum age of files to monitor. Format examples: 60s, 4h, 3d, 1w. Age is relative to file modification time. Leave empty to apply no age filters."
        checkFileModTime:
          type: boolean
          default: false
          title: Check file modification times
          description: Skip files with modification times earlier than the maximum age duration
        forceText:
          type: boolean
          default: false
          title: Force text format
          description: Forces files containing binary data to be streamed as text
        hashLen:
          type: number
          default: 256
          minimum: 1
          title: Hash length
          description: Length of file header bytes to use in hash for unique file identification
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        description:
          type: string
          title: Description
        path:
          type: string
          title: Search path
          description: Directory path to search for files. Environment variables will be resolved, e.g. $CRIBL_HOME/log/.
        depth:
          type: number
          minimum: 0
          title: Max depth
          description: Set how many subdirectories deep to search. Use 0 to search only files in the given path, 1 to also look in its immediate subdirectories, etc. Leave it empty for unlimited depth.
        suppressMissingPathErrors:
          type: boolean
          default: false
          title: Suppress errors when search path does not exist
        deleteFiles:
          type: boolean
          default: false
          title: Delete files
          description: Delete files after they have been collected
        includeUnidentifiableBinary:
          type: boolean
          default: false
          title: Enable binary files
          description: Stream binary files as Base64-encoded chunks.
      required:
        - type
    InputTcp:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - tcp
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        enableHeader:
          type: boolean
          title: Enable header
          description: 'Client will pass the header record with every new connection. The header can contain an authToken, and an object with a list of fields and values to add to every event. These fields can be used to simplify Event Breaker selection, routing, etc. Header has this format, and must be followed by a newline: { "authToken" : "myToken", "fields": { "field1": "value1", "field2": "value2" } }'
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        description:
          type: string
          title: Description
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
    InputAppscope:
      type: object
      required:
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - appscope
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        enableUnixPath:
          type: boolean
          title: UNIX domain socket
          description: Toggle to Yes to specify a file-backed UNIX domain socket connection, instead of a network host and port.
          default: false
        filter:
          type: object
          properties:
            allow:
              type: array
              title: Rules
              description: Specify processes that AppScope should be loaded into, and the config to use.
              items:
                type: object
                properties:
                  procname:
                    type: string
                    title: Process name
                    description: Specify the name of a process or family of processes.
                  arg:
                    type: string
                    title: Process argument
                    description: Specify a string to substring-match against process command-line.
                  config:
                    type: string
                    title: AppScope config
                    description: Choose a config to apply to processes that match the process name and/or argument.
                required:
                  - procname
                  - config
            transportURL:
              type: string
              title: Transport override
              description: To override the UNIX domain socket or address/port specified in General Settings (while leaving Authentication settings as is), enter a URL.
        persistence:
          type: object
          title: Persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events and metrics on disk for Cribl Edge and Search
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
              x-speakeasy-unknown-values: allow
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/appscope
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/appscope
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        unixSocketPath:
          type: string
          title: UNIX socket path
          default: $CRIBL_HOME/state/appscope.sock
          description: Path to the UNIX domain socket to listen on.
        unixSocketPerms:
          type: string
          title: UNIX socket permissions
          description: Permissions to set for socket e.g., 777. If empty, falls back to the runtime user's default permissions.
        authToken:
          type: string
          title: Auth token
          description: Shared secret to be provided by any client (in authToken header field). If empty, unauthorized access is permitted.
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
    InputWef:
      type: object
      required:
        - type
        - host
        - port
        - subscriptions
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - wef
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 5986
        authMethod:
          type: string
          title: Authentication method
          description: How to authenticate incoming client connections
          enum:
            - clientCert
            - kerberos
          default: clientCert
          x-speakeasy-unknown-values: allow
        tls:
          type: object
          title: mTLS settings
          required:
            - privKeyPath
            - certPath
            - caPath
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable TLS
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate client certs
              description: Required for WEF certificate authentication
              default: true
            requestCert:
              type: boolean
              title: Authenticate client
              description: Required for WEF certificate authentication
              default: true
            certificateName:
              type: string
              title: Certificate
              description: Name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Server path containing CA certificates (in PEM format) to use. Can reference $ENV_VARS. If multiple certificates are present in a .pem, each must directly certify the one preceding it.
            commonNameRegex:
              type: string
              title: Common name
              description: Regex matching allowable common names in peer certificates' subject attribute
              default: /.*/
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            ocspCheck:
              type: boolean
              title: Verify certificate via OCSP
              description: Enable OCSP check of certificate
              default: false
            keytab: {}
            principal: {}
            ocspCheckFailClose:
              type: boolean
              title: Strict validation
              description: If enabled, checks will fail on any OCSP error. Otherwise, checks will fail only when a certificate is revoked, ignoring other errors.
              default: false
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Preserve the client’s original IP address in the __srcIpPort field when connecting through an HTTP proxy that supports the X-Forwarded-For header. This does not apply to TCP-layer Proxy Protocol v1/v2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events in the __headers field
          default: false
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 90
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        caFingerprint:
          type: string
          title: CA fingerprint override
          description: SHA1 fingerprint expected by the client, if it does not match the first certificate in the configured CA chain
        keytab:
          type: string
          title: Keytab location
          description: Path to the keytab file containing the service principal credentials. @{product} will use `/etc/krb5.keytab` if not provided.
        principal:
          type: string
          title: Service principal name
          description: Kerberos principal used for authentication, typically in the form HTTP/<hostname>@<REALM>
        allowMachineIdMismatch:
          type: boolean
          title: Allow MachineID mismatch
          description: Allow events to be ingested even if their MachineID does not match the client certificate CN
          default: false
        subscriptions:
          title: Subscriptions
          description: Subscriptions to events on forwarding endpoints
          type: array
          items:
            type: object
            required:
              - subscriptionName
              - contentFormat
              - heartbeatInterval
              - batchTimeout
              - targets
            minLength: 1
            properties:
              subscriptionName:
                title: Subscription name
                type: string
              version:
                title: Version
                type: string
                description: Version UUID for this subscription. If any subscription parameters are modified, this value will change.
              contentFormat:
                title: Format
                type: string
                enum:
                  - Raw
                  - RenderedText
                description: Content format in which the endpoint should deliver events
                default: Raw
                x-speakeasy-unknown-values: allow
              heartbeatInterval:
                title: Heartbeat
                type: number
                description: Maximum time (in seconds) between endpoint checkins before considering it unavailable
                minimum: 1
                default: 60
              batchTimeout:
                title: Batch timeout
                type: number
                description: Interval (in seconds) over which the endpoint should collect events before sending them to Stream
                minimum: 0
                default: 60
              readExistingEvents:
                title: Read existing events
                type: boolean
                description: Newly subscribed endpoints will send previously existing events. Disable to receive new events only.
                default: false
              sendBookmarks:
                title: Use bookmarks
                type: boolean
                description: Keep track of which events have been received, resuming from that point after a re-subscription. This setting takes precedence over 'Read existing events'. See [Cribl Docs](https://docs.cribl.io/stream/sources-wef/#subscriptions) for more details.
                default: true
              compress:
                title: Compression
                type: boolean
                description: Receive compressed events from the source
                default: true
              targets:
                type: array
                title: Targets
                description: The DNS names of the endpoints that should forward these events. You may use wildcards, such as *.mydomain.com
                items:
                  type: string
                  minLength: 1
                default:
                  - "*"
              locale:
                title: Locale
                type: string
                description: The RFC-3066 locale the Windows clients should use when sending events. Defaults to "en-US".
                default: en-US
              querySelector:
                type: string
                title: Query builder mode
                enum:
                  - simple
                  - xml
                default: simple
                x-speakeasy-unknown-values: allow
              metadata:
                type: array
                title: Fields
                description: Fields to add to events ingested under this subscription
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        logFingerprintMismatch:
          type: boolean
          title: Log CA fingerprint mismatch warning
          description: Log a warning if the client certificate authority (CA) fingerprint does not match the expected value. A mismatch prevents Cribl from receiving events from the Windows Event Forwarder.
          default: false
    InputWinEventLogs:
      type: object
      required:
        - type
        - logNames
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - win_event_logs
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        logNames:
          type: array
          title: Event logs
          description: Enter the event logs to collect. Run "Get-WinEvent -ListLog *" in PowerShell to see the available logs.
          default:
            - ""
          items:
            minLength: 1
            type: string
          minItems: 1
          uniqueItems: true
        readMode:
          type: string
          default: newest
          enum:
            - oldest
            - newest
          title: Read mode
          description: Read all stored and future event logs, or only future events
          x-speakeasy-unknown-values: allow
        eventFormat:
          type: string
          default: json
          enum:
            - json
            - xml
          title: Event format
          description: Format of individual events
          x-speakeasy-unknown-values: allow
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell for JSON, wevtutil for XML) to collect event logs instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-windows-event-logs/#advanced-settings)
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between checking for new entries (Applicable for pre-4.8.0 nodes that use Windows Tools)
        batchSize:
          type: number
          default: 500
          minimum: 1
          title: Batch size
          description: The maximum number of events to read in one polling interval. A batch size higher than 500 can cause delays when pulling from multiple event logs. (Applicable for pre-4.8.0 nodes that use Windows Tools)
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        maxEventBytes:
          type: number
          title: Max event bytes
          description: The maximum number of bytes in an event before it is flushed to the pipelines
          default: 51200
          minimum: 1
          maximum: 134217728
        description:
          type: string
          title: Description
    InputRawUdp:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - raw_udp
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        singleMsgUdpPackets:
          type: boolean
          title: Single msg per UDP
          description: If true, each UDP packet is assumed to contain a single message. If false, each UDP packet is assumed to contain multiple messages, separated by newlines.
          default: false
        ingestRawBytes:
          type: boolean
          title: Ingest raw bytes
          description: If true, a __rawBytes field will be added to each event containing the raw bytes of the datagram.
          default: false
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputJournalFiles:
      type: object
      required:
        - type
        - path
        - journals
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          enum:
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        path:
          type: string
          title: Search path
          description: Directory path to search for journals. Environment variables will be resolved, e.g. $CRIBL_EDGE_FS_ROOT/var/log/journal/$MACHINE_ID.
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: "Time, in seconds, between scanning for journals. "
        journals:
          type: array
          title: Journal allowlist
          description: The full path of discovered journals are matched against this wildcard list.
          default:
            - system
          items:
            type: string
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which journal objects to allow. Events are generated if no rules are given or if all the rules' expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Journal objects. Return 'true' to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: severity <= 4
              description: Allow log messages having 'emergency', 'alert', 'critical', 'error', or 'warning' priority
        currentBoot:
          type: boolean
          default: false
          title: Current boot only
          description: Skip log messages that are not part of the current boot session.
        maxAgeDur:
          type: string
          title: Age duration limit
          description: "The maximum log message age, in duration form (e.g,: 60s, 4h, 3d, 1w).  Default of no value will apply no max age filters."
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputWiz:
      type: object
      required:
        - type
        - endpoint
        - authUrl
        - clientId
        - contentConfig
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - wiz
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        endpoint:
          type: string
          title: GraphQL endpoint
          description: "The Wiz GraphQL API endpoint. Example: https://api.us1.app.wiz.io/graphql"
          default: https://api.<region>.app.wiz.io/graphql
          pattern: ^https:\/\/
        authUrl:
          type: string
          title: Authentication URL
          description: The authentication URL to generate an OAuth token
        authAudienceOverride:
          type: string
          title: Authentication audience
          description: The audience to use when requesting an OAuth token for a custom auth URL. When not specified, `wiz-api` will be used.
        clientId:
          type: string
          title: Client ID
          description: The client ID of the Wiz application
        contentConfig:
          type: array
          title: Content types
          default:
            - contentType: Audit Logs
              contentDescription: Get all Audit Logs
              contentQuery: |-
                ({
















                  query: `query AuditLogTable($first: Int $after: String $filterBy: AuditLogEntryFilters){
                    auditLogEntries(first: $first after: $after filterBy: $filterBy) {
                      nodes {
                        id
                        action
                        requestId
                        status
                        timestamp
                        actionParameters
                        userAgent
                        sourceIP
                        serviceAccount {
                          id
                          name
                        }
                        user {
                          id
                          name
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      timestamp: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      },
                      status: ["SUCCESS", "FAILED","INVALID","ACCESS_DENIED"]
                    }
                  }
                })
              cronSchedule: "*/15 * * * *"
              earliest: -15m@m
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 100
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
            - contentType: Configuration Findings
              contentDescription: Get Cloud Configuration Report
              contentQuery: |-
                ({
















                  query: `query CloudConfigurationFindingsPage($filterBy: ConfigurationFindingFilters, $first: Int, $after: String, $orderBy: ConfigurationFindingOrder) {
                    configurationFindings(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                      nodes {
                        id
                        targetExternalId
                        targetObjectProviderUniqueId
                        firstSeenAt
                        severity
                        result
                        status
                        remediation
                        resource {
                          id
                          providerId
                          name
                          nativeType
                          type
                          region
                          subscription {
                            id
                            name
                            externalId
                            cloudProvider
                          }
                          projects {
                            id
                            name
                            riskProfile {
                              businessImpact
                            }
                          }
                          tags {
                            key
                            value
                          }
                        }
                        rule {
                          id
                          graphId
                          name
                          description
                          remediationInstructions
                          functionAsControl
                        }
                        securitySubCategories {
                          id
                          title
                          category {
                            id
                            name
                            framework {
                              id
                              name
                            }
                          }
                        }
                        ignoreRules {
                          id
                          name
                          enabled
                          expiredAt
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      id: [],
                      source: [],
                      rule: {
                        id: [],
                        name: [],
                        description: []
                      },
                      result: ["PASS","FAIL","ERROR", "NOT_ASSESSED"],
                      severity: ["NONE","LOW","MEDIUM","HIGH","CRITICAL"],
                      status: ["OPEN","IN_PROGRESS","RESOLVED","REJECTED"
                      ],
                      frameworkCategory: [],
                      firstSeenAt: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      }
                    }
                  }
                })
              cronSchedule: 0 */12 * * *
              earliest: -12h@h
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 100
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
            - contentType: Issues
              contentDescription: Get Open Issues
              contentQuery: |-
                ({
















                  query: `query IssuesTable($filterBy: IssueFilters, $first: Int, $after: String, $orderBy: IssueOrder) {
                    issues: issuesV2(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                      nodes {
                        id
                        control {
                          id
                          name
                          description
                          resolutionRecommendation
                          securitySubCategories {
                            title
                            category {
                              name
                              framework {
                                name
                              }
                            }
                          }
                        }
                        createdAt
                        updatedAt
                        sourceRule {
                          id
                          name
                        }
                        dueAt
                        resolvedAt
                        statusChangedAt
                        project {
                          id
                          name
                          slug
                          businessUnit
                          riskProfile {
                            businessImpact
                          }
                        }
                        status
                        severity
                        type
                        entitySnapshot {
                          id
                          type
                          nativeType
                          name
                          status
                          cloudPlatform
                          cloudProviderURL
                          providerId
                          region
                          resourceGroupExternalId
                          subscriptionExternalId
                          subscriptionName
                          subscriptionTags
                          tags
                          externalId
                        }
                        notes {
                          createdAt
                          updatedAt
                          text
                          user {
                            name
                            email
                          }
                          serviceAccount {
                            name
                          }
                        }
                        serviceTickets {
                          externalId
                          name
                          url
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      sourceRule: {
                        id: []
                      },
                      relatedEntity: {
                        type: []
                      },
                      status: ["OPEN","IN_PROGRESS","RESOLVED","REJECTED"],
                      severity: ["INFORMATIONAL","LOW","MEDIUM","HIGH","CRITICAL"],
                      type: ["TOXIC_COMBINATION","THREAT_DETECTION","CLOUD_CONFIGURATION"],
                      createdAt: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      }
                    }
                  }
                })
              cronSchedule: 0 */12 * * *
              earliest: -12h@h
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 0
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
            - contentType: Vulnerabilities
              contentDescription: Get Vulnerability Findings
              contentQuery: |-
                ({
















                  query: `query VulnerabilityFindingsPage($filterBy: VulnerabilityFindingFilters, $first: Int, $after: String, $orderBy: VulnerabilityFindingOrder) {
                    vulnerabilityFindings(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                      nodes {
                        id
                        portalUrl
                        name
                        CVEDescription
                        CVSSSeverity
                        score
                        exploitabilityScore
                        impactScore
                        hasExploit
                        hasCisaKevExploit
                        status
                        vendorSeverity
                        firstDetectedAt
                        lastDetectedAt
                        resolvedAt
                        description
                        remediation
                        detailedName
                        version
                        fixedVersion
                        detectionMethod
                        link
                        locationPath
                        resolutionReason
                        vulnerableAsset {
                          ... on VulnerableAssetBase {
                            id
                            type
                            name
                            region
                            providerUniqueId
                            cloudProviderURL
                            cloudPlatform
                            status
                            subscriptionName
                            subscriptionExternalId
                            subscriptionId
                            tags
                          }
                          ... on VulnerableAssetVirtualMachine {
                            operatingSystem
                            ipAddresses
                          }
                          ... on VulnerableAssetServerless {
                            runtime
                          }
                          ... on VulnerableAssetContainerImage {
                            imageId
                          }
                          ... on VulnerableAssetContainer {
                            ImageExternalId
                            VmExternalId
                            ServerlessContainer
                            PodNamespace
                            PodName
                            NodeName
                          }
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      id: [],
                      status: [],
                      assetType: [],
                      vendorSeverity: [],
                      assetId: [],
                      vulnerabilityId: [],
                      detectionMethod: [],
                      assetStatus: [],
                      firstSeenAt: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      }
                    }
                  }
                })
              cronSchedule: 0 */12 * * *
              earliest: -12h@h
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 0
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
          items:
            type: object
            required:
              - contentType
              - contentQuery
              - cronSchedule
              - earliest
              - latest
            properties:
              contentType:
                type: string
                title: Content name
                description: The name of the Wiz query
                pattern: ^[a-zA-Z0-9_-\s]+$
              contentDescription:
                type: string
                title: Description
              enabled:
                type: boolean
                title: Enable content
                default: false
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Use 0 to disable.
          minimum: 0
          maximum: 2400
          default: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
              x-speakeasy-unknown-values: allow
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of HTTP codes that trigger a retry. Leave empty to use the default list of 429 and 503.
              minItems: 1
              default:
                - 429
                - 503
              items:
                type: number
                minLength: 1
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        clientSecret:
          type: string
          title: Client secret
          description: The client secret of the Wiz application
        textSecret:
          type: string
          title: Client Secret (text secret)
          description: Select or create a stored text secret
    InputWizWebhook:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - wiz_webhook
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          default:
            - Cribl - Do Not Break Ruleset
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        allowedPaths:
          type: array
          title: Allowed URI paths
          description: List of URI paths accepted by this input. Wildcards are supported (such as /api/v*/hook). Defaults to allow all.
          default:
            - "*"
          items:
            type: string
            minLength: 1
        allowedMethods:
          type: array
          title: Allowed HTTP methods
          description: List of HTTP methods accepted by this input. Wildcards are supported (such as P*, GET). Defaults to allow all.
          default:
            - "*"
          items:
            type: string
            minLength: 1
        authTokensExt:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: "Shared secret to be provided by any client (Authorization: <token>)"
              description:
                type: string
                title: Description
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputNetflow:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - netflow
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 2055
        enablePassThrough:
          type: boolean
          title: Enable pass-through
          default: false
          description: Allow forwarding of events to a NetFlow destination. Enabling this feature will generate an extra event containing __netflowRaw which can be routed to a NetFlow destination. Note that these events will not count against ingest quota.
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist.
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
        templateCacheMinutes:
          type: number
          title: Template cache minutes
          description: Specifies how many minutes NetFlow v9 templates are cached before being discarded if not refreshed. Adjust based on your network's template update frequency to optimize performance and memory usage.
          minimum: 1
          maximum: 3600
          default: 30
        v5Enabled:
          type: boolean
          title: V5
          description: Accept messages in Netflow V5 format.
          default: true
        v9Enabled:
          type: boolean
          title: V9
          description: Accept messages in Netflow V9 format.
          default: true
        ipfixEnabled:
          type: boolean
          title: IPFIX
          description: Accept messages in IPFIX format.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
    InputSecurityLake:
      type: object
      required:
        - type
        - queueName
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - security_lake
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
        includeSqsMetadata:
          type: boolean
          title: Include notification metadata
          description: Attach SQS notification metadata to a __sqsMetadata field on each event
          default: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        tagAfterProcessing:
          enum:
            - false
            - true
          x-speakeasy-unknown-values: allow
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
    InputZscalerHec:
      type: object
      required:
        - type
        - host
        - port
        - hecAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - zscaler_hec
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
              x-speakeasy-unknown-values: allow
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              x-speakeasy-unknown-values: allow
            pqControls:
              type: object
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              authType:
                title: Authentication method
                type: string
                enum:
                  - manual
                  - secret
                default: manual
                description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                x-speakeasy-unknown-values: allow
              tokenSecret: {}
              token: {}
              enabled:
                type: boolean
                title: Enable token
                default: true
              description:
                type: string
                title: Description
              allowedIndexesAtToken:
                type: array
                title: Allowed indexes
                description: Enter the values you want to allow in the HEC event index field at the token level. Supports wildcards. To skip validation, leave blank.
                items:
                  type: string
                  minLength: 1
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck: {}
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        hecAPI:
          type: string
          title: HEC endpoint
          description: Absolute path on which to listen for the Zscaler HTTP Event Collector API requests. This input supports the /event endpoint.
          default: /services/collector
          pattern: ^/
        metadata:
          type: array
          title: Fields
          description: Fields to add to every event. May be overridden by fields added at the token or request level.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        allowedIndexes:
          type: array
          title: Allowed indexes
          description: List values allowed in HEC event index field. Leave blank to skip validation. Supports wildcards. The values here can expand index validation at the token level.
          items:
            type: string
            minLength: 1
        hecAcks:
          type: boolean
          title: Zscaler HEC Acks
          description: Whether to enable Zscaler HEC acknowledgements
          default: false
        accessControlAllowOrigin:
          title: CORS allowed origins
          type: array
          description: Optionally, list HTTP origins to which @{product} should send CORS (cross-origin resource sharing) Access-Control-Allow-* headers. Supports wildcards.
          items:
            type: string
            minLength: 1
        accessControlAllowHeaders:
          title: CORS allowed headers
          type: array
          description: Optionally, list HTTP headers that @{product} will send to allowed origins as "Access-Control-Allow-Headers" in a CORS preflight response. Use "*" to allow all headers.
          items:
            type: string
            minLength: 1
        emitTokenMetrics:
          type: boolean
          title: Emit per-token request metrics
          description: Enable to emit per-token (<prefix>.http.perToken) and summary (<prefix>.http.summary) request metrics
          default: false
        description:
          type: string
          title: Description
    Input:
      oneOf:
        - $ref: "#/components/schemas/InputCollection"
        - $ref: "#/components/schemas/InputKafka"
        - $ref: "#/components/schemas/InputMsk"
        - $ref: "#/components/schemas/InputHttp"
        - $ref: "#/components/schemas/InputSplunk"
        - $ref: "#/components/schemas/InputSplunkSearch"
        - $ref: "#/components/schemas/InputSplunkHec"
        - $ref: "#/components/schemas/InputAzureBlob"
        - $ref: "#/components/schemas/InputElastic"
        - $ref: "#/components/schemas/InputConfluentCloud"
        - $ref: "#/components/schemas/InputGrafana"
        - $ref: "#/components/schemas/InputLoki"
        - $ref: "#/components/schemas/InputPrometheusRw"
        - $ref: "#/components/schemas/InputPrometheus"
        - $ref: "#/components/schemas/InputEdgePrometheus"
        - $ref: "#/components/schemas/InputOffice365Mgmt"
        - $ref: "#/components/schemas/InputOffice365Service"
        - $ref: "#/components/schemas/InputOffice365MsgTrace"
        - $ref: "#/components/schemas/InputEventhub"
        - $ref: "#/components/schemas/InputExec"
        - $ref: "#/components/schemas/InputFirehose"
        - $ref: "#/components/schemas/InputGooglePubsub"
        - $ref: "#/components/schemas/InputCribl"
        - $ref: "#/components/schemas/InputCriblTcp"
        - $ref: "#/components/schemas/InputCriblHttp"
        - $ref: "#/components/schemas/InputCriblLakeHttp"
        - $ref: "#/components/schemas/InputTcpjson"
        - $ref: "#/components/schemas/InputSystemMetrics"
        - $ref: "#/components/schemas/InputSystemState"
        - $ref: "#/components/schemas/InputKubeMetrics"
        - $ref: "#/components/schemas/InputKubeLogs"
        - $ref: "#/components/schemas/InputKubeEvents"
        - $ref: "#/components/schemas/InputWindowsMetrics"
        - $ref: "#/components/schemas/InputCrowdstrike"
        - $ref: "#/components/schemas/InputDatadogAgent"
        - $ref: "#/components/schemas/InputDatagen"
        - $ref: "#/components/schemas/InputHttpRaw"
        - $ref: "#/components/schemas/InputKinesis"
        - $ref: "#/components/schemas/InputCriblmetrics"
        - $ref: "#/components/schemas/InputMetrics"
        - $ref: "#/components/schemas/InputS3"
        - $ref: "#/components/schemas/InputS3Inventory"
        - $ref: "#/components/schemas/InputSnmp"
        - $ref: "#/components/schemas/InputOpenTelemetry"
        - $ref: "#/components/schemas/InputModelDrivenTelemetry"
        - $ref: "#/components/schemas/InputSqs"
        - $ref: "#/components/schemas/InputSyslog"
        - $ref: "#/components/schemas/InputFile"
        - $ref: "#/components/schemas/InputTcp"
        - $ref: "#/components/schemas/InputAppscope"
        - $ref: "#/components/schemas/InputWef"
        - $ref: "#/components/schemas/InputWinEventLogs"
        - $ref: "#/components/schemas/InputRawUdp"
        - $ref: "#/components/schemas/InputJournalFiles"
        - $ref: "#/components/schemas/InputWiz"
        - $ref: "#/components/schemas/InputWizWebhook"
        - $ref: "#/components/schemas/InputNetflow"
        - $ref: "#/components/schemas/InputSecurityLake"
        - $ref: "#/components/schemas/InputZscalerHec"
    AddHecTokenRequest:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
            required:
              - name
              - value
        token:
          type: string
      required:
        - token
    UpdateHecTokenRequest:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
            required:
              - name
              - value
    OutputDefault:
      type: object
      required:
        - type
        - defaultId
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - default
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        defaultId:
          type: string
          title: Default Output ID
          description: ID of the default output. This will be used whenever a nonexistent/deleted output is referenced.
    OutputWebhook:
      type: object
      required:
        - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - webhook
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        method:
          type: string
          title: Method
          description: The method to use when sending events
          enum:
            - POST
            - PUT
            - PATCH
          default: POST
          x-speakeasy-unknown-values: allow
        format:
          type: string
          title: Format
          description: How to format events before sending out
          enum:
            - ndjson
            - json_array
            - custom
            - advanced
          default: ndjson
          x-speakeasy-unknown-values: allow
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 512000
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events. You can also add headers dynamically on a per-event basis in the __headers field, as explained in [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          type: string
          title: Authentication type
          description: Authentication method to use for the HTTP request
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          x-speakeasy-unknown-values: allow
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
          default: false
        description:
          type: string
          title: Description
        customSourceExpression:
          type: string
          title: Source expression
          description: "Expression to evaluate on events to generate output. Example: `raw=${_raw}`. See [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook#custom-format) for other examples. If empty, the full event is sent as stringified JSON."
          default: __httpOut
        customDropWhenNull:
          type: boolean
          title: Drop when null
          description: Whether to drop events when the source expression evaluates to null
          default: false
        customEventDelimiter:
          type: string
          title: Event delimiter
          description: Delimiter string to insert between individual events. Defaults to newline character.
          default: \n
        customContentType:
          type: string
          title: Content type
          description: Content type to use for request. Defaults to application/x-ndjson. Any content types set in Advanced Settings > Extra HTTP headers will override this entry.
          default: application/x-ndjson
        customPayloadExpression:
          type: string
          title: Batch expression
          description: 'Expression specifying how to format the payload for each batch. To reference the events to send, use the `${events}` variable. Example expression: `{ "items" : [${events}] }` would send the batch inside a JSON object.'
          default: "`${events}`"
        advancedContentType:
          type: string
          title: Content type
          description: HTTP content-type header value
          default: application/json
        formatEventCode:
          type: string
          title: Format inbound event
          description: "Custom JavaScript code to format incoming event data accessible through the __e variable. The formatted content is added to (__e['__eventOut']) if available. Otherwise, the original event is serialized as JSON. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code."
        formatPayloadCode:
          type: string
          title: Format outbound payload
          description: "Optional JavaScript code to format the payload sent to the Destination. The payload, containing a batch of formatted events, is accessible through the __e['payload'] variable. The formatted payload is returned in the __e['__payloadOut'] variable. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code."
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
        url:
          type: string
          title: Webhook URL
          description: URL of a webhook endpoint to send events to, such as http://localhost:10200
          pattern: ^https?://.*
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
        urls:
          type: array
          title: Webhook URLs
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: Webhook LB URL
                description: URL of a webhook endpoint to send events to, such as http://localhost:10200
                pattern: ^https?://.*
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
    OutputSentinel:
      type: object
      required:
        - type
        - endpointURLConfiguration
        - loginUrl
        - secret
        - client_id
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - sentinel
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size (KB) of the request body (defaults to the API's maximum limit of 1000 KB)
          default: 1000
          minimum: 100
          maximum: 1000
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events. You can also add headers dynamically on a per-event basis in the __headers field, as explained in [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          enum:
            - oauth
          x-speakeasy-unknown-values: allow
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        client_id:
          title: Client ID
          type: string
          description: JavaScript expression to compute the Client ID for the Azure application. Can be a constant.
        scope:
          title: Scope
          type: string
          description: Scope to pass in the OAuth request
          default: https://monitor.azure.com/.default
        endpointURLConfiguration:
          title: Endpoint configuration
          description: Enter the data collection endpoint URL or the individual ID
          type: string
          enum:
            - url
            - ID
          default: url
          x-speakeasy-unknown-values: allow
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
        description:
          type: string
          title: Description
        format:
          enum:
            - ndjson
            - json_array
            - custom
            - advanced
          x-speakeasy-unknown-values: allow
        customSourceExpression:
          type: string
          title: Source expression
          description: "Expression to evaluate on events to generate output. Example: `raw=${_raw}`. See [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook#custom-format) for other examples. If empty, the full event is sent as stringified JSON."
          default: __httpOut
        customDropWhenNull:
          type: boolean
          title: Drop when null
          description: Whether to drop events when the source expression evaluates to null
          default: false
        customEventDelimiter:
          type: string
          title: Event delimiter
          description: Delimiter string to insert between individual events. Defaults to newline character.
          default: \n
        customContentType:
          type: string
          title: Content type
          description: Content type to use for request. Defaults to application/x-ndjson. Any content types set in Advanced Settings > Extra HTTP headers will override this entry.
          default: application/x-ndjson
        customPayloadExpression:
          type: string
          title: Batch expression
          description: 'Expression specifying how to format the payload for each batch. To reference the events to send, use the `${events}` variable. Example expression: `{ "items" : [${events}] }` would send the batch inside a JSON object.'
          default: "`${events}`"
        advancedContentType:
          type: string
          title: Content type
          description: HTTP content-type header value
          default: application/json
        formatEventCode:
          type: string
          title: Format inbound event
          description: "Custom JavaScript code to format incoming event data accessible through the __e variable. The formatted content is added to (__e['__eventOut']) if available. Otherwise, the original event is serialized as JSON. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code."
        formatPayloadCode:
          type: string
          title: Format outbound payload
          description: "Optional JavaScript code to format the payload sent to the Destination. The payload, containing a batch of formatted events, is accessible through the __e['payload'] variable. The formatted payload is returned in the __e['__payloadOut'] variable. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code."
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        url:
          title: URL
          type: string
          description: URL to send events to. Can be overwritten by an event's __url field.
          pattern: ^https?://.*
        dcrID:
          type: string
          title: Data collection rule ID
          description: Immutable ID for the Data Collection Rule (DCR)
        dceEndpoint:
          type: string
          title: Data collection endpoint
          description: "Data collection endpoint (DCE) URL. In the format: `https://<Endpoint-Name>-<Identifier>.<Region>.ingest.monitor.azure.com`"
          pattern: ^https:\/\/([a-zA-Z0-9-_\.]+)\.ingest\.monitor\.azure\.com(\/?)$
        streamName:
          type: string
          title: Stream name
          description: The name of the stream (Sentinel table) in which to store the events
    OutputDevnull:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - devnull
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
      required:
        - type
    OutputSyslog:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - syslog
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        protocol:
          type: string
          title: Protocol
          description: The network protocol to use for sending out syslog messages
          default: tcp
          enum:
            - tcp
            - udp
          x-speakeasy-unknown-values: allow
        facility:
          type: integer
          title: Facility
          description: Default value for message facility. Will be overwritten by value of __facility if set. Defaults to user.
          default: 1
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
          x-speakeasy-unknown-values: allow
        severity:
          type: integer
          title: Severity
          description: Default value for message severity. Will be overwritten by value of __severity if set. Defaults to notice.
          default: 5
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
          x-speakeasy-unknown-values: allow
        appName:
          type: string
          title: App name
          description: Default name for device or application that originated the message. Defaults to Cribl, but will be overwritten by value of __appname if set.
          default: Cribl
        messageFormat:
          type: string
          default: rfc3164
          enum:
            - rfc3164
            - rfc5424
          title: Message format
          description: The syslog message format depending on the receiver's support
          x-speakeasy-unknown-values: allow
        timestampFormat:
          type: string
          default: syslog
          enum:
            - syslog
            - iso8601
          title: Timestamp format
          description: Timestamp format to use when serializing event's time field
          x-speakeasy-unknown-values: allow
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        octetCountFraming:
          type: boolean
          title: Octet count framing
          description: Prefix messages with the byte count of the message. If disabled, no prefix will be set, and the message will be appended with a \n.
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
        description:
          type: string
          title: Description
        loadBalanced:
          type: boolean
          title: Load balancing
          description: For optimal performance, enable load balancing even if you have one hostname, as it can expand to multiple IPs.  If this setting is disabled, consider enabling round-robin DNS.
          default: true
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        host:
          type: string
          title: Address
          description: The hostname of the receiver
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
        maxRecordSize:
          type: number
          title: Record size limit
          default: 1500
          minimum: 1
          maximum: 65535
          description: Maximum size of syslog messages. Make sure this value is less than or equal to the MTU to avoid UDP packet fragmentation.
        udpDnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every message sent will incur a DNS lookup.
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
        maxConcurrentSenders:
          type: number
          default: 0
          minimum: 0
          title: Connection limit
          description: Maximum number of concurrent connections (per Worker Process). A random set of IPs will be picked on every DNS resolution period. Use 0 for unlimited.
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
        hosts:
          type: array
          title: Destinations
          description: Set of hosts to load-balance data to.
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver
              port:
                type: number
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host
                default: 9997
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS
                enum:
                  - inherit
                  - off
                default: inherit
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not specified, defaults to connection host (if not an IP); otherwise, uses the global TLS settings.
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
      required:
        - type
    OutputSplunk:
      type: object
      required:
        - type
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - splunk
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        host:
          type: string
          title: Address
          description: The hostname of the receiver
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          default: 9997
        nestedFields:
          type: string
          enum:
            - json
            - none
          title: Nested field serialization
          description: How to serialize nested fields into index-time fields
          default: none
          x-speakeasy-unknown-values: allow
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        enableMultiMetrics:
          type: boolean
          title: Output multiple metrics
          description: Output metrics in multiple-metric format in a single event. Supported in Splunk 8.0 and above.
          default: false
        enableACK:
          type: boolean
          title: Minimize in-flight data loss
          description: Check if indexer is shutting down and stop sending data. This helps minimize data loss during shutdown.
          default: true
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake
          enum:
            - v3
            - v4
          default: v3
          x-speakeasy-unknown-values: allow
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        maxFailedHealthChecks:
          type: number
          title: Failed health check limit
          description: Maximum number of times healthcheck can fail before we close connection. If set to 0 (disabled), and the connection to Splunk is forcibly closed, some data loss might occur.
          default: 1
          minimum: 0
        compress:
          type: string
          title: Compression
          description: Controls whether the sender should send compressed data to the server. Select 'Disabled' to reject compressed connections or 'Always' to ignore server's configuration and send compressed data.
          default: disabled
          enum:
            - disabled
            - auto
            - always
          x-speakeasy-unknown-values: allow
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        authToken:
          type: string
          title: Auth token
          description: Shared secret token to use when establishing a connection to a Splunk indexer.
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
    OutputSplunkLb:
      type: object
      required:
        - type
        - hosts
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - splunk_lb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
        maxConcurrentSenders:
          type: number
          default: 0
          minimum: 0
          title: Connection limit
          description: Maximum number of concurrent connections (per Worker Process). A random set of IPs will be picked on every DNS resolution period. Use 0 for unlimited.
        nestedFields:
          type: string
          enum:
            - json
            - none
          title: Nested field serialization
          description: How to serialize nested fields into index-time fields
          default: none
          x-speakeasy-unknown-values: allow
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        enableMultiMetrics:
          type: boolean
          title: Output multiple metrics
          description: Output metrics in multiple-metric format in a single event. Supported in Splunk 8.0 and above.
          default: false
        enableACK:
          type: boolean
          title: Minimize in-flight data loss
          description: Check if indexer is shutting down and stop sending data. This helps minimize data loss during shutdown.
          default: true
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake
          enum:
            - v3
            - v4
          default: v3
          x-speakeasy-unknown-values: allow
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        indexerDiscovery:
          type: boolean
          default: false
          title: Indexer Discovery
          description: Automatically discover indexers in indexer clustering environment.
        senderUnhealthyTimeAllowance:
          type: number
          title: Endpoint health fluctuation time allowance (ms)
          description: How long (in milliseconds) each LB endpoint can report blocked before the Destination reports unhealthy, blocking the sender. (Grace period for fluctuations.) Use 0 to disable; max 1 minute.
          default: 100
          minimum: 0
          maximum: 60000
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        maxFailedHealthChecks:
          type: number
          title: Failed health check limit
          description: Maximum number of times healthcheck can fail before we close connection. If set to 0 (disabled), and the connection to Splunk is forcibly closed, some data loss might occur.
          default: 1
          minimum: 0
        compress:
          type: string
          title: Compression
          description: Controls whether the sender should send compressed data to the server. Select 'Disabled' to reject compressed connections or 'Always' to ignore server's configuration and send compressed data.
          default: disabled
          enum:
            - disabled
            - auto
            - always
          x-speakeasy-unknown-values: allow
        indexerDiscoveryConfigs:
          type: object
          description: List of configurations to set up indexer discovery in Splunk Indexer clustering environment.
          required:
            - masterUri
            - site
            - refreshIntervalSec
          properties:
            site:
              type: string
              pattern: "[0-9A-Za-z-._]+"
              title: Site
              description: Clustering site of the indexers from where indexers need to be discovered. In case of single site cluster, it defaults to 'default' site.
              default: default
            masterUri:
              type: string
              pattern: ^https?://[a-zA-Z0-9-._]+:[0-9]+$
              title: Cluster manager URI
              description: "Full URI of Splunk cluster manager (scheme://host:port). Example: https://managerAddress:8089"
            refreshIntervalSec:
              type: number
              default: 300
              minimum: 60
              maximum: 86400
              title: Refresh period
              description: Time interval, in seconds, between two consecutive indexer list fetches from cluster manager
            rejectUnauthorized:
              type: boolean
              title: Validate cluster manager certificates
              default: false
              description: During indexer discovery, reject cluster manager certificates that are not authorized by the system's CA. Disable to allow untrusted (for example, self-signed) certificates.
            authTokens:
              type: array
              title: Authentication tokens
              description: Tokens required to authenticate to cluster manager for indexer discovery
              items:
                type: object
                properties:
                  authType:
                    title: Authentication method
                    type: string
                    enum:
                      - manual
                      - secret
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    x-speakeasy-unknown-values: allow
            authType:
              title: Authentication method
              type: string
              enum:
                - manual
                - secret
              default: manual
              description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
              x-speakeasy-unknown-values: allow
            authToken:
              type: string
              title: Auth token
              description: Shared secret to be provided by any client (in authToken header field). If empty, unauthorized access is permitted.
              default: ""
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select or create a stored text secret
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
        hosts:
          type: array
          title: Destinations
          description: Set of Splunk indexers to load-balance data to.
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver
              port:
                type: number
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host
                default: 9997
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS
                enum:
                  - inherit
                  - off
                default: inherit
                x-speakeasy-unknown-values: allow
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not specified, defaults to connection host (if not an IP); otherwise, uses the global TLS settings.
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        authToken:
          type: string
          title: Auth token
          description: Shared secret token to use when establishing a connection to a Splunk indexer.
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
    OutputSplunkHec:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - splunk_hec
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
          default: true
        nextQueue:
          type: string
          title: Next Processing Queue
          description: In the Splunk app, define which Splunk processing queue to send the events after HEC processing.
          default: indexQueue
        tcpRouting:
          type: string
          title: Default _TCP_ROUTING
          description: In the Splunk app, set the value of _TCP_ROUTING for events that do not have _ctrl._TCP_ROUTING set.
          default: nowhere
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 2097152
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        enableMultiMetrics:
          type: boolean
          title: Output multi-metrics
          description: Output metrics in multiple-metric format, supported in Splunk 8.0 and above to allow multiple metrics in a single event.
          default: false
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        url:
          type: string
          title: Splunk HEC Endpoint
          description: URL to a Splunk HEC endpoint to send events to, e.g., http://localhost:8088/services/collector/event
          default: http://localhost:8088/services/collector/event
          pattern: ^https?://.*
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
        urls:
          type: array
          title: Splunk HEC Endpoints
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: HEC Endpoint
                description: URL to a Splunk HEC endpoint to send events to, e.g., http://localhost:8088/services/collector/event
                default: http://localhost:8088/services/collector/event
                pattern: ^https?://.*
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
        token:
          type: string
          title: HEC Auth token
          description: Splunk HEC authentication token
        textSecret:
          type: string
          title: HEC Auth token (text secret)
          description: Select or create a stored text secret
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
      required:
        - type
    OutputTcpjson:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - tcpjson
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the data before sending
          x-speakeasy-unknown-values: allow
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
        tokenTTLMinutes:
          type: number
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated authentication token expires, valid values between 1 and 60
        sendHeader:
          type: boolean
          title: Send auth token in initial record
          description: Upon connection, send a header-like record containing the auth token and other metadata.This record will not contain an actual event – only subsequent records will.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        host:
          type: string
          title: Address
          description: The hostname of the receiver
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
        hosts:
          type: array
          title: Destinations
          description: Set of hosts to load-balance data to
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver
              port:
                type: number
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS
                enum:
                  - inherit
                  - off
                default: inherit
                x-speakeasy-unknown-values: allow
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not specified, defaults to connection host (if not an IP); otherwise, uses the global TLS settings.
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
        maxConcurrentSenders:
          type: number
          default: 0
          minimum: 0
          title: Connection limit
          description: Maximum number of concurrent connections (per Worker Process). A random set of IPs will be picked on every DNS resolution period. Use 0 for unlimited.
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        authToken:
          type: string
          title: Auth token
          description: Optional authentication token to include as part of the connection header
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
      required:
        - type
    OutputWavefront:
      type: object
      required:
        - type
        - domain
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - wavefront
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
        domain:
          type: string
          title: Domain name
          description: WaveFront domain name, e.g. "longboard"
          default: longboard
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        token:
          type: string
          title: Auth token
          description: WaveFront API authentication token (see [here](https://docs.wavefront.com/wavefront_api.html#generating-an-api-token))
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputSignalfx:
      type: object
      required:
        - type
        - realm
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - signalfx
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
        realm:
          type: string
          title: Realm
          description: SignalFx realm name, e.g. "us0". For a complete list of available SignalFx realm names, please check [here](https://docs.splunk.com/observability/en/get-started/service-description.html#sd-regions).
          default: us0
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        token:
          type: string
          title: Auth token
          description: SignalFx API access token (see [here](https://docs.signalfx.com/en/latest/admin-guide/tokens.html#working-with-access-tokens))
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputFilesystem:
      type: object
      required:
        - type
        - destPath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - filesystem
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        destPath:
          type: string
          title: Output location
          description: Final destination for the output files
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files before compressing and moving to final destination. Use performant, stable storage.
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          x-speakeasy-unknown-values: allow
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          x-speakeasy-unknown-values: allow
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          x-speakeasy-unknown-values: allow
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          x-speakeasy-unknown-values: allow
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
              value:
                type: string
                title: Value
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
    OutputS3:
      type: object
      required:
        - type
        - bucket
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - s3
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`"
        region:
          type: string
          title: Region
          description: Region where the S3 bucket is located
        awsSecretKey:
          type: string
          title: Secret key
          description: "Secret key. This value can be a constant or a JavaScript expression. Example: `${C.env.SOME_SECRET}`)"
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to prepend to files before uploading. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`"
          default: ""
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          x-speakeasy-unknown-values: allow
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - GLACIER_IR
            - DEEP_ARCHIVE
          x-speakeasy-unknown-values: allow
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
            - AES256
            - aws:kms
          x-speakeasy-unknown-values: allow
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          x-speakeasy-unknown-values: allow
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts upload limit
          description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          x-speakeasy-unknown-values: allow
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          x-speakeasy-unknown-values: allow
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          x-speakeasy-unknown-values: allow
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
              value:
                type: string
                title: Value
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
    OutputAzureBlob:
      type: object
      required:
        - type
        - containerName
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - azure_blob
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        containerName:
          type: string
          title: Container name
          description: The Azure Blob Storage container name. Name can include only lowercase letters, numbers, and hyphens. For dynamic container names, enter a JavaScript expression within quotes or backticks, to be evaluated at initialization. The expression can evaluate to a constant value and can reference Global Variables, such as `myContainer-${C.env["CRIBL_WORKER_ID"]}`.
        createContainer:
          type: boolean
          title: Create container
          description: Create the configured container in Azure Blob Storage if it does not already exist
          default: false
        destPath:
          type: string
          title: Blob prefix
          description: Root directory prepended to path before uploading. Value can be a JavaScript expression enclosed in quotes or backticks, to be evaluated at initialization. The expression can evaluate to a constant value and can reference Global Variables, such as `myBlobPrefix-${C.env["CRIBL_WORKER_ID"]}`.
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file
          default: 1
          minimum: 1
          maximum: 10
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          x-speakeasy-unknown-values: allow
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
            - clientSecret
            - clientCert
          default: manual
          x-speakeasy-unknown-values: allow
        storageClass:
          type: string
          title: Blob access tier
          enum:
            - Inferred
            - Hot
            - Cool
            - Cold
            - Archive
          default: Inferred
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          x-speakeasy-unknown-values: allow
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          x-speakeasy-unknown-values: allow
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          x-speakeasy-unknown-values: allow
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
              value:
                type: string
                title: Value
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
        connectionString:
          type: string
          title: Connection string
          description: Enter your Azure Storage account connection string. If left blank, Stream will fall back to env.AZURE_STORAGE_CONNECTION_STRING.
        textSecret:
          type: string
          title: Connection string (text secret)
          description: Select or create a stored text secret
        storageAccountName:
          type: string
          title: Storage account name
          description: The name of your Azure storage account
        tenantId:
          type: string
          title: Tenant ID
          description: The service principal's tenant ID
        clientId:
          type: string
          title: Client ID
          description: The service principal's client ID
        azureCloud:
          type: string
          title: Azure Cloud
          description: The Azure cloud to use. Defaults to Azure Public Cloud.
        endpointSuffix:
          type: string
          title: Endpoint suffix
          description: Endpoint suffix for the service URL. Takes precedence over the Azure Cloud setting. Defaults to core.windows.net.
        clientTextSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
        certificate:
          type: object
          required:
            - certificateName
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The certificate you registered as credentials for your app in the Azure portal
    OutputAzureDataExplorer:
      type: object
      required:
        - type
        - clusterUrl
        - database
        - table
        - compress
        - oauthEndpoint
        - tenantId
        - clientId
        - scope
        - oauthType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - azure_data_explorer
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        clusterUrl:
          type: string
          title: Cluster base URI
          description: The base URI for your cluster. Typically, `https://<cluster>.<region>.kusto.windows.net`.
          pattern: ^https://[a-zA-Z0-9\-]+.(\w+).(kusto.fabric.microsoft.com|kusto.(windows|usgovcloudapi).net)$
        database:
          type: string
          title: Database name
          description: Name of the database containing the table where data will be ingested
          pattern: ^[\w\s\-\.]+$
          maxLength: 260
        table:
          type: string
          title: Table name
          description: Name of the table to ingest data into
          pattern: ^[\w\-\.]+$
          maxLength: 1024
        validateDatabaseSettings:
          type: boolean
          title: Validate database settings
          description: When saving or starting the Destination, validate the database name and credentials; also validate table name, except when creating a new table. Disable if your Azure app does not have both the Database Viewer and the Table Viewer role.
          default: true
        ingestMode:
          type: string
          title: Ingestion mode
          enum:
            - batching
            - streaming
          default: batching
          x-speakeasy-unknown-values: allow
        oauthEndpoint:
          type: string
          title: Microsoft Entra ID authentication endpoint
          default: https://login.microsoftonline.com
          enum:
            - https://login.microsoftonline.com
            - https://login.microsoftonline.us
            - https://login.partner.microsoftonline.cn
          description: Endpoint used to acquire authentication tokens from Azure
          x-speakeasy-unknown-values: allow
        tenantId:
          type: string
          title: Tenant ID
          description: Directory ID (tenant identifier) in Azure Active Directory
        clientId:
          type: string
          title: Client ID
          description: client_id to pass in the OAuth request parameter
        scope:
          type: string
          title: Scope
          description: Scope to pass in the OAuth request parameter
        oauthType:
          title: Authentication method
          type: string
          enum:
            - clientSecret
            - clientTextSecret
            - certificate
          default: clientSecret
          description: The type of OAuth 2.0 client credentials grant flow to use
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        clientSecret:
          type: string
          title: Client secret
          description: The client secret that you generated for your app in the Azure portal
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
        certificate:
          type: object
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The certificate you registered as credentials for your app in the Azure portal
        ingestUrl:
          type: string
          title: Ingestion service URI
          description: The ingestion service URI for your cluster. Typically, `https://ingest-<cluster>.<region>.kusto.windows.net`.
          pattern: ^https://[a-zA-Z0-9\-]+.(\w+).(kusto.fabric.microsoft.com|kusto.(windows|usgovcloudapi).net)$
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        isMappingObj:
          type: boolean
          title: Add mapping object
          description: Send a JSON mapping object instead of specifying an existing named data mapping
          default: false
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          x-speakeasy-unknown-values: allow
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file
          default: 1
          minimum: 1
          maximum: 10
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushImmediately:
          type: boolean
          title: Flush immediately
          description: Bypass the data management service's aggregation mechanism
          default: false
        retainBlobOnSuccess:
          type: boolean
          title: Retain blob on success
          description: Prevent blob deletion after ingestion is complete
          default: false
        extentTags:
          type: array
          title: Extent tags
          description: Strings or tags associated with the extent (ingested data shard)
          items:
            type: object
            required:
              - value
            properties:
              prefix:
                type: string
                title: Prefix (optional)
                enum:
                  - dropBy
                  - ingestBy
                x-speakeasy-unknown-values: allow
              value:
                type: string
                title: Value
        ingestIfNotExists:
          type: array
          title: Enforce uniqueness via tag values
          description: Prevents duplicate ingestion by verifying whether an extent with the specified ingest-by tag already exists
          items:
            type: object
            required:
              - value
            properties:
              value:
                type: string
                title: Value
        reportLevel:
          type: string
          title: Report level
          description: Level of ingestion status reporting. Defaults to FailuresOnly.
          enum:
            - failuresOnly
            - doNotReport
            - failuresAndSuccesses
          default: failuresOnly
          x-speakeasy-unknown-values: allow
        reportMethod:
          type: string
          title: Report method
          description: Target of the ingestion status reporting. Defaults to Queue.
          enum:
            - queue
            - table
            - queueAndTable
          default: queue
          x-speakeasy-unknown-values: allow
        additionalProperties:
          type: array
          title: Additional fields
          description: Optionally, enter additional configuration properties to send to the ingestion service
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                pattern: ^[\w\-\.]+$
              value:
                type: string
                title: Value
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        mappingRef:
          type: string
          title: Data mapping
          description: Enter the name of a data mapping associated with your target table. Or, if incoming event and target table fields match exactly, you can leave the field empty.
          pattern: ^[\w\-\.]+$
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
    OutputAzureLogs:
      type: object
      required:
        - type
        - logType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - azure_logs
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        logType:
          type: string
          title: Log Type
          description: The Log Type of events sent to this LogAnalytics workspace. Defaults to `Cribl`. Use only letters, numbers, and `_` characters, and can't exceed 100 characters. Can be overwritten by event field __logType.
          default: Cribl
          maxLength: 100
        resourceId:
          type: string
          title: Resource ID
          description: Optional Resource ID of the Azure resource to associate the data with. Can be overridden by the __resourceId event field. This ID populates the _ResourceId property, allowing the data to be included in resource-centric queries. If the ID is neither specified nor overridden, resource-centric queries will omit the data.
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 10240
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        apiUrl:
          type: string
          title: DNS name of API endpoint
          description: "The DNS name of the Log API endpoint that sends log data to a Log Analytics workspace in Azure Monitor. Defaults to .ods.opinsights.azure.com. @{product} will add a prefix and suffix to construct a URI in this format: <https://<Workspace_ID><your_DNS_name>/api/logs?api-version=<API version>."
          pattern: ^\.[^\/]+$
          default: .ods.opinsights.azure.com
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter workspace ID and workspace key directly, or select a stored secret
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        workspaceId:
          type: string
          title: Workspace ID
          description: Azure Log Analytics Workspace ID. See Azure Dashboard Workspace > Advanced settings.
        workspaceKey:
          type: string
          title: Workspace key
          description: Azure Log Analytics Workspace Primary or Secondary Shared Key. See Azure Dashboard Workspace > Advanced settings.
        keypairSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
    OutputKinesis:
      type: object
      required:
        - type
        - streamName
        - region
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - kinesis
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        streamName:
          type: string
          title: Stream Name
          description: Kinesis stream name to send events to.
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the Kinesis stream is located
        endpoint:
          type: string
          title: Endpoint
          description: Kinesis stream service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to Kinesis stream-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Kinesis stream requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for Kinesis stream
          description: Use Assume Role credentials to access Kinesis stream
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        concurrency:
          type: number
          title: Put request concurrency
          description: Maximum number of ongoing put requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        maxRecordSizeKB:
          type: number
          title: Record size limit (KB, uncompressed)
          description: Maximum size (KB) of each individual record before compression. For uncompressed or non-compressible data 1MB is the max recommended size
          default: 1024
          minimum: 1
          maximum: 10240
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
          title: Compression
          description: Compression type to use for records
          x-speakeasy-unknown-values: allow
        useListShards:
          type: boolean
          title: ListShards API
          description: Provides higher stream rate limits, improving delivery speed and reliability by minimizing throttling. See the [ListShards API](https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListShards.html) documentation for details.
          default: false
        asNdjson:
          type: boolean
          title: Send batched
          description: Batch events into a single record as NDJSON
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputHoneycomb:
      type: object
      required:
        - type
        - dataset
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - honeycomb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        dataset:
          type: string
          title: Dataset name
          description: Name of the dataset to send events to – e.g., observability
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        team:
          type: string
          title: API key
          description: Team API key where the dataset belongs
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
    OutputAzureEventhub:
      type: object
      required:
        - type
        - brokers
        - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - azure_eventhub
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        brokers:
          type: array
          title: Brokers
          description: List of Event Hubs Kafka brokers to connect to, eg. yourdomain.servicebus.windows.net:9093. The hostname can be found in the host portion of the primary or secondary connection string in Shared Access Policies.
          minItems: 1
          items:
            type: string
            minLength: 1
        topic:
          type: string
          title: Event Hub name
          description: The name of the Event Hub (Kafka Topic) to publish events. Can be overwritten using field __topicOut.
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments
          enum:
            - 1
            - 0
            - -1
          x-speakeasy-unknown-values: allow
        format:
          type: string
          default: json
          enum:
            - json
            - raw
          title: Record data format
          description: Format to use to serialize events before writing to the Event Hubs Kafka brokers
          x-speakeasy-unknown-values: allow
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. Setting should be < message.max.bytes settings in Event Hubs brokers.
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: Maximum number of events in a batch before forcing a flush
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            mechanism:
              type: string
              enum:
                - plain
                - oauthbearer
              title: SASL mechanism
              default: plain
              x-speakeasy-unknown-values: allow
        tls:
          type: object
          title: TLS settings (client side)
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certificates that are not authorized by a CA in the CA certificate path, or by another trusted CA (such as the system's)
              default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputGoogleChronicle:
      type: object
      required:
        - type
        - logFormatType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - google_chronicle
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        apiVersion:
          type: string
          title: API version
          default: v1
          enum:
            - v1
            - v2
          x-speakeasy-unknown-values: allow
        authenticationMethod:
          type: string
          title: Authentication method
          default: serviceAccount
          enum:
            - manual
            - secret
            - serviceAccount
            - serviceAccountSecret
          x-speakeasy-unknown-values: allow
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default:
            - httpStatus: 429
              initialBackoff: 30000
              backoffRate: 1
              maxBackoff: 30000
            - httpStatus: 503
              initialBackoff: 30000
              backoffRate: 1
              maxBackoff: 30000
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
        logFormatType:
          type: string
          title: Send events as
          default: unstructured
          enum:
            - unstructured
            - udm
          x-speakeasy-unknown-values: allow
        region:
          type: string
          title: Region
          description: Regional endpoint to send events to
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 90
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned.
          default: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
        description:
          type: string
          title: Description
        extraLogTypes:
          type: array
          title: Custom log types
          description: Custom log types. If the value "Custom" is selected in the setting "Default log type" above, the first custom log type in this table will be automatically selected as default log type.
          items:
            type: object
            required:
              - logType
            properties:
              logType:
                type: string
                title: Log Type
                pattern: ^[A-Z0-9_]+$
              description:
                type: string
                title: Description
        logType:
          type: string
          title: Default log type
          description: Default log type value to send to SecOps. Can be overwritten by event field __logType.
        logTextField:
          type: string
          title: Log text field
          description: Name of the event field that contains the log text to send. If not specified, Stream sends a JSON representation of the whole event.
        customerId:
          type: string
          title: Customer ID
          description: A unique identifier (UUID) for your Google SecOps instance. This is provided by your Google representative and is required for API V2 authentication.
        namespace:
          type: string
          title: Namespace
          description: User-configured environment namespace to identify the data domain the logs originated from. Use namespace as a tag to identify the appropriate data domain for indexing and enrichment functionality. Can be overwritten by event field __namespace.
        customLabels:
          type: array
          title: Custom labels
          description: "Custom labels to be added to every batch "
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
              value:
                type: string
                title: Value
        apiKey:
          type: string
          title: API key
          description: Organization's API key in Google SecOps
        apiKeySecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
        serviceAccountCredentialsSecret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputGoogleCloudStorage:
      type: object
      required:
        - type
        - bucket
        - endpoint
        - region
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - google_cloud_storage
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        bucket:
          type: string
          title: Bucket name
          description: "Name of the destination bucket. This value can be a constant or a JavaScript expression that can only be evaluated at init time. Example of referencing a Global Variable: `myBucket-${C.vars.myVar}`."
        region:
          type: string
          title: Region
          description: Region where the bucket is located
        endpoint:
          type: string
          title: Endpoint
          default: https://storage.googleapis.com
          description: Google Cloud Storage service endpoint
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Google Cloud Storage requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          default: manual
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to prepend to files before uploading. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`"
          default: ""
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - bucket-owner-read
            - bucket-owner-full-control
            - project-private
            - authenticated-read
            - public-read
          x-speakeasy-unknown-values: allow
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - NEARLINE
            - COLDLINE
            - ARCHIVE
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          x-speakeasy-unknown-values: allow
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          x-speakeasy-unknown-values: allow
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          x-speakeasy-unknown-values: allow
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          x-speakeasy-unknown-values: allow
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
              value:
                type: string
                title: Value
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
        awsApiKey:
          type: string
          title: Access key
          description: HMAC access key. This value can be a constant or a JavaScript expression, such as `${C.env.GCS_ACCESS_KEY}`.
        awsSecretKey:
          type: string
          title: Secret
          description: HMAC secret. This value can be a constant or a JavaScript expression, such as `${C.env.GCS_SECRET}`.
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
    OutputGoogleCloudLogging:
      type: object
      required:
        - type
        - logLocationType
        - logLocationExpression
        - logNameExpression
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - google_cloud_logging
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        logLocationType:
          type: string
          title: Log location type
          enum:
            - project
            - organization
            - billingAccount
            - folder
          x-speakeasy-unknown-values: allow
        logNameExpression:
          type: string
          title: Log name expression
          description: JavaScript expression to compute the value of the log name.
        payloadFormat:
          type: string
          title: Payload format
          description: Format to use when sending payload. Defaults to Text.
          enum:
            - text
            - json
          default: text
          x-speakeasy-unknown-values: allow
        logLabels:
          type: array
          title: Log labels
          description: Labels to apply to the log entry
          items:
            type: object
            required:
              - label
              - valueExpression
            properties:
              label:
                type: string
                title: Label
                description: Label name
              valueExpression:
                type: string
                title: Value
                description: JavaScript expression to compute the label's value.
        resourceTypeExpression:
          type: string
          title: Resource type expression
          description: JavaScript expression to compute the value of the managed resource type field. Must evaluate to one of the valid values [here](https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types). Defaults to "global".
        resourceTypeLabels:
          type: array
          title: Resource labels
          description: Labels to apply to the managed resource. These must correspond to the valid labels for the specified resource type (see [here](https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types)). Otherwise, they will be dropped by Google Cloud Logging.
          items:
            type: object
            required:
              - label
              - valueExpression
            properties:
              label:
                type: string
                title: Label
                description: Label name
              valueExpression:
                type: string
                title: Value
                description: JavaScript expression to compute the label's value.
        severityExpression:
          type: string
          title: Severity expression
          description: JavaScript expression to compute the value of the severity field. Must evaluate to one of the severity values supported by Google Cloud Logging [here](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logseverity) (case insensitive). Defaults to "DEFAULT".
        insertIdExpression:
          type: string
          title: Insert ID expression
          description: JavaScript expression to compute the value of the insert ID field.
        googleAuthMethod:
          type: string
          title: Google authentication method
          description: Choose Auto to use Google Application Default Credentials (ADC), Manual to enter Google service account credentials directly, or Secret to select or create a stored secret that references Google service account credentials.
          default: manual
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Max number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it.
        throttleRateReqPerSec:
          type: integer
          title: Throttle request rate
          description: Maximum number of requests to limit to per second.
          maximum: 2000
        requestMethodExpression:
          type: string
          title: Request method expression
          description: A JavaScript expression that evaluates to the HTTP request method as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        requestUrlExpression:
          type: string
          title: Request URL expression
          description: A JavaScript expression that evaluates to the HTTP request URL as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        requestSizeExpression:
          type: string
          title: Request size expression
          description: A JavaScript expression that evaluates to the HTTP request size as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        statusExpression:
          type: string
          title: Request status expression
          description: A JavaScript expression that evaluates to the HTTP request method as a number. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        responseSizeExpression:
          type: string
          title: Response size expression
          description: A JavaScript expression that evaluates to the HTTP response size as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        userAgentExpression:
          type: string
          title: Request user agent expression
          description: A JavaScript expression that evaluates to the HTTP request user agent as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        remoteIpExpression:
          type: string
          title: Remote IP expression
          description: A JavaScript expression that evaluates to the HTTP request remote IP as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        serverIpExpression:
          type: string
          title: Server IP expression
          description: A JavaScript expression that evaluates to the HTTP request server IP as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        refererExpression:
          type: string
          title: Referer expression
          description: A JavaScript expression that evaluates to the HTTP request referer as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        latencyExpression:
          type: string
          title: Latency expression
          description: A JavaScript expression that evaluates to the HTTP request latency, formatted as <seconds>.<nanoseconds>s (for example, 1.23s). See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        cacheLookupExpression:
          type: string
          title: Cache lookup expression
          description: A JavaScript expression that evaluates to the HTTP request cache lookup as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        cacheHitExpression:
          type: string
          title: Cache hit expression
          description: A JavaScript expression that evaluates to the HTTP request cache hit as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        cacheValidatedExpression:
          type: string
          title: Cache validated with origin server expression
          description: A JavaScript expression that evaluates to the HTTP request cache validated with origin server as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        cacheFillBytesExpression:
          type: string
          title: Cache fill bytes expression
          description: A JavaScript expression that evaluates to the HTTP request cache fill bytes as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        protocolExpression:
          type: string
          title: Protocol expression
          description: A JavaScript expression that evaluates to the HTTP request protocol as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
        idExpression:
          type: string
          title: ID expression
          description: A JavaScript expression that evaluates to the log entry operation ID as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
        producerExpression:
          type: string
          title: Producer expression
          description: A JavaScript expression that evaluates to the log entry operation producer as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
        firstExpression:
          type: string
          title: First expression
          description: A JavaScript expression that evaluates to the log entry operation first flag as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
        lastExpression:
          type: string
          title: Last expression
          description: A JavaScript expression that evaluates to the log entry operation last flag as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
        fileExpression:
          type: string
          title: File expression
          description: A JavaScript expression that evaluates to the log entry source location file as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation) for details.
        lineExpression:
          type: string
          title: Line expression
          description: A JavaScript expression that evaluates to the log entry source location line as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation) for details.
        functionExpression:
          type: string
          title: Function expression
          description: A JavaScript expression that evaluates to the log entry source location function as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation) for details.
        uidExpression:
          type: string
          title: UID expression
          description: A JavaScript expression that evaluates to the log entry log split UID as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit) for details.
        indexExpression:
          type: string
          title: Index expression
          description: A JavaScript expression that evaluates to the log entry log split index as a number. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit) for details.
        totalSplitsExpression:
          type: string
          title: Total splits expression
          description: A JavaScript expression that evaluates to the log entry log split total splits as a number. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit) for details.
        traceExpression:
          type: string
          title: Trace expression
          description: A JavaScript expression that evaluates to the REST resource name of the trace being written as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry) for details.
        spanIdExpression:
          type: string
          title: Span ID expression
          description: A JavaScript expression that evaluates to the ID of the cloud trace span associated with the current operation in which the log is being written as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry) for details.
        traceSampledExpression:
          type: string
          title: Trace sampled expression
          description: A JavaScript expression that evaluates to the the sampling decision of the span associated with the log entry. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry) for details.
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
        description:
          type: string
          title: Description
        logLocationExpression:
          title: Folder ID expression
          description: JavaScript expression to compute the value of the folder ID with which log entries should be associated.
          type: string
        payloadExpression:
          title: Payload object expression
          description: JavaScript expression to compute the value of the payload. Must evaluate to a JavaScript object value. If an invalid value is encountered it will result in the default value instead. Defaults to the entire event.
          type: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputGooglePubsub:
      type: object
      required:
        - type
        - topicName
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - google_pubsub
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        topicName:
          type: string
          title: Topic ID
          description: ID of the topic to send events to.
        createTopic:
          type: boolean
          title: Create topic
          description: If enabled, create topic if it does not exist.
          default: false
        orderedDelivery:
          type: boolean
          title: Ordered delivery
          description: If enabled, send events in the order they were added to the queue. For this to work correctly, the process receiving events must have ordering enabled.
          default: false
        region:
          type: string
          title: Region
          description: Region to publish messages to. Select 'default' to allow Google to auto-select the nearest region. When using ordered delivery, the selected region must be allowed by message storage policy.
        googleAuthMethod:
          type: string
          title: Google authentication method
          description: Choose Auto to use Google Application Default Credentials (ADC), Manual to enter Google service account credentials directly, or Secret to select or create a stored secret that references Google service account credentials.
          default: manual
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
        batchSize:
          type: number
          title: Batch size
          minimum: 1
          maximum: 10000
          default: 1000
          description: The maximum number of items the Google API should batch before it sends them to the topic.
        batchTimeout:
          type: number
          title: Batch timeout (ms)
          minimum: 1
          maximum: 100000
          default: 100
          description: The maximum amount of time, in milliseconds, that the Google API should wait to send a batch (if the Batch size is not reached).
        maxQueueSize:
          type: number
          title: Queue size limit
          description: Maximum number of queued batches before blocking.
          default: 100
          minimum: 1
        maxRecordSizeKB:
          type: number
          title: Batch size limit (KB)
          description: Maximum size (KB) of batches to send.
          default: 256
          minimum: 1
          maximum: 256
        flushPeriod:
          title: Flush period (sec)
          description: Maximum time to wait before sending a batch (when batch size limit is not reached)
          type: number
          default: 1
        maxInProgress:
          type: number
          title: Concurrent request limit
          description: The maximum number of in-progress API requests before backpressure is applied.
          default: 10
          minimum: 1
          maximum: 100
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputExabeam:
      type: object
      required:
        - type
        - bucket
        - region
        - endpoint
        - stagePath
        - collectorInstanceId
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - exabeam
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        bucket:
          type: string
          title: Bucket name
          description: "Name of the destination bucket. A constant or a JavaScript expression that can only be evaluated at init time. Example of referencing a JavaScript Global Variable: `myBucket-${C.vars.myVar}`."
        region:
          type: string
          title: Region
          description: Region where the bucket is located
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        endpoint:
          type: string
          title: Endpoint
          default: https://storage.googleapis.com
          description: Google Cloud Storage service endpoint
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Google Cloud Storage requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - bucket-owner-read
            - bucket-owner-full-control
            - project-private
            - authenticated-read
            - public-read
          x-speakeasy-unknown-values: allow
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - NEARLINE
            - COLDLINE
            - ARCHIVE
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 10
          maximum: 1024
          minimum: 5
        encodedConfiguration:
          type: string
          title: Exabeam connection string
          description: Enter an encoded string containing Exabeam configurations
        collectorInstanceId:
          type: string
          title: Collector instance ID
          description: |
            ID of the Exabeam Collector where data should be sent. Example: 11112222-3333-4444-5555-666677778888
        siteName:
          type: string
          title: Site name
          description: Constant or JavaScript expression to create an Exabeam site name. Values that aren't successfully evaluated will be treated as string constants.
        siteId:
          type: string
          title: Site ID
          description: Exabeam site ID. If left blank, @{product} will use the value of the Exabeam site name.
        timezoneOffset:
          type: string
          title: Timezone offset
        awsApiKey:
          type: string
          title: Access key
          description: HMAC access key. Can be a constant or a JavaScript expression, such as `${C.env.GCS_ACCESS_KEY}`.
        awsSecretKey:
          type: string
          title: Secret
          description: HMAC secret. Can be a constant or a JavaScript expression, such as `${C.env.GCS_SECRET}`.
        description:
          type: string
          title: Description
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
    OutputKafka:
      type: object
      required:
        - type
        - brokers
        - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - kafka
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify hostname and port, e.g., mykafkabroker:9092, or just hostname, in which case @{product} will assign port 9092.
          minItems: 1
          items:
            type: string
            minLength: 1
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the __topicOut field.
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
            - 1
            - 0
            - -1
          x-speakeasy-unknown-values: allow
        format:
          type: string
          default: json
          enum:
            - json
            - raw
            - protobuf
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
          x-speakeasy-unknown-values: allow
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
            - snappy
            - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
          x-speakeasy-unknown-values: allow
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value must not exceed the Kafka brokers' message.max.bytes setting.
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: The maximum number of events you want the Destination to allow in a batch before forcing a flush
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before forcing a flush. Shorter intervals tend to result in smaller batches being sent.
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
            schemaType:
              type: string
              default: avro
              enum:
                - avro
                - json
              title: Schema type
              description: The schema format used to encode and decode event data
              x-speakeasy-unknown-values: allow
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: |-
                    Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
            defaultKeySchemaId:
              type: number
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values, leave blank if key transformation is not required by default.
            defaultValueSchemaId:
              type: number
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw, leave blank if value transformation is not required by default.
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              x-speakeasy-unknown-values: allow
            oauthEnabled:
              type: boolean
              title: Enable OAuth
              description: Enable OAuth authentication
              default: false
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        protobufLibraryId:
          type: string
          title: Definition set
          description: Select a set of Protobuf definitions for the events you want to send
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputConfluentCloud:
      type: object
      required:
        - type
        - brokers
        - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - confluent_cloud
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        brokers:
          type: array
          title: Bootstrap servers
          description: List of Confluent Cloud bootstrap servers to use, such as yourAccount.confluent.cloud:9092.
          minItems: 1
          items:
            type: string
            minLength: 1
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the __topicOut field.
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
            - 1
            - 0
            - -1
          x-speakeasy-unknown-values: allow
        format:
          type: string
          default: json
          enum:
            - json
            - raw
            - protobuf
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
          x-speakeasy-unknown-values: allow
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
            - snappy
            - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
          x-speakeasy-unknown-values: allow
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value must not exceed the Kafka brokers' message.max.bytes setting.
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: The maximum number of events you want the Destination to allow in a batch before forcing a flush
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before forcing a flush. Shorter intervals tend to result in smaller batches being sent.
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
            schemaType:
              type: string
              default: avro
              enum:
                - avro
                - json
              title: Schema type
              description: The schema format used to encode and decode event data
              x-speakeasy-unknown-values: allow
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: |-
                    Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
            defaultKeySchemaId:
              type: number
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values, leave blank if key transformation is not required by default.
            defaultValueSchemaId:
              type: number
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw, leave blank if value transformation is not required by default.
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
              x-speakeasy-unknown-values: allow
            oauthEnabled:
              type: boolean
              title: Enable OAuth
              description: Enable OAuth authentication
              default: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        protobufLibraryId:
          type: string
          title: Definition set
          description: Select a set of Protobuf definitions for the events you want to send
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputMsk:
      type: object
      required:
        - type
        - brokers
        - topic
        - region
        - awsAuthenticationMethod
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - msk
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify hostname and port, e.g., mykafkabroker:9092, or just hostname, in which case @{product} will assign port 9092.
          minItems: 1
          items:
            type: string
            minLength: 1
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the __topicOut field.
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
            - 1
            - 0
            - -1
          x-speakeasy-unknown-values: allow
        format:
          type: string
          default: json
          enum:
            - json
            - raw
            - protobuf
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
          x-speakeasy-unknown-values: allow
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
            - snappy
            - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
          x-speakeasy-unknown-values: allow
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value must not exceed the Kafka brokers' message.max.bytes setting.
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: The maximum number of events you want the Destination to allow in a batch before forcing a flush
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before forcing a flush. Shorter intervals tend to result in smaller batches being sent.
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
            schemaType:
              type: string
              default: avro
              enum:
                - avro
                - json
              title: Schema type
              description: The schema format used to encode and decode event data
              x-speakeasy-unknown-values: allow
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: |-
                    Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                  x-speakeasy-unknown-values: allow
            defaultKeySchemaId:
              type: number
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values, leave blank if key transformation is not required by default.
            defaultValueSchemaId:
              type: number
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw, leave blank if value transformation is not required by default.
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the MSK cluster is located
        endpoint:
          type: string
          title: Endpoint
          description: MSK cluster service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to MSK cluster-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MSK cluster requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for MSK
          description: Use Assume Role credentials to access MSK
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        protobufLibraryId:
          type: string
          title: Definition set
          description: Select a set of Protobuf definitions for the events you want to send
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputElastic:
      type: object
      required:
        - type
        - index
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - elastic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
          default: true
        index:
          type: string
          title: Index or data stream
          description: Index or data stream to send events to. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be overwritten by an event's __index field.
        docType:
          type: string
          title: Type
          description: Document type to use for events. Can be overwritten by an event's __type field.
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 102400
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        extraParams:
          type: array
          title: Extra parameters
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
          default:
            - name: filter_path
              value: errors,items.*.error,items.*._index,items.*.status
        auth:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Authentication Disabled
              default: true
            authType:
              title: Authentication method
              type: string
              enum:
                - manual
                - secret
                - manualAPIKey
                - textSecret
              default: manual
              description: Enter credentials directly, or select a stored secret
              x-speakeasy-unknown-values: allow
        elasticVersion:
          type: string
          title: Elastic version
          description: Optional Elasticsearch version, used to format events. If not specified, will auto-discover version.
          enum:
            - auto
            - "6"
            - "7"
          default: auto
          x-speakeasy-unknown-values: allow
        elasticPipeline:
          type: string
          title: Elastic pipeline
          description: Optional Elasticsearch destination pipeline
        includeDocId:
          type: boolean
          title: Include document _id
          description: Include the `document_id` field when sending events to an Elastic TSDS (time series data stream)
          default: false
        writeAction:
          type: string
          title: Write action
          description: Action to use when writing events. Must be set to `Create` when writing to a data stream.
          enum:
            - index
            - create
          default: create
          x-speakeasy-unknown-values: allow
        retryPartialErrors:
          type: boolean
          default: false
          title: Retry partial errors
          description: Retry failed events when a bulk request to Elastic is successful, but the response body returns an error for one or more events in the batch
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        url:
          type: string
          title: Bulk API URL or Cloud ID
          description: "The Cloud ID or URL to an Elastic cluster to send events to. Example: http://elastic:9200/_bulk"
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
        urls:
          type: array
          title: Bulk API URLs
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: URL
                description: "The URL to an Elastic node to send events to. Example: http://elastic:9200/_bulk"
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputElasticCloud:
      type: object
      required:
        - type
        - url
        - index
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - elastic_cloud
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        url:
          type: string
          title: Cloud ID
          description: Enter Cloud ID of the Elastic Cloud environment to send events to
        index:
          type: string
          title: Data stream or index
          description: Data stream or index to send events to. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be overwritten by an event's __index field.
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 102400
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        extraParams:
          type: array
          title: Extra parameters
          description: Extra parameters to use in HTTP requests
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
          default:
            - name: filter_path
              value: errors,items.*.error,items.*._index,items.*.status
        auth:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Authentication Disabled
              default: false
            authType:
              title: Authentication method
              type: string
              enum:
                - manual
                - secret
                - manualAPIKey
                - textSecret
              default: manual
              description: Enter credentials directly, or select a stored secret
              x-speakeasy-unknown-values: allow
        elasticPipeline:
          type: string
          title: Elastic pipeline
          description: Optional Elastic Cloud Destination pipeline
        includeDocId:
          type: boolean
          title: Include document _id
          description: Include the `document_id` field when sending events to an Elastic TSDS (time series data stream)
          default: true
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputNewrelic:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - newrelic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        region:
          type: string
          title: Region
          description: Which New Relic region endpoint to use.
          enum:
            - US
            - EU
            - Custom
          default: US
          x-speakeasy-unknown-values: allow
        logType:
          type: string
          title: Log type
          description: "Name of the logtype to send with events, e.g.: observability, access_log. The event's 'sourcetype' field (if set) will override this value."
          default: ""
        messageField:
          type: string
          title: Log message field
          description: Name of field to send as log message value. If not present, event will be serialized and sent as JSON.
          default: ""
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          maxItems: 4
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
                enum:
                  - service
                  - hostname
                  - timestamp
                  - auditId
                x-speakeasy-unknown-values: allow
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          x-speakeasy-unknown-values: allow
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
        description:
          type: string
          title: Description
        customUrl:
          type: string
          pattern: ^https?://.*
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        apiKey:
          type: string
          title: API key
          description: New Relic API key. Can be overridden using __newRelic_apiKey field.
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
      required:
        - type
    OutputNewrelicEvents:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - newrelic_events
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        region:
          type: string
          title: Region
          description: Which New Relic region endpoint to use.
          enum:
            - US
            - EU
            - Custom
          default: US
          x-speakeasy-unknown-values: allow
        accountId:
          type: string
          title: Account ID
          description: New Relic account ID
        eventType:
          type: string
          title: Event type
          description: Default eventType to use when not present in an event. For more information, see [here](https://docs.newrelic.com/docs/telemetry-data-platform/custom-data/custom-events/data-requirements-limits-custom-event-data/#reserved-words).
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        customUrl:
          type: string
          pattern: ^https?://.*
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        apiKey:
          type: string
          title: API key
          description: New Relic API key. Can be overridden using __newRelic_apiKey field.
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
      required:
        - type
        - accountId
        - eventType
    OutputInfluxdb:
      type: object
      required:
        - type
        - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - influxdb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        url:
          type: string
          title: Write API URL
          description: URL of an InfluxDB cluster to send events to, e.g., http://localhost:8086/write
          pattern: ^https?://.*
        useV2API:
          type: boolean
          title: Use v2 API
          description: The v2 API can be enabled with InfluxDB versions 1.8 and later.
          default: false
        timestampPrecision:
          type: string
          title: Timestamp precision
          description: Sets the precision for the supplied Unix time values. Defaults to milliseconds.
          enum:
            - ns
            - u
            - ms
            - s
            - m
            - h
          default: ms
          x-speakeasy-unknown-values: allow
        dynamicValueFieldName:
          type: boolean
          title: Dynamic value fields
          description: Enabling this will pull the value field from the metric name. E,g, 'db.query.user' will use 'db.query' as the measurement and 'user' as the value field.
          default: true
        valueFieldName:
          type: string
          title: Value field name
          description: Name of the field in which to store the metric when sending to InfluxDB. If dynamic generation is enabled and fails, this will be used as a fallback.
          default: value
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 51200
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          type: string
          title: Authentication type
          description: InfluxDB authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        database:
          type: string
          title: Database
          description: Database to write to.
        bucket:
          type: string
          title: Bucket
          description: Bucket to write to.
        org:
          type: string
          title: Organization
          description: Organization ID for this bucket.
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
    OutputCloudwatch:
      type: object
      required:
        - type
        - logGroupName
        - logStreamName
        - region
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - cloudwatch
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        logGroupName:
          type: string
          title: Log group name
          description: CloudWatch log group to associate events with
        logStreamName:
          type: string
          title: Log stream prefix
          description: "Prefix for CloudWatch log stream name. This prefix will be used to generate a unique log stream name per cribl instance, for example: myStream_myHost_myOutputId"
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the CloudWatchLogs is located
        endpoint:
          type: string
          title: Endpoint
          description: CloudWatchLogs service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to CloudWatchLogs-compatible endpoint.
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for CloudWatchLogs
          description: Use Assume Role credentials to access CloudWatchLogs
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        maxQueueSize:
          type: number
          title: Queue size limit
          description: Maximum number of queued batches before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxRecordSizeKB:
          type: number
          title: Record size limit (KB, uncompressed)
          description: Maximum size (KB) of each individual record before compression. For non compressible data 1MB is the max recommended size
          default: 1024
          minimum: 1
          maximum: 10240
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputMinio:
      type: object
      required:
        - type
        - bucket
        - stagePath
        - endpoint
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - minio
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        endpoint:
          type: string
          title: MinIO endpoint
          description: MinIO service url (e.g. http://minioHost:9000)
          pattern: ^https?://.*
        bucket:
          type: string
          title: MinIO bucket name
          description: "Name of the destination MinIO bucket. This value can be a constant or a JavaScript expression that can only be evaluated at init time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`"
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key. This value can be a constant or a JavaScript expression, such as `${C.env.SOME_SECRET}`).
        region:
          type: string
          title: Region
          description: Region where the MinIO service/cluster is located
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
        destPath:
          type: string
          title: Key prefix
          description: Root directory to prepend to path before uploading. Enter a constant, or a JavaScript expression enclosed in quotes or backticks.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MinIO requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          x-speakeasy-unknown-values: allow
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
          x-speakeasy-unknown-values: allow
        serverSideEncryption:
          type: string
          title: Server-side encryption
          description: Server-side encryption for uploaded objects
          enum:
            - AES256
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates)
          default: true
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          x-speakeasy-unknown-values: allow
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          x-speakeasy-unknown-values: allow
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          x-speakeasy-unknown-values: allow
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          x-speakeasy-unknown-values: allow
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
              value:
                type: string
                title: Value
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
    OutputStatsd:
      type: object
      required:
        - type
        - protocol
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - statsd
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        protocol:
          type: string
          default: udp
          enum:
            - udp
            - tcp
          title: Destination protocol
          description: Protocol to use when communicating with the destination.
          x-speakeasy-unknown-values: allow
        host:
          type: string
          title: Host
          description: The hostname of the destination.
        port:
          type: number
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
        mtu:
          type: number
          default: 512
          minimum: 1
          maximum: 65535
          title: Record size limit (bytes)
          description: When protocol is UDP, specifies the maximum size of packets sent to the destination. Also known as the MTU for the network path to the destination system.
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: When protocol is TCP, specifies how often buffers should be flushed, resulting in records sent to the destination.
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every batch sent will incur a DNS lookup.
        description:
          type: string
          title: Description
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputStatsdExt:
      type: object
      required:
        - type
        - protocol
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - statsd_ext
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        protocol:
          type: string
          default: udp
          enum:
            - udp
            - tcp
          title: Destination protocol
          description: Protocol to use when communicating with the destination.
          x-speakeasy-unknown-values: allow
        host:
          type: string
          title: Host
          description: The hostname of the destination.
        port:
          type: number
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
        mtu:
          type: number
          default: 512
          minimum: 1
          maximum: 65535
          title: Record size limit (bytes)
          description: When protocol is UDP, specifies the maximum size of packets sent to the destination. Also known as the MTU for the network path to the destination system.
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: When protocol is TCP, specifies how often buffers should be flushed, resulting in records sent to the destination.
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every batch sent will incur a DNS lookup.
        description:
          type: string
          title: Description
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputGraphite:
      type: object
      required:
        - type
        - protocol
        - host
        - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - graphite
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        protocol:
          type: string
          default: udp
          enum:
            - udp
            - tcp
          title: Destination protocol
          description: Protocol to use when communicating with the destination.
          x-speakeasy-unknown-values: allow
        host:
          type: string
          title: Host
          description: The hostname of the destination.
        port:
          type: number
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
        mtu:
          type: number
          default: 512
          minimum: 1
          maximum: 65535
          title: Record size limit (bytes)
          description: When protocol is UDP, specifies the maximum size of packets sent to the destination. Also known as the MTU for the network path to the destination system.
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: When protocol is TCP, specifies how often buffers should be flushed, resulting in records sent to the destination.
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every batch sent will incur a DNS lookup.
        description:
          type: string
          title: Description
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputRouter:
      type: object
      required:
        - type
        - rules
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - router
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        rules:
          type: array
          title: Rules
          description: Event routing rules
          minItems: 1
          items:
            type: object
            required:
              - filter
              - output
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression to select events to send to output
              output:
                type: string
                title: Output
                description: Output to send matching events to
              description:
                type: string
                title: Description
                description: Description of this rule's purpose
              final:
                type: boolean
                title: Final
                description: Flag to control whether to stop the event from being checked against other rules
                default: true
        description:
          type: string
          title: Description
    OutputSns:
      type: object
      required:
        - type
        - topicArn
        - messageGroupId
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - sns
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        topicArn:
          type: string
          title: Topic ARN
          description: "The ARN of the SNS topic to send events to. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. E.g., 'https://host:port/myQueueName'. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`"
        messageGroupId:
          type: string
          title: Message Group ID
          description: "Messages in the same group are processed in a FIFO manner. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        maxRetries:
          type: number
          title: Maximum number of retries
          description: Maximum number of retries before the output returns an error. Note that not all errors are retryable. The retries use an exponential backoff policy.
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the SNS is located
        endpoint:
          type: string
          title: Endpoint
          description: SNS service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to SNS-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SNS requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for SNS
          description: Use Assume Role credentials to access SNS
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputSqs:
      type: object
      required:
        - type
        - queueName
        - queueType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - sqs
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        queueName:
          type: string
          title: Queue Name
          description: "The name, URL, or ARN of the SQS queue to send events to. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        queueType:
          title: Queue Type
          type: string
          description: The queue type used (or created). Defaults to Standard.
          enum:
            - standard
            - fifo
          default: standard
          x-speakeasy-unknown-values: allow
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
        messageGroupId:
          type: string
          title: Message Group ID
          description: This parameter applies only to FIFO queues. The tag that specifies that a message belongs to a specific message group. Messages that belong to the same message group are processed in a FIFO manner. Use event field __messageGroupId to override this value.
          default: cribl
        createQueue:
          type: boolean
          title: Create Queue
          description: Create queue if it does not exist.
          default: true
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the SQS queue is located. Required, unless the Queue entry is a URL or ARN that includes a Region.
        endpoint:
          type: string
          title: Endpoint
          description: SQS service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to SQS-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SQS requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for SQS
          description: Use Assume Role credentials to access SQS
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        maxQueueSize:
          type: number
          title: Queue size limit
          description: Maximum number of queued batches before blocking.
          default: 100
          minimum: 1
        maxRecordSizeKB:
          type: number
          title: Record size limit (KB)
          description: Maximum size (KB) of batches to send. Per the SQS spec, the max allowed value is 256 KB.
          default: 256
          minimum: 1
          maximum: 256
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
        maxInProgress:
          type: number
          title: Concurrent request limit
          description: The maximum number of in-progress API requests before backpressure is applied.
          default: 10
          minimum: 1
          maximum: 100
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputSnmp:
      type: object
      required:
        - type
        - hosts
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - snmp
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        hosts:
          type: array
          title: SNMP Trap Destinations
          description: One or more SNMP destinations to forward traps to
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: Destination host
              port:
                type: number
                title: Port
                maximum: 65535
                description: Destination port, default is 162
                default: 162
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if all destinations are IP addresses. A value of 0 means every trap sent will incur a DNS lookup.
        description:
          type: string
          title: Description
    OutputSumoLogic:
      type: object
      required:
        - type
        - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - sumo_logic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        url:
          type: string
          title: API URL
          description: Sumo Logic HTTP collector URL to which events should be sent
          pattern: ^https?://.*
        customSource:
          type: string
          title: Custom source name
          description: Override the source name configured on the Sumo Logic HTTP collector. This can also be overridden at the event level with the __sourceName field.
        customCategory:
          type: string
          title: Custom source category
          description: Override the source category configured on the Sumo Logic HTTP collector. This can also be overridden at the event level with the __sourceCategory field.
        format:
          type: string
          title: Data format
          description: Preserve the raw event format instead of JSONifying it
          enum:
            - json
            - raw
          default: json
          x-speakeasy-unknown-values: allow
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
        description:
          type: string
          title: Description
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputDatadog:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - datadog
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        contentType:
          type: string
          title: Send logs as
          description: The content type to use when sending logs
          enum:
            - text
            - json
          default: json
          x-speakeasy-unknown-values: allow
        message:
          type: string
          title: Message field
          description: Name of the event field that contains the message to send. If not specified, Stream sends a JSON representation of the whole event.
        source:
          type: string
          title: Source
          description: Name of the source to send with logs. When you send logs as JSON objects, the event's 'source' field (if set) will override this value.
        host:
          type: string
          title: Host
          description: Name of the host to send with logs. When you send logs as JSON objects, the event's 'host' field (if set) will override this value.
        service:
          type: string
          title: Service
          description: Name of the service to send with logs. When you send logs as JSON objects, the event's '__service' field (if set) will override this value.
        tags:
          type: array
          title: Datadog tags
          description: List of tags to send with logs, such as 'env:prod' and 'env_staging:east'
          default: []
          items:
            type: string
        batchByTags:
          type: boolean
          title: Batch by tags
          description: Batch events by API key and the ddtags field on the event. When disabled, batches events only by API key. If incoming events have high cardinality in the ddtags field, disabling this setting may improve Destination performance.
          default: true
        allowApiKeyFromEvents:
          type: boolean
          title: Allow API key from events
          description: Allow API key to be set from the event's '__agent_api_key' field
          default: false
        severity:
          type: string
          title: Severity
          description: Default value for message severity. When you send logs as JSON objects, the event's '__severity' field (if set) will override this value.
          enum:
            - emergency
            - alert
            - critical
            - error
            - warning
            - notice
            - info
            - debug
          x-speakeasy-unknown-values: allow
        site:
          type: string
          title: Datadog site
          description: Datadog site to which events should be sent
          default: us
          enum:
            - us
            - us3
            - us5
            - eu
            - fed1
            - ap1
            - custom
          x-speakeasy-unknown-values: allow
        sendCountersAsCount:
          type: boolean
          title: Send counter metrics as 'count'
          description: If not enabled, Datadog will transform 'counter' metrics to 'gauge'. [Learn more about Datadog metrics types.](https://docs.datadoghq.com/metrics/types/?tab=count)
          default: false
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          x-speakeasy-unknown-values: allow
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
        description:
          type: string
          title: Description
        customUrl:
          type: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        apiKey:
          type: string
          title: API key
          description: Organization's API key in Datadog
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
      required:
        - type
    OutputGrafanaCloud:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - grafana_cloud
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as dimensions and labels to generated metrics and logs, respectively.
          default:
            - cribl_host
            - cribl_wp
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        lokiUrl:
          type: string
          title: Loki URL
          description: The endpoint to send logs to, such as https://logs-prod-us-central1.grafana.net
          pattern: ^https?://
        prometheusUrl:
          type: string
          title: Prometheus URL
          description: The remote_write endpoint to send Prometheus metrics to, such as https://prometheus-blocks-prod-us-central1.grafana.net/api/prom/push
          pattern: ^https?://
        message:
          type: string
          title: Logs message field
          description: Name of the event field that contains the message to send. If not specified, Stream sends a JSON representation of the whole event.
        messageFormat:
          type: string
          title: Message format
          description: Format to use when sending logs to Loki (Protobuf or JSON)
          enum:
            - protobuf
            - json
          default: protobuf
          x-speakeasy-unknown-values: allow
        labels:
          type: array
          title: Logs labels
          description: "List of labels to send with logs. Labels define Loki streams, so use static labels to avoid proliferating label value combinations and streams. Can be merged and/or overridden by the event's __labels field. Example: '__labels: {host: \"cribl.io\", level: \"error\"}'"
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                default: ""
              value:
                type: string
                title: Value
        metricRenameExpr:
          type: string
          title: Metrics renaming expression
          description: JavaScript expression that can be used to rename metrics. For example, name.replace(/\./g, '_') will replace all '.' characters in a metric's name with the supported '_' character. Use the 'name' global variable to access the metric's name. You can access event fields' values via __e.<fieldName>.
          default: name.replace(/[^a-zA-Z0-9_]/g, '_')
        prometheusAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              enum:
                - none
                - token
                - textSecret
                - basic
                - credentialsSecret
              default: basic
              x-speakeasy-unknown-values: allow
            token:
              type: string
              title: Auth token
              description: "Bearer token to include in the authorization header. In Grafana Cloud, this is generally built by concatenating the username and the API key, separated by a colon. Example: <your-username>:<your-api-key>"
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select or create a stored text secret
            username:
              type: string
              title: Username
              description: Username for authentication
            password:
              type: string
              title: Password
              description: Password (API key in Grafana Cloud domain) for authentication
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
        lokiAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              enum:
                - none
                - token
                - textSecret
                - basic
                - credentialsSecret
              default: basic
              x-speakeasy-unknown-values: allow
            token:
              type: string
              title: Auth token
              description: "Bearer token to include in the authorization header. In Grafana Cloud, this is generally built by concatenating the username and the API key, separated by a colon. Example: <your-username>:<your-api-key>"
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select or create a stored text secret
            username:
              type: string
              title: Username
              description: Username for authentication
            password:
              type: string
              title: Password
              description: Password (API key in Grafana Cloud domain) for authentication
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
        concurrency:
          type: number
          title: Request concurrency
          description: "Maximum number of ongoing requests before blocking. Warning: Setting this value > 1 can cause Loki and Prometheus to complain about entries being delivered out of order."
          default: 1
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: "Maximum size, in KB, of the request body. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki and Prometheus to complain about entries being delivered out of order."
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: "Maximum number of events to include in the request body. Default is 0 (unlimited). Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki and Prometheus to complain about entries being delivered out of order."
          default: 0
          minimum: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 15
          title: Flush period (sec)
          description: "Maximum time between requests. Small values could cause the payload size to be smaller than the configured Maximum time between requests. Small values can reduce the payload size below the configured 'Max record size' and 'Max events per request'. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki and Prometheus to complain about entries being delivered out of order."
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending. Applies only to JSON payloads; the Protobuf variant for both Prometheus and Loki are snappy-compressed by default.
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
      anyOf:
        - required:
            - lokiUrl
        - required:
            - prometheusUrl
      required:
        - type
    OutputLoki:
      type: object
      required:
        - type
        - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - loki
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as labels to generated logs.
          default:
            - cribl_host
            - cribl_wp
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        url:
          type: string
          title: Loki URL
          description: The endpoint to send logs to
          pattern: ^https?://.*
        message:
          type: string
          title: Logs message field
          description: Name of the event field that contains the message to send. If not specified, Stream sends a JSON representation of the whole event.
        messageFormat:
          type: string
          title: Message format
          description: Format to use when sending logs to Loki (Protobuf or JSON)
          enum:
            - protobuf
            - json
          default: protobuf
          x-speakeasy-unknown-values: allow
        labels:
          type: array
          title: Logs labels
          description: "List of labels to send with logs. Labels define Loki streams, so use static labels to avoid proliferating label value combinations and streams. Can be merged and/or overridden by the event's __labels field. Example: '__labels: {host: \"cribl.io\", level: \"error\"}'"
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                default: ""
              value:
                type: string
                title: Value
        authType:
          type: string
          title: Authentication type
          enum:
            - none
            - token
            - textSecret
            - basic
            - credentialsSecret
          default: none
          x-speakeasy-unknown-values: allow
        concurrency:
          type: number
          title: Request concurrency
          description: "Maximum number of ongoing requests before blocking. Warning: Setting this value > 1 can cause Loki to complain about entries being delivered out of order."
          default: 1
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: "Maximum size, in KB, of the request body. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki to complain about entries being delivered out of order."
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: "Maximum number of events to include in the request body. Defaults to 0 (unlimited). Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki to complain about entries being delivered out of order."
          default: 0
          minimum: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 15
          title: Flush period (sec)
          description: "Maximum time between requests. Small values could cause the payload size to be smaller than the configured Maximum time between requests. Small values can reduce the payload size below the configured 'Max record size' and 'Max events per request'. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki to complain about entries being delivered out of order."
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
        enableDynamicHeaders:
          type: boolean
          title: Enable dynamic headers
          description: Add per-event HTTP headers from the __headers field to outgoing requests. Events with different headers are batched and sent separately.
          default: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
        description:
          type: string
          title: Description
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        token:
          type: string
          title: Auth token
          description: "Bearer token to include in the authorization header. In Grafana Cloud, this is generally built by concatenating the username and the API key, separated by a colon. Example: <your-username>:<your-api-key>"
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
        username:
          type: string
          title: Username
          description: Username for authentication
        password:
          type: string
          title: Password
          description: Password (API key in Grafana Cloud domain) for authentication
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputPrometheus:
      type: object
      required:
        - type
        - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - prometheus
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as dimensions to generated metrics.
          default:
            - cribl_host
            - cribl_wp
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        url:
          type: string
          title: Remote Write URL
          description: The endpoint to send metrics to
          pattern: ^https?://.*
        metricRenameExpr:
          type: string
          title: Metric renaming expression
          description: JavaScript expression that can be used to rename metrics. For example, name.replace(/\./g, '_') will replace all '.' characters in a metric's name with the supported '_' character. Use the 'name' global variable to access the metric's name. You can access event fields' values via __e.<fieldName>.
          default: name.replace(/[^a-zA-Z0-9_]/g, '_')
        sendMetadata:
          type: boolean
          title: Send metadata
          description: Generate and send metadata (`type` and `metricFamilyName`) requests
          default: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          type: string
          title: Authentication type
          description: Remote Write authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        metricsFlushPeriodSec:
          type: number
          default: 60
          title: Metadata flush period (sec)
          description: How frequently metrics metadata is sent out. Value cannot be smaller than the base Flush period set above.
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
    OutputRing:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - ring
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        format:
          type: string
          title: Data format
          description: Format of the output data.
          enum:
            - json
            - raw
          default: json
          x-speakeasy-unknown-values: allow
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JS expression to define how files are partitioned and organized. If left blank, Cribl Stream will fallback on event.__partition.
        maxDataSize:
          type: string
          title: Data size limit
          description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1GB
        maxDataTime:
          title: Data age limit
          type: string
          description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
          pattern: \d+[smhd]$
          default: 24h
        compress:
          type: string
          title: Data compression format
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        destPath:
          type: string
          title: Path location
          description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/<id>
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
      required:
        - type
    OutputOpenTelemetry:
      type: object
      required:
        - type
        - endpoint
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - open_telemetry
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        protocol:
          type: string
          title: Protocol
          description: Select a transport option for OpenTelemetry
          enum:
            - grpc
            - http
          default: grpc
          x-speakeasy-unknown-values: allow
        endpoint:
          type: string
          title: Endpoint
          description: The endpoint where OTel events will be sent. Enter any valid URL or an IP address (IPv4 or IPv6; enclose IPv6 addresses in square brackets). Unspecified ports will default to 4317, unless the endpoint is an HTTPS-based URL or TLS is enabled, in which case 443 will be used.
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when structuring data to send
          enum:
            - 0.10.0
            - 1.3.1
          default: 0.10.0
          x-speakeasy-unknown-values: allow
        compress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
            - none
            - deflate
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        httpCompress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        authType:
          type: string
          title: Authentication type
          description: OpenTelemetry authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
          x-speakeasy-unknown-values: allow
        httpTracesEndpointOverride:
          type: string
          title: Traces endpoint override
          description: If you want to send traces to the default `{endpoint}/v1/traces` endpoint, leave this field empty; otherwise, specify the desired endpoint
        httpMetricsEndpointOverride:
          type: string
          title: Metrics endpoint override
          description: If you want to send metrics to the default `{endpoint}/v1/metrics` endpoint, leave this field empty; otherwise, specify the desired endpoint
        httpLogsEndpointOverride:
          type: string
          title: Logs endpoint override
          description: If you want to send logs to the default `{endpoint}/v1/logs` endpoint, leave this field empty; otherwise, specify the desired endpoint
        metadata:
          type: array
          title: Metadata
          description: List of key-value pairs to send with each gRPC request. Value supports JavaScript expressions that are evaluated just once, when the destination gets started. To pass credentials as metadata, use 'C.Secret'.
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
              value:
                type: string
                title: Value
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often the sender should ping the peer to keep the connection open
          minimum: 1
          default: 30
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputServiceNow:
      type: object
      required:
        - type
        - endpoint
        - protocol
        - otlpVersion
        - tokenSecret
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - service_now
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        endpoint:
          type: string
          title: Endpoint
          description: The endpoint where ServiceNow events will be sent. Enter any valid URL or an IP address (IPv4 or IPv6; enclose IPv6 addresses in square brackets)
          default: ingest.lightstep.com:443
        tokenSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
        authTokenName:
          type: string
          title: Auth token name
          default: lightstep-access-token
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when structuring data to send
          enum:
            - 1.3.1
          default: 1.3.1
          x-speakeasy-unknown-values: allow
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 2048
          minimum: 1024
          maximum: 10240
        protocol:
          type: string
          title: Protocol
          description: Select a transport option for OpenTelemetry
          enum:
            - grpc
            - http
          default: grpc
          x-speakeasy-unknown-values: allow
        compress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
            - none
            - deflate
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        httpCompress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        httpTracesEndpointOverride:
          type: string
          title: Traces endpoint override
          description: If you want to send traces to the default `{endpoint}/v1/traces` endpoint, leave this field empty; otherwise, specify the desired endpoint
        httpMetricsEndpointOverride:
          type: string
          title: Metrics endpoint override
          description: If you want to send metrics to the default `{endpoint}/v1/metrics` endpoint, leave this field empty; otherwise, specify the desired endpoint
        httpLogsEndpointOverride:
          type: string
          title: Logs endpoint override
          description: If you want to send logs to the default `{endpoint}/v1/logs` endpoint, leave this field empty; otherwise, specify the desired endpoint
        metadata:
          type: array
          title: Metadata
          description: List of key-value pairs to send with each gRPC request. Value supports JavaScript expressions that are evaluated just once, when the destination gets started. To pass credentials as metadata, use 'C.Secret'.
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
              value:
                type: string
                title: Value
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often the sender should ping the peer to keep the connection open
          minimum: 1
          default: 30
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputDataset:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - dataset
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        messageField:
          type: string
          title: Message field
          description: Name of the event field that contains the message or attributes to send. If not specified, all of the event's non-internal fields will be sent as attributes.
        excludeFields:
          type: array
          title: Exclude fields
          description: Fields to exclude from the event if the Message field is either unspecified or refers to an object. Ignored if the Message field is a string. If empty, we send all non-internal fields.
          default:
            - sev
            - _time
            - ts
            - thread
          items:
            type: string
        serverHostField:
          type: string
          title: Server/host field
          description: Name of the event field that contains the `serverHost` identifier. If not specified, defaults to `cribl_<outputId>`.
        timestampField:
          type: string
          title: Timestamp field
          description: Name of the event field that contains the timestamp. If not specified, defaults to `ts`, `_time`, or `Date.now()`, in that order.
        defaultSeverity:
          type: string
          title: Severity
          description: Default value for event severity. If the `sev` or `__severity` fields are set on an event, the first one matching will override this value.
          default: info
          enum:
            - finest
            - finer
            - fine
            - info
            - warning
            - error
            - fatal
          x-speakeasy-unknown-values: allow
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default:
            - httpStatus: 429
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
        site:
          type: string
          title: DataSet site
          description: DataSet site to which events should be sent
          default: us
          enum:
            - us
            - eu
            - custom
          x-speakeasy-unknown-values: allow
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 6144
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          x-speakeasy-unknown-values: allow
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
        description:
          type: string
          title: Description
        customUrl:
          type: string
          pattern: ^https?://.*
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        apiKey:
          type: string
          title: API key
          description: A 'Log Write Access' API key for the DataSet account
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
      required:
        - type
    OutputCriblTcp:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - cribl_tcp
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the data before sending
          x-speakeasy-unknown-values: allow
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
        tokenTTLMinutes:
          type: number
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated authentication token expires, valid values between 1 and 60
        excludeFields:
          type: array
          title: Exclude fields
          description: "Fields to exclude from the event. By default, all internal fields except `__output` are sent. Example: `cribl_pipe`, `c*`. Wildcards supported."
          default:
            - __kube_*
            - __metadata
            - __winEvent
          items:
            type: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        host:
          type: string
          title: Address
          description: The hostname of the receiver
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          default: 10300
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
        hosts:
          type: array
          title: Destinations
          description: Set of hosts to load-balance data to
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver
              port:
                type: number
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host
                default: 10300
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS
                enum:
                  - inherit
                  - off
                default: inherit
                x-speakeasy-unknown-values: allow
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not specified, defaults to connection host (if not an IP); otherwise, uses the global TLS settings.
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
        maxConcurrentSenders:
          type: number
          default: 0
          minimum: 0
          title: Connection limit
          description: Maximum number of concurrent connections (per Worker Process). A random set of IPs will be picked on every DNS resolution period. Use 0 for unlimited.
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
      required:
        - type
    OutputCriblHttp:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - cribl_http
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: For optimal performance, enable load balancing even if you have one hostname, as it can expand to multiple IPs. If this setting is disabled, consider enabling round-robin DNS.
          default: true
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        tokenTTLMinutes:
          type: number
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated authentication token expires. Valid values are between 1 and 60.
        excludeFields:
          type: array
          title: Exclude fields
          description: "Fields to exclude from the event. By default, all internal fields except `__output` are sent. Example: `cribl_pipe`, `c*`. Wildcards supported."
          default:
            - __kube_*
            - __metadata
            - __winEvent
          items:
            type: string
        compression:
          type: string
          default: gzip
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the data before sending
          x-speakeasy-unknown-values: allow
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default:
            - httpStatus: 401
              initialBackoff: 30000
              backoffRate: 2
              maxBackoff: 180000
            - httpStatus: 408
              initialBackoff: 30000
              backoffRate: 2
              maxBackoff: 180000
            - httpStatus: 429
              initialBackoff: 30000
              backoffRate: 2
              maxBackoff: 180000
            - httpStatus: 500
              initialBackoff: 30000
              backoffRate: 2
              maxBackoff: 180000
            - httpStatus: 502
              initialBackoff: 30000
              backoffRate: 2
              maxBackoff: 180000
            - httpStatus: 503
              initialBackoff: 30000
              backoffRate: 2
              maxBackoff: 180000
            - httpStatus: 504
              initialBackoff: 30000
              backoffRate: 2
              maxBackoff: 180000
            - httpStatus: 509
              initialBackoff: 30000
              backoffRate: 2
              maxBackoff: 180000
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: true
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        url:
          type: string
          title: Cribl endpoint
          description: URL of a Cribl Worker to send events to, such as http://localhost:10200
          pattern: ^https?://.*
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
        urls:
          type: array
          title: Cribl Worker endpoints
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url:
                type: string
                title: Cribl Endpoint
                description: URL of a Cribl Worker to send events to, such as http://localhost:10200
                pattern: ^https?://.*
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
      required:
        - type
    OutputHumioHec:
      type: object
      required:
        - type
        - format
        - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - humio_hec
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        url:
          type: string
          title: LogScale endpoint
          description: "URL to a CrowdStrike Falcon LogScale endpoint to send events to. Examples: https://cloud.us.humio.com/api/v1/ingest/hec for JSON and https://cloud.us.humio.com/api/v1/ingest/hec/raw for raw"
          default: https://cloud.us.humio.com/api/v1/ingest/hec
          pattern: ^https?://.*
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 32768
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        format:
          title: Request format
          type: string
          enum:
            - JSON
            - raw
          default: JSON
          description: When set to JSON, the event is automatically formatted with required fields before sending. When set to Raw, only the event's `_raw` value is sent.
          x-speakeasy-unknown-values: allow
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        token:
          type: string
          title: LogScale auth token
          description: CrowdStrike Falcon LogScale authentication token
        textSecret:
          type: string
          title: LogScale auth token (text secret)
          description: Select or create a stored text secret
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputCrowdstrikeNextGenSiem:
      type: object
      required:
        - type
        - format
        - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - crowdstrike_next_gen_siem
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        url:
          type: string
          title: Next-Gen SIEM endpoint
          description: |-
            URL provided from a CrowdStrike data connector.
            Example: https://ingest.<region>.crowdstrike.com/api/ingest/hec/<connection-id>/v1/services/collector
          pattern: ^https?://.*
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 32768
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        format:
          title: Request format
          type: string
          enum:
            - JSON
            - raw
          default: JSON
          description: When set to JSON, the event is automatically formatted with required fields before sending. When set to Raw, only the event's `_raw` value is sent.
          x-speakeasy-unknown-values: allow
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        token:
          type: string
          title: Next-Gen SIEM authentication token
        textSecret:
          type: string
          title: Next-Gen SIEM authentication token (text secret)
          description: Select or create a stored text secret
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputDlS3:
      type: object
      required:
        - type
        - bucket
        - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - dl_s3
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`"
        region:
          type: string
          title: Region
          description: Region where the S3 bucket is located
        awsSecretKey:
          type: string
          title: Secret key
          description: "Secret key. This value can be a constant or a JavaScript expression. Example: `${C.env.SOME_SECRET}`)"
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to prepend to files before uploading. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`"
          default: ""
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          x-speakeasy-unknown-values: allow
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - GLACIER_IR
            - DEEP_ARCHIVE
          x-speakeasy-unknown-values: allow
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
            - AES256
            - aws:kms
          x-speakeasy-unknown-values: allow
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
            - json
            - raw
            - parquet
          default: json
          x-speakeasy-unknown-values: allow
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts upload limit
          description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
        partitioningFields:
          type: array
          title: Partition by fields
          description: List of fields to partition the path by, in addition to time, which is included automatically. The effective partition will be YYYY/MM/DD/HH/<list/of/fields>.
          default: []
          items:
            type: string
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
            - best_speed
            - normal
            - best_compression
          default: best_speed
          x-speakeasy-unknown-values: allow
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          x-speakeasy-unknown-values: allow
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          x-speakeasy-unknown-values: allow
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
              value:
                type: string
                title: Value
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
    OutputSecurityLake:
      type: object
      required:
        - type
        - bucket
        - stagePath
        - region
        - accountId
        - customSource
        - assumeRoleArn
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - security_lake
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as dimensions and labels to generated metrics and logs, respectively.
          default: []
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`"
        region:
          type: string
          title: Region
          description: Region where the Amazon Security Lake is located.
        awsSecretKey:
          type: string
          title: Secret key
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
          x-speakeasy-unknown-values: allow
        endpoint:
          type: string
          title: Endpoint
          description: Amazon Security Lake service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to Amazon Security Lake-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Amazon Security Lake requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          x-speakeasy-unknown-values: allow
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - GLACIER_IR
            - DEEP_ARCHIVE
          x-speakeasy-unknown-values: allow
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
            - AES256
            - aws:kms
          x-speakeasy-unknown-values: allow
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts upload limit
          description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
        accountId:
          type: string
          title: Account ID
          description: ID of the AWS account whose data the Destination will write to Security Lake. This should have been configured when creating the Amazon Security Lake custom source.
        customSource:
          type: string
          title: Custom source name
          description: Name of the custom source configured in Amazon Security Lake
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
        parquetVersion:
          type: string
          title: Parquet version
          enum:
            - PARQUET_1_0
            - PARQUET_2_4
            - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          x-speakeasy-unknown-values: allow
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
            - DATA_PAGE_V1
            - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          x-speakeasy-unknown-values: allow
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
              value:
                type: string
                title: Value
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
        parquetSchema:
          type: string
          title: Parquet schema
          description: To add a new schema, navigate to Processing > Knowledge > Parquet Schemas
          minLength: 1
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
    OutputCriblLake:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - cribl_lake
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`"
        region:
          type: string
          title: Region
          description: Region where the S3 bucket is located
        awsSecretKey:
          type: string
          title: Secret key
          description: "Secret key. This value can be a constant or a JavaScript expression. Example: `${C.env.SOME_SECRET}`)"
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
          x-speakeasy-unknown-values: allow
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
        destPath:
          type: string
          title: Lake dataset
          description: Lake dataset to send the data to.
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          x-speakeasy-unknown-values: allow
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - GLACIER_IR
            - DEEP_ARCHIVE
          x-speakeasy-unknown-values: allow
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
            - AES256
            - aws:kms
          x-speakeasy-unknown-values: allow
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 64
          maximum: 1024
          minimum: 5
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
            - block
            - drop
          default: block
          x-speakeasy-unknown-values: allow
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 5
          maximum: 86400
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
        awsAuthenticationMethod:
          type: string
          default: auto
          enum:
            - auto
            - auto_rpc
            - manual
          x-speakeasy-unknown-values: allow
        format:
          type: string
          enum:
            - json
            - parquet
            - ddss
          x-speakeasy-unknown-values: allow
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
          default: 1
          minimum: 1
          maximum: 10
        description:
          type: string
          title: Description
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
      required:
        - type
    OutputDiskSpool:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - disk_spool
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        timeWindow:
          type: string
          title: Bucket time span
          description: Time period for grouping spooled events. Default is 10m.
          default: 10m
        maxDataSize:
          type: string
          title: Data size limit
          description: "Maximum disk space that can be consumed before older buckets are deleted. Examples: 420MB, 4GB. Default is 1GB."
          pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
          default: 1GB
        maxDataTime:
          title: Data age limit
          type: string
          description: "Maximum amount of time to retain data before older buckets are deleted. Examples: 2h, 4d. Default is 24h."
          pattern: \d+[smhd]$
          default: 24h
        compress:
          type: string
          title: Compression
          description: Data compression format. Default is gzip.
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized within the time-buckets. If blank, the event's __partition property is used and otherwise, events go directly into the time-bucket directory.
        description:
          type: string
          title: Description
      required:
        - type
    OutputClickHouse:
      type: object
      required:
        - type
        - database
        - tableName
        - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - click_house
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        url:
          type: string
          title: URL
          description: "URL of the ClickHouse instance. Example: http://localhost:8123/"
        authType:
          type: string
          title: Authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - sslUserCertificate
            - token
            - textSecret
            - oauth
          default: none
          x-speakeasy-unknown-values: allow
        database:
          type: string
          title: ClickHouse database
        tableName:
          type: string
          title: ClickHouse table
          description: Name of the ClickHouse table where data will be inserted. Name can contain letters (A-Z, a-z), numbers (0-9), and the character "_", and must start with either a letter or the character "_".
          pattern: ^[a-zA-Z_][0-9a-zA-Z_]*$
        format:
          type: string
          title: Format
          description: Data format to use when sending data to ClickHouse. Defaults to JSON Compact.
          enum:
            - json-compact-each-row-with-names
            - json-each-row
          default: json-compact-each-row-with-names
          x-speakeasy-unknown-values: allow
        mappingType:
          type: string
          title: Mapping type
          description: How event fields are mapped to ClickHouse columns.
          enum:
            - automatic
            - custom
          default: automatic
          x-speakeasy-unknown-values: allow
        asyncInserts:
          type: boolean
          title: Async inserts
          description: Collect data into batches for later processing. Disable to write to a ClickHouse table immediately.
          default: false
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
              x-speakeasy-unknown-values: allow
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        dumpFormatErrorsToDisk:
          type: boolean
          title: Log last schema mismatch
          description: Log the most recent event that fails to match the table schema
          default: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
        sqlUsername:
          type: string
          title: Username
          description: Username for certificate authentication
        waitForAsyncInserts:
          type: boolean
          title: Wait for async inserts
          description: Cribl will wait for confirmation that data has been fully inserted into the ClickHouse database before proceeding. Disabling this option can increase throughput, but Cribl won’t be able to verify data has been completely inserted.
          default: true
        excludeMappingFields:
          type: array
          title: Exclude fields
          description: Fields to exclude from sending to ClickHouse
          default: []
          items:
            type: string
        describeTable:
          type: string
          title: Retrieve table columns
          description: Retrieves the table schema from ClickHouse and populates the Column Mapping table
        columnMappings:
          type: array
          title: Column Mapping
          items:
            type: object
            required:
              - columnName
              - columnValueExpression
            properties:
              columnName:
                type: string
                title: Column name
                description: Name of the column in ClickHouse that will store field value
              columnType:
                type: string
                title: Column type
                description: Type of the column in the ClickHouse database
              columnValueExpression:
                type: string
                title: Column value
                description: JavaScript expression to compute value to be inserted into ClickHouse table
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputXsiam:
      type: object
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - xsiam
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
          default: false
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 10000
          minimum: 100
          maximum: 10000
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        authType:
          title: Authentication method
          type: string
          enum:
            - token
            - secret
          default: token
          description: Enter a token directly, or provide a secret referencing a token
          x-speakeasy-unknown-values: allow
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        throttleRateReqPerSec:
          type: integer
          title: Throttle request rate limit
          description: Maximum number of requests to limit to per second
          maximum: 2000
          default: 400
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
        description:
          type: string
          title: Description
        url:
          type: string
          title: XSIAM endpoint
          description: XSIAM endpoint URL to send events to, such as https://api-{tenant external URL}/logs/v1/event
          default: http://localhost:8088/logs/v1/event
          pattern: ^https?://.*
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
        urls:
          type: array
          title: XSIAM Endpoints
          minItems: 1
          items:
            type: object
            required:
              - url
            properties:
              url: {}
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
        token:
          type: string
          title: Auth token
          description: XSIAM authentication token
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
      required:
        - type
    OutputNetflow:
      type: object
      required:
        - type
        - hosts
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - netflow
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        hosts:
          type: array
          title: NetFlow Destinations
          description: One or more NetFlow destinations to forward events to
          minItems: 1
          items:
            type: object
            required:
              - host
              - port
            properties:
              host:
                type: string
                title: Address
                description: Destination host
              port:
                type: number
                title: Port
                maximum: 65535
                description: Destination port, default is 2055
                default: 2055
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if all destinations are IP addresses. A value of 0 means every datagram sent will incur a DNS lookup.
        description:
          type: string
          title: Description
    OutputDynatraceHttp:
      type: object
      required:
        - type
        - format
        - endpoint
        - telemetryType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - dynatrace_http
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        method:
          type: string
          title: Method
          description: The method to use when sending events
          enum:
            - POST
            - PUT
            - PATCH
          default: POST
          x-speakeasy-unknown-values: allow
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 5000
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          maximum: 50000
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events. You can also add headers dynamically on a per-event basis in the __headers field, as explained in [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        authType:
          type: string
          title: Authentication type
          enum:
            - token
            - textSecret
          default: token
          x-speakeasy-unknown-values: allow
        format:
          type: string
          title: Format
          description: How to format events before sending. Defaults to JSON. Plaintext is not currently supported.
          enum:
            - json_array
            - plaintext
          default: json_array
          x-speakeasy-unknown-values: allow
        endpoint:
          type: string
          title: Endpoint
          enum:
            - cloud
            - activeGate
            - manual
          default: cloud
          x-speakeasy-unknown-values: allow
        telemetryType:
          type: string
          title: Telemetry type
          enum:
            - logs
            - metrics
          default: logs
          x-speakeasy-unknown-values: allow
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
        description:
          type: string
          title: Description
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        environmentId:
          type: string
          title: Environment ID
          description: ID of the environment to send to
        activeGateDomain:
          type: string
          description: ActiveGate domain with Log analytics collector module enabled. For example https://{activeGate-domain}:9999/e/{environment-id}/api/v2/logs/ingest.
          title: ActiveGate domain
        url:
          title: URL
          type: string
          description: URL to send events to. Can be overwritten by an event's __url field.
          pattern: ^https?://.*
    OutputDynatraceOtlp:
      type: object
      required:
        - type
        - endpoint
        - endpointType
        - protocol
        - otlpVersion
        - tokenSecret
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - dynatrace_otlp
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        protocol:
          type: string
          title: Protocol
          description: Select a transport option for Dynatrace
          enum:
            - http
          default: http
          x-speakeasy-unknown-values: allow
        endpoint:
          type: string
          title: Endpoint
          description: The endpoint where Dynatrace events will be sent. Enter any valid URL or an IP address (IPv4 or IPv6; enclose IPv6 addresses in square brackets)
          default: https://{your-environment-id}.live.dynatrace.com/api/v2/otlp
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when structuring data to send
          enum:
            - 1.3.1
          default: 1.3.1
          x-speakeasy-unknown-values: allow
        compress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
            - none
            - deflate
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        httpCompress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
            - none
            - gzip
          default: gzip
          x-speakeasy-unknown-values: allow
        httpTracesEndpointOverride:
          type: string
          title: Traces endpoint override
          description: If you want to send traces to the default `{endpoint}/v1/traces` endpoint, leave this field empty; otherwise, specify the desired endpoint
        httpMetricsEndpointOverride:
          type: string
          title: Metrics endpoint override
          description: If you want to send metrics to the default `{endpoint}/v1/metrics` endpoint, leave this field empty; otherwise, specify the desired endpoint
        httpLogsEndpointOverride:
          type: string
          title: Logs endpoint override
          description: If you want to send logs to the default `{endpoint}/v1/logs` endpoint, leave this field empty; otherwise, specify the desired endpoint
        metadata:
          type: array
          title: Metadata
          description: List of key-value pairs to send with each gRPC request. Value supports JavaScript expressions that are evaluated just once, when the destination gets started. To pass credentials as metadata, use 'C.Secret'.
          items:
            type: object
            required:
              - key
              - value
            properties:
              key:
                type: string
                title: Key
                default: ""
              value:
                type: string
                title: Value
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit
          description: Maximum size (in KB) of the request body. The maximum payload size is 4 MB. If this limit is exceeded, the entire OTLP message is dropped
          default: 2048
          minimum: 1024
          maximum: 4096
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often the sender should ping the peer to keep the connection open
          minimum: 1
          default: 30
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
        endpointType:
          type: string
          title: Endpoint type
          description: Select the type of Dynatrace endpoint configured
          enum:
            - saas
            - ag
          default: saas
          x-speakeasy-unknown-values: allow
        tokenSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
        authTokenName:
          type: string
          title: Api-Token name
          default: Authorization
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    OutputSentinelOneAiSiem:
      type: object
      required:
        - type
        - region
        - endpoint
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
        type:
          type: string
          enum:
            - sentinel_one_ai_siem
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default:
            - cribl_pipe
          items:
            type: string
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        region:
          type: string
          title: Region
          description: The SentinelOne region to send events to. In most cases you can find the region by either looking at your SentinelOne URL or knowing what geographic region your SentinelOne instance is contained in.
          default: US
          enum:
            - US
            - CA
            - EMEA
            - AP
            - APS
            - AU
            - Custom
          x-speakeasy-unknown-values: allow
        endpoint:
          title: AI SIEM endpoint path
          type: string
          default: /services/collector/event
          enum:
            - /services/collector/event
            - /services/collector/raw
          description: Endpoint to send events to. Use /services/collector/event for structured JSON payloads with standard HEC top-level fields. Use /services/collector/raw for unstructured log lines (plain text).
          x-speakeasy-unknown-values: allow
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 5120
          minimum: 1024
          maximum: 2097152
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: |-
            Reject certificates not authorized by a CA in the CA certificate path or by another trusted CA (such as the system's).
                    Enabled by default. When this setting is also present in TLS Settings (Client Side),
                    that value will take precedence.
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
        flushPeriodSec:
          type: number
          default: 5
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
            - payload
            - payloadAndHeaders
            - none
          default: none
          x-speakeasy-unknown-values: allow
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: []
          items:
            type: string
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          x-speakeasy-unknown-values: allow
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          default: []
          items:
            type: object
            required:
              - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
        timeoutRetrySettings:
          type: object
          required:
            - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
            - block
            - drop
            - queue
          default: block
          x-speakeasy-unknown-values: allow
        description:
          type: string
          title: Description
        token:
          type: string
          title: AI SIEM API Key
          description: In the SentinelOne Console select Policy & Settings then select the Singularity AI SIEM section, API Keys will be at the bottom. Under Log Access Keys select a Write token and copy it here
        textSecret:
          type: string
          title: AI SIEM API Key (text secret)
          description: Select or create a stored text secret
        baseUrl:
          title: Base AI SIEM endpoint URL
          type: string
          default: https://<Your-S1-Tenant>.sentinelone.net
          pattern: ^https?://[a-zA-Z0-9.-]+(:[0-9]+)?$
          description: "Base URL of the endpoint used to send events to, such as https://<Your-S1-Tenant>.sentinelone.net. Must begin with http:// or https://, can include a port number, and no trailing slashes. Matches pattern: ^https?://[a-zA-Z0-9.-]+(:[0-9]+)?$."
        hostExpression:
          type: string
          title: serverHost expression
          description: Define serverHost for events using a JavaScript expression. You must enclose text constants in quotes (such as, 'myServer').
          default: __e.host || C.os.hostname()
        sourceExpression:
          type: string
          title: logFile expression
          description: Define logFile for events using a JavaScript expression. You must enclose text constants in quotes (such as, 'myLogFile.txt').
          default: "__e.source || (__e.__criblMetrics ? 'metrics' : 'cribl')"
        sourceTypeExpression:
          type: string
          title: parser expression
          description: Define the parser for events using a JavaScript expression. This value helps parse data into AI SIEM. You must enclose text constants in quotes (such as, 'dottedJson'). For custom parsers, substitute 'dottedJson' with your parser's name.
          default: __e.sourcetype || 'dottedJson'
        dataSourceCategoryExpression:
          type: string
          title: dataSource.category expression
          description: Define the dataSource.category for events using a JavaScript expression. This value helps categorize data and helps enable extra features in SentinelOne AI SIEM. You must enclose text constants in quotes. The default value is 'security'.
          default: "'security'"
        dataSourceNameExpression:
          type: string
          title: dataSource.name expression
          description: Define the dataSource.name for events using a JavaScript expression. This value should reflect the type of data being inserted into AI SIEM. You must enclose text constants in quotes (such as, 'networkActivity' or 'authLogs').
          default: __e.__dataSourceName || 'cribl'
        dataSourceVendorExpression:
          type: string
          title: dataSource.vendor expression
          description: Define the dataSource.vendor for events using a JavaScript expression. This value should reflect the vendor of the data being inserted into AI SIEM. You must enclose text constants in quotes (such as, 'Cisco' or 'Microsoft').
          default: __e.__dataSourceVendor || 'cribl'
        eventTypeExpression:
          type: string
          title: event.type expression
          description: Optionally, define the event.type for events using a JavaScript expression. This value acts as a label, grouping events into meaningful categories. You must enclose text constants in quotes (such as, 'Process Creation' or 'Network Connection').
          default: ""
        host:
          type: string
          title: serverHost expression
          description: Define the serverHost for events using a JavaScript expression. This value will be passed to AI SIEM. You must enclose text constants in quotes (such as, 'myServerName').
          default: C.os.hostname()
        source:
          type: string
          title: logFile
          description: Specify the logFile value to pass as a parameter to SentinelOne AI SIEM. Don't quote this value. The default is cribl.
          default: cribl
        sourceType:
          type: string
          title: parser
          description: Specify the sourcetype parameter for SentinelOne AI SIEM, which determines the parser. Don't quote this value. For custom parsers, substitute hecRawParser with your parser's name. The default is hecRawParser.
          default: hecRawParser
        dataSourceCategory:
          type: string
          title: dataSource.category
          description: Specify the dataSource.category value to pass as a parameter to SentinelOne AI SIEM. This value helps categorize data and enables additional features. Don't quote this value. The default is security.
          default: security
        dataSourceName:
          type: string
          title: dataSource.name
          description: Specify the dataSource.name value to pass as a parameter to AI SIEM. This value should reflect the type of data being inserted. Don't quote this value. The default is cribl.
          default: cribl
        dataSourceVendor:
          type: string
          title: dataSource.vendor
          description: Specify the dataSource.vendorvalue to pass as a parameter to AI SIEM. This value should reflect the vendor of the data being inserted. Don't quote this value. The default is cribl.
          default: cribl
        eventType:
          type: string
          title: event.type
          description: Specify the event.type value to pass as an optional parameter to AI SIEM. This value acts as a label, grouping events into meaningful categories like Process Creation, File Modification, or Network Connection. Don't quote this value. By default, this field is empty.
          default: ""
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
        pqCompress:
          type: string
          default: none
          enum:
            - none
            - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          x-speakeasy-unknown-values: allow
        pqOnBackpressure:
          type: string
          default: block
          enum:
            - block
            - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          x-speakeasy-unknown-values: allow
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
            - error
            - backpressure
            - always
          x-speakeasy-unknown-values: allow
        pqControls:
          type: object
    Output:
      oneOf:
        - $ref: "#/components/schemas/OutputDefault"
        - $ref: "#/components/schemas/OutputWebhook"
        - $ref: "#/components/schemas/OutputSentinel"
        - $ref: "#/components/schemas/OutputDevnull"
        - $ref: "#/components/schemas/OutputSyslog"
        - $ref: "#/components/schemas/OutputSplunk"
        - $ref: "#/components/schemas/OutputSplunkLb"
        - $ref: "#/components/schemas/OutputSplunkHec"
        - $ref: "#/components/schemas/OutputTcpjson"
        - $ref: "#/components/schemas/OutputWavefront"
        - $ref: "#/components/schemas/OutputSignalfx"
        - $ref: "#/components/schemas/OutputFilesystem"
        - $ref: "#/components/schemas/OutputS3"
        - $ref: "#/components/schemas/OutputAzureBlob"
        - $ref: "#/components/schemas/OutputAzureDataExplorer"
        - $ref: "#/components/schemas/OutputAzureLogs"
        - $ref: "#/components/schemas/OutputKinesis"
        - $ref: "#/components/schemas/OutputHoneycomb"
        - $ref: "#/components/schemas/OutputAzureEventhub"
        - $ref: "#/components/schemas/OutputGoogleChronicle"
        - $ref: "#/components/schemas/OutputGoogleCloudStorage"
        - $ref: "#/components/schemas/OutputGoogleCloudLogging"
        - $ref: "#/components/schemas/OutputGooglePubsub"
        - $ref: "#/components/schemas/OutputExabeam"
        - $ref: "#/components/schemas/OutputKafka"
        - $ref: "#/components/schemas/OutputConfluentCloud"
        - $ref: "#/components/schemas/OutputMsk"
        - $ref: "#/components/schemas/OutputElastic"
        - $ref: "#/components/schemas/OutputElasticCloud"
        - $ref: "#/components/schemas/OutputNewrelic"
        - $ref: "#/components/schemas/OutputNewrelicEvents"
        - $ref: "#/components/schemas/OutputInfluxdb"
        - $ref: "#/components/schemas/OutputCloudwatch"
        - $ref: "#/components/schemas/OutputMinio"
        - $ref: "#/components/schemas/OutputStatsd"
        - $ref: "#/components/schemas/OutputStatsdExt"
        - $ref: "#/components/schemas/OutputGraphite"
        - $ref: "#/components/schemas/OutputRouter"
        - $ref: "#/components/schemas/OutputSns"
        - $ref: "#/components/schemas/OutputSqs"
        - $ref: "#/components/schemas/OutputSnmp"
        - $ref: "#/components/schemas/OutputSumoLogic"
        - $ref: "#/components/schemas/OutputDatadog"
        - $ref: "#/components/schemas/OutputGrafanaCloud"
        - $ref: "#/components/schemas/OutputLoki"
        - $ref: "#/components/schemas/OutputPrometheus"
        - $ref: "#/components/schemas/OutputRing"
        - $ref: "#/components/schemas/OutputOpenTelemetry"
        - $ref: "#/components/schemas/OutputServiceNow"
        - $ref: "#/components/schemas/OutputDataset"
        - $ref: "#/components/schemas/OutputCriblTcp"
        - $ref: "#/components/schemas/OutputCriblHttp"
        - $ref: "#/components/schemas/OutputHumioHec"
        - $ref: "#/components/schemas/OutputCrowdstrikeNextGenSiem"
        - $ref: "#/components/schemas/OutputDlS3"
        - $ref: "#/components/schemas/OutputSecurityLake"
        - $ref: "#/components/schemas/OutputCriblLake"
        - $ref: "#/components/schemas/OutputDiskSpool"
        - $ref: "#/components/schemas/OutputClickHouse"
        - $ref: "#/components/schemas/OutputXsiam"
        - $ref: "#/components/schemas/OutputNetflow"
        - $ref: "#/components/schemas/OutputDynatraceHttp"
        - $ref: "#/components/schemas/OutputDynatraceOtlp"
        - $ref: "#/components/schemas/OutputSentinelOneAiSiem"
    RunnableJobCollection:
      required:
        - collector
        - run
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
        description:
          type: string
          title: Description
        type:
          type: string
          title: Job type
          enum:
            - collection
            - executor
            - scheduledSearch
          x-speakeasy-unknown-values: allow
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
          default: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be running at any time
              default: 1
              minimum: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
              default: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              properties:
                type:
                  enum:
                    - collection
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                  default: list
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                timestampTimezone: {}
                timeWarning:
                  type: object
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events being collected
                  default: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: |-
                    Limits the bundle size for small tasks. For example,










                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: |-
                    Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB,










                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        workerAffinity:
          type: boolean
          title: Worker affinity
          description: If enabled, tasks are created and run by the same Worker Node
          default: false
        collector:
          type: object
          required:
            - type
            - conf
          properties:
            type:
              type: string
              title: Collector type
              description: The type of collector to run
            conf:
              type: object
              title: Collector-specific settings
            destructive:
              type: boolean
              title: Destructive
              description: Delete any files collected (where applicable)
              default: false
            encoding:
              type: string
              title: Encoding
              description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
        input:
          type: object
          properties:
            type:
              type: string
              enum:
                - collection
              default: collection
              x-speakeasy-unknown-values: allow
            breakerRulesets:
              type: array
              title: Event Breaker rulesets
              description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
              items:
                type: string
            staleChannelFlushMs:
              type: number
              title: Event Breaker buffer timeout (ms)
              description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
              default: 10000
              minimum: 10
              maximum: 43200000
            sendToRoutes:
              type: boolean
              title: Send to Routes
              description: Send events to normal routing and event processing. Disable to select a specific Pipeline/Destination combination.
              default: true
            preprocess:
              type: object
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                command:
                  type: string
                  title: Command
                  description: Command to feed the data through (via stdin) and process its output (stdout)
                args:
                  type: array
                  title: Arguments
                  description: Arguments to be added to the custom command
                  items:
                    type: string
            throttleRatePerSec:
              type: string
              title: Throttling
              description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
              pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
              default: "0"
            metadata:
              type: array
              title: Fields
              description: Fields to add to events from this input
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Field Name
                  value:
                    type: string
                    title: Value
                    description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
            pipeline:
              type: string
              title: Pipeline
              description: Pipeline to process results
            output:
              type: string
              title: Destination
              description: Destination to send results to
        run:
          type: object
          required:
            - mode
          properties:
            rescheduleDroppedTasks:
              type: boolean
              title: Reschedule tasks
              description: Reschedule tasks that failed with non-fatal errors
              default: true
            maxTaskReschedule:
              type: number
              title: Task reschedule limit
              description: Maximum number of times a task can be rescheduled
              default: 1
              minimum: 1
            logLevel:
              type: string
              title: Log level
              description: Level at which to set task logging
              enum:
                - error
                - warn
                - info
                - debug
                - silly
              default: info
              x-speakeasy-unknown-values: allow
            jobTimeout:
              title: Job timeout
              type: string
              description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
              pattern: \d+[sm]?$
              default: "0"
            mode:
              type: string
              title: Mode
              description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
              default: list
              enum:
                - list
                - preview
                - run
              x-speakeasy-unknown-values: allow
            timeRangeType:
              type: string
              title: Time range
              default: relative
              enum:
                - absolute
                - relative
              x-speakeasy-unknown-values: allow
            earliest:
              type: number
              title: Earliest
              description: Earliest time to collect data for the selected timezone
            latest:
              type: number
              title: Latest
              description: Latest time to collect data for the selected timezone
            timestampTimezone:
              type: string
              title: Range timezone
              description: Timezone to use for Earliest and Latest times
              default: UTC
            timeWarning:
              type: object
            expression:
              type: string
              title: Filter
              description: A filter for tokens in the provided collect path and/or the events being collected
              default: "true"
            minTaskSize:
              type: string
              title: Lower task bundle size
              description: |-
                Limits the bundle size for small tasks. For example,









                        if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
              default: 1MB
              pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
            maxTaskSize:
              type: string
              title: Upper task bundle size
              description: |-
                Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB,









                        you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
              default: 10MB
              pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
            discoverToRoutes:
              type: boolean
              title: Send to Routes
              description: Send discover results to Routes
              default: false
            capture:
              type: object
              title: Capture Settings
              properties:
                duration:
                  type: number
                  title: Capture time (sec)
                  description: Amount of time to keep capture open, in seconds
                  minimum: 1
                  default: 60
                maxEvents:
                  type: number
                  title: Capture up to N events
                  description: Maximum number of events to capture
                  default: 100
                  minimum: 1
                  maximum: 10000
                level:
                  type: integer
                  title: Where to capture
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                  default: 0
                  x-speakeasy-unknown-values: allow
      type: object
    RunnableJobExecutor:
      required:
        - executor
        - run
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
        description:
          type: string
          title: Description
        type:
          type: string
          title: Job type
          enum:
            - collection
            - executor
            - scheduledSearch
          x-speakeasy-unknown-values: allow
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
          default: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be running at any time
              default: 1
              minimum: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
              default: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              properties:
                type:
                  enum:
                    - collection
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                  default: list
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                timestampTimezone: {}
                timeWarning:
                  type: object
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events being collected
                  default: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: |-
                    Limits the bundle size for small tasks. For example,










                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: |-
                    Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB,










                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        executor:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Executor type
              description: The type of executor to run
            storeTaskResults:
              type: boolean
              title: Store task results
              description: Determines whether or not to write task results to disk
              default: true
            conf:
              type: object
              title: Executor-specific settings
        run:
          type: object
          properties:
            rescheduleDroppedTasks:
              type: boolean
              title: Reschedule tasks
              description: Reschedule tasks that failed with non-fatal errors
              default: true
            maxTaskReschedule:
              type: number
              title: Task reschedule limit
              description: Maximum number of times a task can be rescheduled
              default: 1
              minimum: 1
            logLevel:
              type: string
              title: Log level
              description: Level at which to set task logging
              enum:
                - error
                - warn
                - info
                - debug
                - silly
              default: info
              x-speakeasy-unknown-values: allow
            jobTimeout:
              title: Job timeout
              type: string
              description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
              pattern: \d+[sm]?$
              default: "0"
      type: object
    RunnableJobScheduledSearch:
      required:
        - savedQueryId
        - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
        description:
          type: string
          title: Description
        type:
          type: string
          title: Job type
          enum:
            - collection
            - executor
            - scheduledSearch
          x-speakeasy-unknown-values: allow
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
          default: []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
          default: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be running at any time
              default: 1
              minimum: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
              default: true
            resumeMissed: {}
            run:
              type: object
              title: Run settings
              properties:
                type:
                  enum:
                    - collection
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                    - error
                    - warn
                    - info
                    - debug
                    - silly
                  default: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                  default: list
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                timestampTimezone: {}
                timeWarning:
                  type: object
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events being collected
                  default: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: |-
                    Limits the bundle size for small tasks. For example,










                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: |-
                    Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB,










                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        savedQueryId:
          type: string
          title: ID of the SavedQuery
          description: Identifies which search query to run
      type: object
    RunnableJob:
      oneOf:
        - $ref: "#/components/schemas/RunnableJobCollection"
        - $ref: "#/components/schemas/RunnableJobExecutor"
        - $ref: "#/components/schemas/RunnableJobScheduledSearch"
    State:
      type: object
      additionalProperties: true
    JobStatus:
      type: object
      properties:
        reason:
          type: object
          additionalProperties: true
        state:
          $ref: "#/components/schemas/State"
      required:
        - state
    JobInfo:
      type: object
      properties:
        args:
          $ref: "#/components/schemas/RunnableJob"
        id:
          type: string
        keep:
          type: boolean
        status:
          $ref: "#/components/schemas/JobStatus"
      required:
        - args
        - id
        - status
    OutputSamplesResponse:
      type: object
      properties:
        events:
          type: array
          items:
            type: object
            additionalProperties: true
      required:
        - events
    OutputTestResponse:
      type: object
      properties:
        details:
          type: object
          additionalProperties: true
        error:
          type: string
        outputId:
          type: string
        success:
          type: boolean
        successDetail:
          type: string
      required:
        - outputId
        - success
    CriblEvent:
      type: object
      properties:
        _raw:
          type: string
      required:
        - _raw
    OutputTestRequest:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/CriblEvent"
      required:
        - events
    PipelineFunctionConf:
      type: object
      required:
        - id
        - conf
      additionalProperties: false
      properties:
        filter:
          title: Filter
          description: Filter that selects data to be fed through this Function
          type: string
          default: "true"
        id:
          title: ID
          description: Function ID
          type: string
        description:
          title: Description
          description: Simple description of this step
          type: string
        disabled:
          title: Disabled
          description: If true, data will not be pushed through this function
          type: boolean
        final:
          title: Final
          description: If enabled, stops the results of this Function from being passed to the downstream Functions
          type: boolean
        conf:
          type: object
          title: Function-specific configs
        groupId:
          title: Group ID
          description: Group ID
          type: string
    Pipeline:
      title: Pipeline Settings
      type: object
      required:
        - conf
        - id
      properties:
        id:
          title: ID
          type: string
        conf:
          type: object
          additionalProperties: false
          properties:
            asyncFuncTimeout:
              type: integer
              title: Async function timeout (ms)
              description: Time (in ms) to wait for an async function to complete processing of a data item
              minimum: 0
              maximum: 10000
            output:
              type: string
              title: Output event destination
              description: The output destination for events processed by this Pipeline
              default: default
            description:
              title: Description
              type: string
            streamtags:
              type: array
              title: Tags
              description: Tags for filtering and grouping in @{product}
              default: []
              items:
                type: string
            functions:
              title: Functions
              description: List of Functions to pass data through
              type: array
              items:
                $ref: "#/components/schemas/PipelineFunctionConf"
            groups:
              type: object
              additionalProperties:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
                    title: Group Name
                  description:
                    type: string
                    title: Description
                    description: Short description of this group
                  disabled:
                    type: boolean
                    title: Disabled
                    description: Whether this group is disabled
    RoutesRoute:
      type: object
      additionalProperties: true
      required:
        - pipeline
        - name
      properties:
        id:
          type: string
          title: Route ID
        name:
          type: string
          title: Route name
        disabled:
          type: boolean
          title: Disabled
          description: Disable this routing rule
        filter:
          type: string
          title: Filter
          description: JavaScript expression to select data to route
          default: "true"
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to send the matching data to
        enableOutputExpression:
          type: boolean
          title: Enable expression
          description: Enable to use a JavaScript expression that evaluates to the name of the Description below
          default: false
        output: {}
        outputExpression: {}
        description:
          type: string
          title: Description
        final:
          title: Final
          description: Flag to control whether the event gets consumed by this Route (Final), or cloned into it
          type: boolean
          default: true
    Routes:
      type: object
      additionalProperties: false
      required:
        - routes
      properties:
        id:
          type: string
          title: ID
          description: Routes ID
        routes:
          type: array
          title: Route
          description: Pipeline routing rules
          items:
            $ref: "#/components/schemas/RoutesRoute"
        groups:
          type: object
          additionalProperties:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                title: Group Name
              description:
                type: string
                title: Description
                description: Short description of this group
              disabled:
                type: boolean
                title: Disabled
                description: Whether this group is disabled
        comments:
          type: array
          title: Comments
          description: Comments
          items:
            type: object
            properties:
              comment:
                type: string
                title: Comment
                description: Optional, short description of this Route's purpose
            additionalProperties: true
    RouteCloneConf:
      type: object
      title: Fields
      description: Key value pairs to set/overwrite in the clone
      additionalProperties:
        type: string
        title: Clone fields
    RouteConf:
      type: object
      properties:
        clones:
          type: array
          items:
            $ref: "#/components/schemas/RouteCloneConf"
        context:
          type: string
        description:
          type: string
        disabled:
          type: boolean
        enableOutputExpression:
          type: boolean
        filter:
          type: string
        final:
          type: boolean
        groupId:
          type: string
        id:
          type: string
        name:
          type: string
        output:
          type: string
        outputExpression:
          type: string
        pipeline:
          type: string
      required:
        - final
        - id
        - name
        - pipeline
    RouteDefinitions:
      type: array
      items:
        $ref: "#/components/schemas/RouteConf"
    LoginInfo:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    AuthToken:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    WorkerTypes:
      type: string
      enum:
        - worker
        - managed-edge
      x-speakeasy-unknown-values: allow
    DistributedSummary:
      type: object
      properties:
        groups:
          type: object
          properties:
            count:
              type: number
            destinations:
              type: number
            pipelines:
              type: number
            routes:
              type: number
            sources:
              type: number
          required:
            - count
            - destinations
            - pipelines
            - routes
            - sources
        workers:
          type: object
          properties:
            alive:
              type: number
            confVersions:
              type: number
            count:
              type: number
            disconnectedCount:
              type: number
            groups:
              type: number
            softwareVersions:
              type: number
            unhealthy:
              type: number
          required:
            - alive
            - confVersions
            - count
            - disconnectedCount
            - groups
            - softwareVersions
            - unhealthy
      required:
        - groups
        - workers
    HealthStatus:
      type: object
      required:
        - status
        - startTime
      properties:
        role:
          type: string
          enum:
            - primary
            - standby
          x-speakeasy-unknown-values: allow
        status:
          type: string
          enum:
            - healthy
            - shutting down
            - standby
          x-speakeasy-unknown-values: allow
        startTime:
          type: number
    InstallWarnings:
      type: array
      items:
        type: string
    PackInstallInfo:
      type: object
      properties:
        author:
          type: string
        description:
          type: string
        displayName:
          type: string
        exports:
          type: array
          items:
            type: string
        id:
          type: string
        inputs:
          type: number
        isDisabled:
          type: boolean
        minLogStreamVersion:
          type: string
        outputs:
          type: number
        settings:
          type: object
          additionalProperties: true
        source:
          type: string
        spec:
          type: string
        tags:
          type: object
          properties:
            dataType:
              type: array
              items:
                type: string
            domain:
              type: array
              items:
                type: string
            streamtags:
              type: array
              items:
                type: string
            technology:
              type: array
              items:
                type: string
          required:
            - dataType
            - technology
        version:
          type: string
        warnings:
          $ref: "#/components/schemas/InstallWarnings"
      required:
        - id
        - source
    PackRequestBody:
      type: object
      properties:
        id:
          type: string
        spec:
          type: string
        version:
          type: string
        minLogStreamVersion:
          type: string
        displayName:
          type: string
        author:
          type: string
        description:
          type: string
        source:
          type: string
          description: The source of the pack. If not present, an empty pack will be created
        tags:
          type: object
          properties:
            dataType:
              type: array
              items:
                type: string
            domain:
              type: array
              items:
                type: string
            technology:
              type: array
              items:
                type: string
            streamtags:
              type: array
              items:
                type: string
        allowCustomFunctions:
          type: boolean
        force:
          type: boolean
      anyOf:
        - required:
            - id
        - required:
            - source
    PackInfo:
      type: object
      properties:
        author:
          type: string
        description:
          type: string
        displayName:
          type: string
        exports:
          type: array
          items:
            type: string
        id:
          type: string
        inputs:
          type: number
        isDisabled:
          type: boolean
        minLogStreamVersion:
          type: string
        outputs:
          type: number
        settings:
          type: object
          additionalProperties: true
        source:
          type: string
        spec:
          type: string
        tags:
          type: object
          properties:
            dataType:
              type: array
              items:
                type: string
            domain:
              type: array
              items:
                type: string
            streamtags:
              type: array
              items:
                type: string
            technology:
              type: array
              items:
                type: string
          required:
            - dataType
            - technology
        version:
          type: string
      required:
        - id
        - source
    PackUpgradeRequest:
      type: object
      properties:
        allowCustomFunctions:
          type: boolean
        minor:
          type: string
        source:
          type: string
        spec:
          type: string
      required:
        - source
    GitCommitSummary:
      type: object
      properties:
        author:
          type: object
          properties:
            email:
              type: string
            name:
              type: string
          required:
            - email
            - name
        branch:
          type: string
        commit:
          type: string
        files:
          type: object
          properties:
            created:
              type: array
              items:
                type: string
            deleted:
              type: array
              items:
                type: string
            modified:
              type: array
              items:
                type: string
            renamed:
              type: array
              items:
                type: string
        summary:
          type: object
          properties:
            changes:
              type: number
            deletions:
              type: number
            insertions:
              type: number
          required:
            - changes
            - deletions
            - insertions
      required:
        - branch
        - commit
        - files
        - summary
    GitFile:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/GitFile"
        name:
          type: string
        state:
          type: string
      required:
        - name
    GitFilesResponse:
      type: object
      properties:
        commitMessage:
          type: object
          additionalProperties: true
        count:
          type: number
        items:
          type: array
          items:
            $ref: "#/components/schemas/GitFile"
      required:
        - count
        - items
    GitRevertResult:
      type: object
      properties:
        audit:
          type: object
          properties:
            files:
              type: object
              properties:
                created:
                  type: array
                  items:
                    type: string
                deleted:
                  type: array
                  items:
                    type: string
                modified:
                  type: array
                  items:
                    type: string
                renamed:
                  type: array
                  items:
                    type: string
            group:
              type: string
            id:
              type: string
          required:
            - id
        reverted:
          type: boolean
      required:
        - audit
        - reverted
    GitRevertParams:
      type: object
      properties:
        commit:
          type: string
        force:
          type: boolean
        message:
          type: string
      required:
        - commit
    BranchInfo:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    GitCommitParams:
      type: object
      properties:
        effective:
          type: boolean
        files:
          type: array
          items:
            type: string
        group:
          type: string
        message:
          type: string
      required:
        - message
    GitCountResult:
      type: object
      properties:
        count:
          type: number
      required:
        - count
    CurrentBranchResult:
      type: object
      properties:
        branch:
          type: string
      required:
        - branch
    DiffFiles:
      type: array
      items:
        type: object
        properties:
          addedLines:
            type: number
          blocks:
            type: array
            items:
              type: object
              properties:
                header:
                  type: string
                lines:
                  type: array
                  items:
                    oneOf:
                      - type: object
                        properties:
                          content:
                            type: string
                          oldNumber:
                            type: number
                        required:
                          - content
                          - oldNumber
                      - type: object
                        properties:
                          content:
                            type: string
                          newNumber:
                            type: number
                        required:
                          - content
                          - newNumber
                      - type: object
                        properties:
                          content:
                            type: string
                          newNumber:
                            type: number
                          oldNumber:
                            type: number
                        required:
                          - content
                          - newNumber
                          - oldNumber
                newStartLine:
                  type: number
                oldStartLine:
                  type: number
                oldStartLine2:
                  type: number
              required:
                - header
                - lines
                - newStartLine
                - oldStartLine
          changedPercentage:
            type: number
          checksumAfter:
            type: string
          checksumBefore:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
          deletedFileMode:
            type: string
          deletedLines:
            type: number
          isBinary:
            type: boolean
          isCombined:
            type: boolean
          isCopy:
            type: boolean
          isDeleted:
            type: boolean
          isGitDiff:
            type: boolean
          isNew:
            type: boolean
          isRename:
            type: boolean
          isTooBig:
            type: boolean
          language:
            type: string
          mode:
            type: string
          newFileMode:
            type: string
          newMode:
            type: string
          newName:
            type: string
          oldMode:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
          oldName:
            type: string
          unchangedPercentage:
            type: number
        required:
          - addedLines
          - blocks
          - deletedLines
          - isCombined
          - isGitDiff
          - language
          - newName
          - oldName
    GitDiffResult:
      type: object
      properties:
        diffJson:
          $ref: "#/components/schemas/DiffFiles"
      required:
        - diffJson
    GitInfo:
      type: object
      properties:
        remote:
          oneOf:
            - type: string
            - type: boolean
        versioning:
          type: boolean
      required:
        - remote
        - versioning
    GitLogResult:
      type: object
      properties:
        author_email:
          type: string
        author_name:
          type: string
        body:
          type: string
        date:
          type: string
        hash:
          type: string
        message:
          type: string
        refs:
          type: string
    GitStatusResult:
      type: object
      properties:
        ahead:
          type: number
        behind:
          type: number
        conflicted:
          type: array
          items:
            type: string
        created:
          type: array
          items:
            type: string
        current:
          type: string
        deleted:
          type: array
          items:
            type: string
        files:
          type: array
          items:
            type: object
            properties:
              index:
                type: string
              path:
                type: string
              working_dir:
                type: string
            required:
              - index
              - path
              - working_dir
        modified:
          type: array
          items:
            type: string
        not_added:
          type: array
          items:
            type: string
        renamed:
          type: array
          items:
            type: object
            properties:
              from:
                type: string
              to:
                type: string
            required:
              - from
              - to
        staged:
          type: array
          items:
            type: string
      required:
        - ahead
        - behind
        - conflicted
        - created
        - current
        - deleted
        - files
        - modified
        - not_added
        - renamed
        - staged
    LookupVersions:
      type: object
    HBLeaderInfo:
      type: object
      properties:
        host:
          type: string
        port:
          type: number
        servername:
          type: string
        tls:
          type: boolean
      required:
        - host
        - port
    HBCriblInfo:
      type: object
      properties:
        config:
          type: object
          properties:
            featuresRev:
              type: string
            hbPeriodSeconds:
              type: number
            logStreamEnv:
              type: string
            policyRev:
              type: string
            version:
              type: string
        deploymentId:
          type: string
        disableSNIRouting:
          type: boolean
        distMode:
          type: string
          enum:
            - edge
            - worker
            - single
            - master
            - managed-edge
            - outpost
            - search-supervisor
          x-speakeasy-unknown-values: allow
        edgeNodes:
          type: number
        group:
          type: string
        guid:
          type: string
        installType:
          type: string
        lookupVersions:
          $ref: "#/components/schemas/LookupVersions"
        master:
          $ref: "#/components/schemas/HBLeaderInfo"
        pid:
          type: number
        startTime:
          type: number
        tags:
          type: array
          items:
            type: string
        version:
          type: string
      required:
        - config
        - distMode
        - group
        - guid
        - startTime
        - tags
    HeartbeatMetadata:
      type: object
      properties:
        aws:
          type: object
          properties:
            enabled:
              type: boolean
            instanceId:
              type: string
            region:
              type: string
            tags:
              type: object
            type:
              type: string
            zone:
              type: string
          required:
            - enabled
            - instanceId
            - region
            - type
            - zone
        hostOs:
          type: object
          properties:
            addresses:
              type: array
              items:
                type: string
            enabled:
              type: boolean
            id:
              type: string
            version:
              type: string
          required:
            - addresses
            - enabled
            - id
            - version
        kube:
          type: object
          properties:
            enabled:
              type: boolean
            namespace:
              type: string
            node:
              type: string
            owner:
              type: object
              properties:
                kind:
                  type: string
                name:
                  type: string
              required:
                - kind
                - name
            pod:
              type: string
            source:
              type: string
          required:
            - enabled
            - namespace
            - node
            - pod
            - source
        os:
          type: object
          properties:
            addresses:
              type: array
              items:
                type: string
            enabled:
              type: boolean
            id:
              type: string
            version:
              type: string
          required:
            - addresses
            - enabled
            - id
            - version
    NodeProvidedInfo:
      type: object
      properties:
        architecture:
          type: string
        aws:
          type: object
          properties:
            enabled:
              type: boolean
            instanceId:
              type: string
            region:
              type: string
            tags:
              type: object
            type:
              type: string
            zone:
              type: string
          required:
            - enabled
            - instanceId
            - region
            - type
            - zone
        conn_ip:
          type: string
        cpus:
          type: number
        cribl:
          $ref: "#/components/schemas/HBCriblInfo"
        freeDiskSpace:
          type: number
        hostOs:
          type: object
          properties:
            addresses:
              type: array
              items:
                type: string
            enabled:
              type: boolean
            id:
              type: string
            version:
              type: string
          required:
            - addresses
            - enabled
            - id
            - version
        hostname:
          type: string
        isSaasWorker:
          type: boolean
        kube:
          type: object
          properties:
            enabled:
              type: boolean
            namespace:
              type: string
            node:
              type: string
            owner:
              type: object
              properties:
                kind:
                  type: string
                name:
                  type: string
              required:
                - kind
                - name
            pod:
              type: string
            source:
              type: string
          required:
            - enabled
            - namespace
            - node
            - pod
            - source
        localTime:
          type: number
        metadata:
          $ref: "#/components/schemas/HeartbeatMetadata"
        node:
          type: string
        os:
          oneOf:
            - type: object
              properties:
                addresses:
                  type: array
                  items:
                    type: string
                enabled:
                  type: boolean
                id:
                  type: string
                version:
                  type: string
              required:
                - addresses
                - enabled
                - id
                - version
            - type: object
              properties:
                addresses:
                  type: array
                  items:
                    type: string
              required:
                - addresses
        platform:
          type: string
        release:
          type: string
        totalDiskSpace:
          type: number
        totalmem:
          type: number
      required:
        - architecture
        - cpus
        - cribl
        - freeDiskSpace
        - hostname
        - node
        - platform
        - release
        - totalDiskSpace
        - totalmem
    NodeActiveUpgradeStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
      x-speakeasy-unknown-values: allow
    NodeFailedUpgradeStatus:
      type: integer
      enum:
        - 0
        - 1
      x-speakeasy-unknown-values: allow
    NodeSkippedUpgradeStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      x-speakeasy-unknown-values: allow
    NodeUpgradeState:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      x-speakeasy-unknown-values: allow
    NodeUpgradeStatus:
      type: object
      properties:
        active:
          $ref: "#/components/schemas/NodeActiveUpgradeStatus"
        failed:
          $ref: "#/components/schemas/NodeFailedUpgradeStatus"
        skipped:
          $ref: "#/components/schemas/NodeSkippedUpgradeStatus"
        state:
          $ref: "#/components/schemas/NodeUpgradeState"
        timestamp:
          type: number
      required:
        - state
        - timestamp
    MasterWorkerEntry:
      type: object
      properties:
        deployable:
          type: boolean
        disconnected:
          type: boolean
        firstMsgTime:
          type: number
        group:
          type: string
        id:
          type: string
        info:
          $ref: "#/components/schemas/NodeProvidedInfo"
        lastMetrics:
          type: object
        lastMsgTime:
          type: number
        metadata:
          $ref: "#/components/schemas/HeartbeatMetadata"
        nodeUpgradeStatus:
          $ref: "#/components/schemas/NodeUpgradeStatus"
        status:
          type: string
        type:
          type: string
          enum:
            - info
            - req
            - resp
          x-speakeasy-unknown-values: allow
        workerProcesses:
          type: number
        workers:
          type: object
          properties:
            count:
              type: number
          required:
            - count
      required:
        - firstMsgTime
        - group
        - id
        - info
        - lastMsgTime
        - workerProcesses
    TeamAccessControlList:
      type: object
      properties:
        perms:
          type: array
          items:
            $ref: "#/components/schemas/ResourcePolicy"
        team:
          type: string
      required:
        - perms
        - team
security:
  - bearerAuth: []
  - clientOauth: []
tags:
  - name: ai-settings
    description: Actions related to Ai Settings
  - name: appscope-configs
    description: Actions related to Appscope Configs
  - name: auth
    description: Actions related to authentication. Do not use the /auth endpoints in Cribl.Cloud deployments. Instead, follow the instructions at https://docs.cribl.io/stream/api-tutorials/#criblcloud to authenticate for Cribl.Cloud.
  - name: authorize
    description: Actions related to Authorize
  - name: banners
    description: Actions related to Banners
  - name: certificates
    description: Actions related to Certificates
  - name: changelog
    description: Actions related to Changelog
  - name: click-house
    description: Actions related to ClickHouse
  - name: clui
    description: Actions related to CLUI
  - name: collectors
    description: Actions related to Collectors
  - name: conditions
    description: Actions related to Conditions
  - name: consent
    description: Actions related to Consent
  - name: dashboardCategories
    description: Actions related to DashboardCategories
  - name: dashboards
    description: Actions related to Dashboards
  - name: database-connections
    description: Actions related to Database Connections
  - name: datasets
    description: Actions related to Datasets
  - name: datatypes
    description: Actions related to Datatypes
  - name: destinations
    description: Actions related to Destinations
  - name: diag
    description: Actions related to diagnostics
  - name: distributed
    description: Actions related to Distributed
  - name: edge
    description: Actions enabled in Edge
  - name: edgeAppScopeProcesses
    description: Actions related to Edge AppScope processes
  - name: edgeContainers
    description: Actions related to Edge containers
  - name: edgeEvents
    description: Actions related to EdgeEvents
  - name: edgeLs
    description: Actions related to Edge listing
  - name: edgeProcesses
    description: Actions related to Edge processes
  - name: event_breaker_rules
    description: Actions related to Event Breaker rules
  - name: events
    description: Actions related to Events
  - name: executors
    description: Actions related to Executors
  - name: expressions
    description: Actions related to expressions
  - name: features
    description: Actions related to Features
  - name: functions
    description: Actions related to functions
  - name: git
    description: Actions related to Git
  - name: globalVariables
    description: Actions related to Global Variables
  - name: grokfiles
    description: Actions related to Grok files
  - name: groups
    description: Actions related to Groups
  - name: health
    description: Actions related to REST server health
  - name: hmac-functions
    description: Actions related to HMAC functions
  - name: insights
    description: Actions related to Insights
  - name: iometrics
    description: Actions related to source/destination metrics
  - name: jobs
    description: Actions related to Jobs
  - name: keys
    description: Actions related to encryption keys
  - name: kube-logs
    description: Actions related to Kube Logs
  - name: kube-proxy
    description: Actions related to Kube Proxy
  - name: lake
    description: Actions related to Lake
  - name: licenses
    description: Actions related to licenses. The <code>/licenses</code> endpoints do not apply to Cribl.Cloud deployments.
  - name: logger
    description: Actions related to Logger
  - name: logging
    description: Actions related to logging
  - name: lookups
    description: Actions related to lookups
  - name: macros
    description: Actions related to Macros
  - name: messages
    description: Actions related to messages
  - name: metrics
    description: Actions related to metrics
  - name: notebooks
    description: Actions related to Notebooks
  - name: notification-targets
    description: Actions related to Notification Targets
  - name: notifications
    description: Actions related to Notifications
  - name: onlyOnPrem
    description: Actions only available for onprem deployments and do not apply to Cribl.Cloud deployments
  - name: outpost
    description: Actions related to Outpost
  - name: packs
    description: Actions related to Packs
  - name: parquetschemas
    description: Actions related to Parquet schemas
  - name: parsers
    description: Actions related to parsers
  - name: pipelines
    description: Actions related to Pipelines
  - name: policies
    description: Actions related to Policies
  - name: preview
    description: Actions related to data preview
  - name: processes
    description: Actions related to Processes
  - name: profiler
    description: Actions related to Profiler
  - name: projects
    description: Actions related to Projects
  - name: protobuflibraries
    description: Actions related to Protobuf libraries
  - name: query
    description: Actions related to Query
  - name: regexes
    description: Actions related to regular expressions
  - name: roles
    description: Actions related to Roles
  - name: routes
    description: Actions related to Routes
  - name: samples
    description: Actions related to samples
  - name: saved-jobs
    description: Actions related to Saved Jobs
  - name: savedQueries
    description: Actions related to saved queries
  - name: schemas
    description: Actions related to Schemas
  - name: scripts
    description: Actions related to scripts
  - name: sds-rules
    description: Actions related to Sds Rules
  - name: sds-rulesets
    description: Actions related to Sds Rulesets
  - name: search
    description: Actions related to Search
  - name: secrets
    description: Actions related to Secrets
  - name: security
    description: Actions related to Security
  - name: sources
    description: Actions related to Sources
  - name: subscriptions
    description: Actions related to Subscriptions
  - name: system
    description: Actions related to system settings
  - name: teams
    description: Actions related to Teams
  - name: trust-policies
    description: Actions related to Trust Policies
  - name: uiState
    description: Actions related to UiState
  - name: usage-groups
    description: Actions related to Usage Groups
  - name: users
    description: Actions related to users. The <code>/system/users</code> endpoints do not apply to Cribl.Cloud deployments. Instead use <code>/products/{product}/users</code>
  - name: versioning
    description: Actions related to Versioning
  - name: workers
    description: Actions related to Workers
paths:
  /products/lake/lakes/{lakeId}/datasets:
    post:
      operationId: createCriblLakeDatasetByLakeId
      tags:
        - lake
      x-speakeasy-group: lakeDatasets
      x-speakeasy-name-override: create
      summary: Create a Lake Dataset
      description: Create a new Lake Dataset in the specified Lake.
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CriblLakeDataset object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CriblLakeDataset"
      parameters:
        - name: lakeId
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Lake to create the Lake Dataset in.
    get:
      operationId: getCriblLakeDatasetByLakeId
      tags:
        - lake
      x-speakeasy-group: lakeDatasets
      x-speakeasy-name-override: list
      summary: List all Lake Datasets
      description: Get a list of all Lake Datasets in the specified Lake.
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: lakeId
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Lake that contains the Lake Datasets to list.
  /products/lake/lakes/{lakeId}/datasets/{id}:
    delete:
      operationId: deleteCriblLakeDatasetByLakeIdAndId
      tags:
        - lake
      x-speakeasy-group: lakeDatasets
      x-speakeasy-name-override: delete
      summary: Delete a Lake Dataset
      description: Delete the specified Lake Dataset in the specified Lake
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: lakeId
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Lake that contains the Lake Dataset to delete.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Lake Dataset to delete.
    get:
      operationId: getCriblLakeDatasetByLakeIdAndId
      tags:
        - lake
      x-speakeasy-group: lakeDatasets
      x-speakeasy-name-override: get
      summary: Get a Lake Dataset
      description: Get the specified Lake Dataset in the specified Lake.
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: lakeId
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Lake that contains the Lake Dataset to get.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Lake Dataset to get.
    patch:
      operationId: updateCriblLakeDatasetByLakeIdAndId
      tags:
        - lake
      x-speakeasy-group: lakeDatasets
      x-speakeasy-name-override: update
      summary: Update a Lake Dataset
      description: Update the specified Lake Dataset in the specified Lake.
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CriblLakeDataset object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CriblLakeDataset"
      parameters:
        - name: lakeId
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Lake that contains the Lake Dataset to update.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Lake Dataset to update.
  /system/inputs:
    get:
      operationId: listInput
      x-speakeasy-group: sources
      x-speakeasy-name-override: list
      tags:
        - sources
      summary: List all Sources
      description: Get a list of all Sources.
      responses:
        "200":
          description: a list of Source objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Input"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createInput
      x-speakeasy-group: sources
      x-speakeasy-name-override: create
      tags:
        - sources
      summary: Create a Source
      description: Create a new Source.
      requestBody:
        description: Input object
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Input"
                - type: object
                  required:
                    - id
              $ref: "#/components/schemas/Input"
      responses:
        "200":
          description: a list of Source objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Input"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/inputs/{id}:
    get:
      operationId: getInputById
      x-speakeasy-group: sources
      x-speakeasy-name-override: get
      tags:
        - sources
      summary: Get a Source
      description: Get the specified Source.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Source to get.
      responses:
        "200":
          description: a list of Source objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Input"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateInputById
      x-speakeasy-group: sources
      x-speakeasy-name-override: update
      tags:
        - sources
      summary: Update a Source
      description: Update the specified Source.</br></br>Provide a complete representation of the Source that you want to update in the request body. This endpoint does not support partial updates. Cribl removes any omitted fields when updating the Source.</br></br>Confirm that the configuration in your request body is correct before sending the request. If the configuration is incorrect, the updated Source might not function as expected.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Source to update.
      requestBody:
        description: Input object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Input"
      responses:
        "200":
          description: a list of Source objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Input"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteInputById
      x-speakeasy-group: sources
      x-speakeasy-name-override: delete
      tags:
        - sources
      summary: Delete a Source
      description: Delete the specified Source.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Source to delete.
      responses:
        "200":
          description: a list of Source objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Input"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/inputs/{id}/hectoken:
    post:
      operationId: createInputHecTokenById
      tags:
        - sources
      x-speakeasy-group: sources.hecTokens
      x-speakeasy-name-override: create
      summary: Add an HEC token and optional metadata to a Splunk HEC Source
      description: Add an HEC token and optional metadata to the specified Splunk HEC Source.
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: AddHecTokenRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddHecTokenRequest"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Splunk HEC Source.
  /system/inputs/{id}/hectoken/{token}:
    patch:
      operationId: updateInputHecTokenByIdAndToken
      tags:
        - sources
      x-speakeasy-group: sources.hecTokens
      x-speakeasy-name-override: update
      summary: Update metadata for an HEC token for a Splunk HEC Source
      description: Update the metadata for the specified HEC token for the specified Splunk HEC Source.
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: UpdateHecTokenRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateHecTokenRequest"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Splunk HEC Source.
        - name: token
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the HEC token to update.
  /system/outputs:
    get:
      operationId: listOutput
      x-speakeasy-group: destinations
      x-speakeasy-name-override: list
      tags:
        - destinations
      summary: List all Destinations
      description: Get a list of all Destinations.
      responses:
        "200":
          description: a list of Destination objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Output"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createOutput
      x-speakeasy-group: destinations
      x-speakeasy-name-override: create
      tags:
        - destinations
      summary: Create a Destination
      description: Create a new Destination.
      requestBody:
        description: Output object
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Output"
                - type: object
                  required:
                    - id
              $ref: "#/components/schemas/Output"
      responses:
        "200":
          description: a list of Destination objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Output"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/outputs/{id}:
    get:
      operationId: getOutputById
      x-speakeasy-group: destinations
      x-speakeasy-name-override: get
      tags:
        - destinations
      summary: Get a Destination
      description: Get the specified Destination.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Destination to get.
      responses:
        "200":
          description: a list of Destination objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Output"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateOutputById
      x-speakeasy-group: destinations
      x-speakeasy-name-override: update
      tags:
        - destinations
      summary: Update a Destination
      description: Update the specified Destination.</br></br>Provide a complete representation of the Destination that you want to update in the request body. This endpoint does not support partial updates. Cribl removes any omitted fields when updating the Destination.</br></br>Confirm that the configuration in your request body is correct before sending the request. If the configuration is incorrect, the updated Destination might not function as expected.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Destination to update.
      requestBody:
        description: Output object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Output"
      responses:
        "200":
          description: a list of Destination objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Output"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteOutputById
      x-speakeasy-group: destinations
      x-speakeasy-name-override: delete
      tags:
        - destinations
      summary: Delete a Destination
      description: Delete the specified Destination.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Destination to delete.
      responses:
        "200":
          description: a list of Destination objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Output"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/outputs/{id}/pq:
    delete:
      operationId: deleteOutputPqById
      tags:
        - destinations
      x-speakeasy-group: destinations.pq
      x-speakeasy-name-override: clear
      summary: Clear the persistent queue for a Destination
      description: Clear the persistent queue (PQ) for the specified Destination.
      responses:
        "201":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Destination to clear the PQ for.
    get:
      operationId: getOutputPqById
      tags:
        - destinations
      x-speakeasy-group: destinations.pq
      x-speakeasy-name-override: get
      summary: Get information about the latest job to clear the persistent queue for a Destination
      description: Get information about the latest job to clear the persistent queue (PQ) for the specified Destination.
      responses:
        "200":
          description: a list of JobInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/JobInfo"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Destination to get PQ job information for.
  /system/outputs/{id}/samples:
    get:
      operationId: getOutputSamplesById
      tags:
        - destinations
      x-speakeasy-group: destinations.samples
      x-speakeasy-name-override: get
      summary: Get sample event data for a Destination
      description: Get sample event data for the specified Destination to validate the configuration or test connectivity.
      responses:
        "200":
          description: a list of OutputSamplesResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OutputSamplesResponse"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Destination to get sample event data for.
  /system/outputs/{id}/test:
    post:
      operationId: createOutputTestById
      tags:
        - destinations
      x-speakeasy-group: destinations.samples
      x-speakeasy-name-override: create
      summary: Send sample event data to a Destination
      description: Send sample event data to the specified Destination to validate the configuration or test connectivity.
      responses:
        "200":
          description: a list of OutputTestResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OutputTestResponse"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: OutputTestRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutputTestRequest"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Destination to send sample event data to.
  /pipelines:
    get:
      operationId: listPipeline
      x-speakeasy-group: pipelines
      x-speakeasy-name-override: list
      tags:
        - pipelines
      summary: List all Pipelines
      description: Get a list of all Pipelines.
      responses:
        "200":
          description: a list of Pipeline objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createPipeline
      x-speakeasy-group: pipelines
      x-speakeasy-name-override: create
      tags:
        - pipelines
      summary: Create a Pipeline
      description: Create a new Pipeline.
      requestBody:
        description: Pipeline object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
      responses:
        "200":
          description: a list of Pipelines objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pipelines/{id}:
    get:
      operationId: getPipelineById
      x-speakeasy-group: pipelines
      x-speakeasy-name-override: get
      tags:
        - pipelines
      summary: Get a Pipeline
      description: Get the specified Pipeline.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Pipeline to get.
      responses:
        "200":
          description: a list of Pipeline objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updatePipelineById
      x-speakeasy-group: pipelines
      x-speakeasy-name-override: update
      tags:
        - pipelines
      summary: Update a Pipeline
      description: Update the specified Pipeline.</br></br>Provide a complete representation of the Pipeline that you want to update in the request body. This endpoint does not support partial updates. Cribl removes any omitted fields when updating the Pipeline.</br></br>Confirm that the configuration in your request body is correct before sending the request. If the configuration is incorrect, the updated Pipeline might not function as expected.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Pipeline to update.
      requestBody:
        description: Pipeline object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
      responses:
        "200":
          description: a list of Pipeline objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deletePipelineById
      x-speakeasy-group: pipelines
      x-speakeasy-name-override: delete
      tags:
        - pipelines
      summary: Delete a Pipeline
      description: Delete the specified Pipeline.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Pipeline to delete.
      responses:
        "200":
          description: a list of Pipeline objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /routes:
    get:
      operationId: listRoutes
      x-speakeasy-group: routes
      x-speakeasy-name-override: list
      tags:
        - routes
      summary: List all Routes
      description: Get a list of all Routes.
      responses:
        "200":
          description: a list of Routes objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Routes"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /routes/{id}:
    get:
      operationId: getRoutesById
      x-speakeasy-group: routes
      x-speakeasy-name-override: get
      tags:
        - routes
      summary: Get a Routing table
      description: Get the specified Routing table.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Routing table to get. The supported value is <code>default</code>.
      responses:
        "200":
          description: a list of Routes objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Routes"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateRoutesById
      x-speakeasy-group: routes
      x-speakeasy-name-override: update
      tags:
        - routes
      summary: Update a Route
      description: Update a Route in the specified Routing table.</br></br>Provide a complete representation of the Routing table, including the Route that you want to update, in the request body. This endpoint does not support partial updates. Cribl removes any omitted Routes and fields when updating.</br></br>Confirm that the configuration in your request body is correct before sending the request. If the configuration is incorrect, the Routing table might not function as expected.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Routing table that contains the Route to update. The supported value is <code>default</code>.
      requestBody:
        description: Routes object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Routes"
      responses:
        "200":
          description: a list of Routes objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Routes"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /routes/{id}/append:
    post:
      operationId: createRoutesAppendById
      tags:
        - routes
      x-speakeasy-group: routes
      x-speakeasy-name-override: append
      summary: Append a Route to the end of the Routing table
      description: Append a Route to the end of the specified Routing table.</br></br>Provide a complete representation of the Routing table, including the Route that you want to append, in the request body. Cribl removes any omitted Routes and fields in the Routing table when appending the Route.</br></br>Confirm that the configuration in your request body is correct before sending the request. If the configuration is incorrect, the Routing table might not function as expected.
      responses:
        "200":
          description: a list of Routes objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Routes"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: RouteDefinitions object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RouteDefinitions"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Routing table to append the Route to. The supported value is <code>default</code>.
  /auth/login:
    post:
      operationId: login
      summary: Log in and fetch an authentication token
      x-speakeasy-group: auth.tokens
      x-speakeasy-name-override: get
      description: This endpoint is unavailable on Cribl.Cloud. Instead, follow the instructions at https://docs.cribl.io/stream/api-tutorials/#criblcloud to get an Auth token for Cribl.Cloud.
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInfo"
      security: []
      responses:
        "200":
          description: Authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
        "401":
          description: Unauthorized
        "403":
          description: Access denied
        "429":
          description: Rate limit exceeded
  /master/summary:
    get:
      operationId: getSummary
      tags:
        - distributed
      x-speakeasy-group: nodes.summaries
      x-speakeasy-name-override: get
      summary: Get a summary of the Distributed deployment
      description: Get a summary of the Distributed deployment. The response includes counts of Worker Groups, Edge Fleets, Pipelines, Routes, Sources, Destinations, and Worker and Edge Nodes, as well as statistics for the Worker and Edge Nodes.
      responses:
        "200":
          description: a list of DistributedSummary objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DistributedSummary"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: mode
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/WorkerTypes"
          description: "Filter for limiting the response by Cribl product: Cribl Stream (<code>worker</code>) or Cribl Edge (<code>managed-edge</code>)."
  /health:
    get:
      operationId: getHealthInfo
      summary: Retrieve health status of the server
      x-speakeasy-group: health
      x-speakeasy-name-override: get
      security: []
      tags:
        - health
      responses:
        "200":
          description: Healthy status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
        "420":
          description: Shutting Down or Standby status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
  /packs:
    post:
      operationId: createPacks
      tags:
        - packs
      x-speakeasy-group: packs
      x-speakeasy-name-override: install
      summary: Create or install a Pack
      description: Create or install a Pack.
      responses:
        "200":
          description: a list of PackInstallInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInstallInfo"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: packRequestBody object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackRequestBody"
    get:
      operationId: getPacks
      tags:
        - packs
      x-speakeasy-group: packs
      x-speakeasy-name-override: list
      summary: List all Packs
      description: Get a list of all Packs.
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInfo"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: with
          in: query
          required: false
          schema:
            type: string
          description: Comma-separated list of additional properties to include in the response. When set, the response includes a count of the specified properties in the Pack. Available values are <code>inputs</code> and <code>outputs</code>.
  /packs/{id}:
    delete:
      operationId: deletePacksById
      tags:
        - packs
      x-speakeasy-group: packs
      x-speakeasy-name-override: delete
      summary: Uninstall a Pack
      description: Uninstall the specified Pack.
      responses:
        "200":
          description: a list of PackInstallInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInstallInfo"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Pack to uninstall.
    get:
      operationId: getPacksById
      tags:
        - packs
      x-speakeasy-group: packs
      x-speakeasy-name-override: get
      summary: Get a Pack
      description: Get the specified Pack.
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInfo"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Pack to get.
    patch:
      operationId: updatePacksById
      tags:
        - packs
      x-speakeasy-group: packs
      x-speakeasy-name-override: update
      summary: Upgrade a Pack
      description: Upgrade the specified Pack.</br></br>If the Pack includes any user–modified versions of default Cribl Knowledge resources such as lookups, copy the modified files locally for safekeeping before upgrading the Pack. Copy the modified files back to the upgraded Pack after you install it with <code>POST /packs</code> to overwrite the default versions in the Pack.</br></br>After you upgrade the Pack, update any Routes, Pipelines, Sources, and Destinations that use the previous Pack version so that they reference the upgraded Pack.
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInfo"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: PackUpgradeRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackUpgradeRequest"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Pack to upgrade.
  /version/branch:
    get:
      operationId: getVersionBranch
      tags:
        - versioning
      x-speakeasy-group: versions.branches
      x-speakeasy-name-override: list
      summary: List all branches in the Git repository used for Cribl configuration
      description: Get a list of all branches in the Git repository used for Cribl configuration.
      responses:
        "200":
          description: a list of BranchInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/BranchInfo"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/commit:
    post:
      operationId: createVersionCommit
      tags:
        - versioning
      x-speakeasy-group: versions.commits
      x-speakeasy-name-override: create
      summary: Create a new commit for pending changes to the Cribl configuration
      description: Create a new commit for pending changes to the Cribl configuration. Any merge conflicts indicated in the response must be resolved using Git.</br></br>To commit only a subset of configuration changes, specify the files to include in the commit in the <code>files</code> array.
      responses:
        "200":
          description: a list of GitCommitSummary objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitCommitSummary"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: GitCommitParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GitCommitParams"
      parameters:
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to create a new commit for.
  /version/count:
    get:
      operationId: getVersionCount
      tags:
        - versioning
      x-speakeasy-group: versions.commits.files
      x-speakeasy-name-override: count
      summary: Get a count of files that changed since a commit
      description: Get a count of the files that changed since a commit. Default is the latest commit (HEAD).
      responses:
        "200":
          description: a list of GitCountResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitCountResult"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to get the count for.
        - name: ID
          in: query
          required: false
          schema:
            type: string
          description: The Git commit hash to use as the starting point for the count.
  /version/current-branch:
    get:
      operationId: getVersionCurrentBranch
      tags:
        - versioning
      x-speakeasy-group: versions.branches
      x-speakeasy-name-override: get
      summary: Get the name of the Git branch that the Cribl configuration is checked out to
      description: Get the name of the Git branch that the Cribl configuration is checked out to. Useful for verifying the active configuration branch.
      responses:
        "200":
          description: CurrentBranchResult object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrentBranchResult"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/diff:
    get:
      operationId: getVersionDiff
      tags:
        - versioning
      x-speakeasy-group: versions.commits
      x-speakeasy-name-override: diff
      summary: Get the diff for a commit
      description: Get the diff for a commit. Default is the latest commit (HEAD).
      responses:
        "200":
          description: a list of GitDiffResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitDiffResult"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: commit
          in: query
          required: false
          schema:
            type: string
          description: The Git commit hash to get the diff for.
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to get the diff for.
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: The relative path of the file to get the diff for.
        - name: diffLineLimit
          in: query
          required: false
          schema:
            type: number
          description: Number of lines of the diff to return. Default is 1000. Set to <code>0</code> to return the full diff, regardless of the number of lines.
  /version/files:
    get:
      operationId: getVersionFiles
      tags:
        - versioning
      x-speakeasy-group: versions.commits.files
      x-speakeasy-name-override: list
      summary: Get the names and statuses of files that changed since a commit
      description: Get the names and statuses of files that changed since a commit. Default is the latest commit (HEAD).
      responses:
        "200":
          description: a list of GitFilesResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitFilesResponse"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to get file names and status for.
        - name: ID
          in: query
          required: false
          schema:
            type: string
          description: The Git commit hash to use as the starting point for the request.
  /version/info:
    get:
      operationId: getVersionInfo
      tags:
        - versioning
      x-speakeasy-group: versions.configs
      x-speakeasy-name-override: get
      summary: Get the configuration and status for the Git integration
      description: Get the configuration and versioning status for the Git integration for the Cribl configuration.
      responses:
        "200":
          description: a list of GitInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitInfo"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version:
    get:
      operationId: getVersion
      tags:
        - versioning
      x-speakeasy-group: versions.commits
      x-speakeasy-name-override: list
      summary: List the commit history
      description: List the commit history.</br></br>Analogous to <code>git log</code> for the Cribl configuration, allowing you to audit and review changes over time.
      responses:
        "200":
          description: a list of GitLogResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitLogResult"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to get the commit history for.
        - name: count
          in: query
          required: false
          schema:
            type: number
          description: Maximum number of commits to return in the response for this request.
  /version/push:
    post:
      operationId: createVersionPush
      tags:
        - versioning
      x-speakeasy-group: versions.commits
      x-speakeasy-name-override: push
      summary: Push local commits to the remote repository
      description: Push all local commits from the local repository to the remote repository.
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/revert:
    post:
      operationId: createVersionRevert
      tags:
        - versioning
      x-speakeasy-group: versions.commits
      x-speakeasy-name-override: revert
      summary: Revert a commit in the local repository
      description: Revert a commit in the local repository.
      responses:
        "200":
          description: a list of GitRevertResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitRevertResult"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: GitRevertParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GitRevertParams"
      parameters:
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to revert the commit for. Required in Distributed deployments. Omit in Single-instance deployments.
  /version/show:
    get:
      operationId: getVersionShow
      tags:
        - versioning
      x-speakeasy-group: versions.commits
      x-speakeasy-name-override: get
      summary: Get the diff and log message for a commit
      description: Get the diff and log message for a commit. Default is the latest commit (HEAD).
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: commit
          in: query
          required: false
          schema:
            type: string
          description: The Git commit hash to retrieve the diff and log message for.
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to get the diff and log message for.
        - name: filename
          in: query
          required: false
          schema:
            type: string
          description: The relative path of the file to get the diff and log message for.
        - name: diffLineLimit
          in: query
          required: false
          schema:
            type: number
          description: Number of lines of the diff to return. Default is 1000. Set to <code>0</code> to return the full diff, regardless of the number of lines.
  /version/status:
    get:
      operationId: getVersionStatus
      tags:
        - versioning
      x-speakeasy-group: versions.statuses
      x-speakeasy-name-override: get
      summary: Get the status of the current working tree
      description: Get the status of the current working tree of the Git repository used for Cribl configuration. The response includes details about modified, staged, untracked, and conflicted files, as well as branch and remote tracking information.
      responses:
        "200":
          description: a list of GitStatusResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitStatusResult"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to get the status for.
  /version/undo:
    post:
      operationId: createVersionUndo
      tags:
        - versioning
      x-speakeasy-group: versions.commits
      x-speakeasy-name-override: undo
      summary: Discard uncommitted (staged) changes
      description: Discard all uncommitted (staged) configuration changes, resetting the working directory to the last committed state. Use only if you are certain that you do not need to preserve your local changes.
      responses:
        "200":
          description: a list of object objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/object"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to undo the uncommited changes for.
  /master/workers:
    get:
      operationId: listMasterWorkerEntry
      x-speakeasy-name-override: list
      x-speakeasy-group: nodes
      tags:
        - workers
      summary: Get detailed metadata for Worker and Edge Nodes
      description: Get detailed metadata for Worker and Edge Nodes.
      responses:
        "200":
          description: a list of MasterWorkerEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MasterWorkerEntry"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: filterExp
          in: query
          required: false
          schema:
            type: string
          description: Filter expression to evaluate against Nodes for inclusion in the response.
        - name: sortExp
          in: query
          required: false
          schema:
            type: string
          description: Sorting expression to evaluate against Nodes to specify the sort order for the response.
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: JSON-stringified filter object to evaluate against Nodes for inclusion in the response.
        - name: sort
          in: query
          required: false
          schema:
            type: string
          description: JSON-stringified sorting object to evaluate against Nodes to specify the sort order for the response.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of Nodes to return in the response for this request. Use with <code>offset</code> to paginate the response into manageable batches.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Starting point from which to retrieve results for this request. Use with <code>limit</code> to paginate the response into manageable batches.
  /master/summary/workers:
    get:
      operationId: getMasterWorkerEntry
      tags:
        - workers
      x-speakeasy-group: nodes
      x-speakeasy-name-override: count
      summary: Get a count of Worker and Edge Nodes
      description: Get a count of all Worker and Edge Nodes.
      responses:
        "200":
          description: a list of number objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: number
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: filterExp
          in: query
          required: false
          schema:
            type: string
          description: Filter expression to evaluate against Nodes for inclusion in the response.
  /products/{product}/groups:
    get:
      operationId: listConfigGroupByProduct
      x-speakeasy-name-override: list
      x-speakeasy-group: groups
      tags:
        - groups
      summary: List all Worker Groups or Edge Fleets for the specified Cribl product
      description: Get a list of all Worker Groups or Edge Fleets for the specified Cribl product.
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ConfigGroup"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
          description: Comma-separated list of additional properties to include in the response. Available values are <code>git.commit</code>, <code>git.localChanges</code>, and <code>git.log</code>.
        - name: product
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ProductsCore"
          description: Name of the Cribl product to get the Worker Groups or Edge Fleets for.
    post:
      operationId: createConfigGroupByProduct
      x-speakeasy-name-override: create
      x-speakeasy-group: groups
      tags:
        - groups
      summary: Create a Worker Group or Edge Fleet for the specified Cribl product
      description: Create a new Worker Group or Edge Fleet for the specified Cribl product.
      requestBody:
        description: ConfigGroup object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigGroup"
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ConfigGroup"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: product
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ProductsCore"
          description: Name of the Cribl product to add the Worker Group or Edge Fleet to.
  /products/{product}/groups/{id}:
    get:
      operationId: getConfigGroupByProductAndId
      x-speakeasy-name-override: get
      x-speakeasy-group: groups
      tags:
        - groups
      summary: Get a Worker Group or Edge Fleet
      description: Get the specified Worker Group or Edge Fleet.
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
            $ref: "#/components/schemas/ProductsCore"
          description: Name of the Cribl product to get the Worker Groups or Edge Fleets for.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to get.
        - name: fields
          in: query
          required: false
          schema:
            type: string
          description: Comma-separated list of additional properties to include in the response. Available values are <code>git.commit</code>, <code>git.localChanges</code>, and <code>git.log</code>.
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ConfigGroup"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateConfigGroupByProductAndId
      x-speakeasy-name-override: update
      x-speakeasy-group: groups
      tags:
        - groups
      summary: Update a Worker Group or Edge Fleet
      description: Update the specified Worker Group or Edge Fleet.
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
            $ref: "#/components/schemas/ProductsCore"
          description: Name of the Cribl product to get the Worker Groups or Edge Fleets for.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to update.
      requestBody:
        description: ConfigGroup object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigGroup"
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ConfigGroup"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteConfigGroupByProductAndId
      x-speakeasy-name-override: delete
      x-speakeasy-group: groups
      tags:
        - groups
      summary: Delete a Worker Group or Edge Fleet
      description: Delete the specified Worker Group or Edge Fleet.
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
            $ref: "#/components/schemas/ProductsCore"
          description: Name of the Cribl product to get the Worker Groups or Edge Fleets for.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to delete.
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ConfigGroup"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /products/{product}/groups/{id}/configVersion:
    get:
      operationId: getConfigGroupConfigVersionByProductAndId
      tags:
        - groups
      x-speakeasy-group: groups.configs.versions
      x-speakeasy-name-override: get
      summary: Get the configuration version for a Worker Group or Edge Fleet
      description: Get the configuration version for the specified Worker Group or Edge Fleet.
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      type: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: product
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ProductsCore"
          description: Name of the Cribl product to get the Worker Groups or Edge Fleets for.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to get the configuration version for.
  /products/{product}/groups/{id}/deploy:
    patch:
      operationId: updateConfigGroupDeployByProductAndId
      tags:
        - groups
      x-speakeasy-group: groups
      x-speakeasy-name-override: deploy
      summary: Deploy commits to a Worker Group or Edge Fleet
      description: Deploy commits to the specified Worker Group or Edge Fleet.
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ConfigGroup"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: DeployRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeployRequest"
      parameters:
        - name: product
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ProductsCore"
          description: Name of the Cribl product to get the Worker Groups or Edge Fleets for.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the target Worker Group or Edge Fleet for commit deployment.
  /products/{product}/groups/{id}/acl/teams:
    get:
      operationId: getConfigGroupAclTeamsByProductAndId
      tags:
        - teams
      x-speakeasy-group: groups.acl.teams
      x-speakeasy-name-override: get
      summary: Get the Access Control List for teams with permissions on a Worker Group or Edge Fleet for the specified Cribl product
      description: Get the Access Control List (ACL) for teams that have permissions on a Worker Group or Edge Fleet for the specified Cribl product.
      responses:
        "200":
          description: a list of TeamAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamAccessControlList"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: product
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ProductsCore"
          description: Name of the Cribl product that contains the Worker Group or Edge Fleet.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to get the team ACL for.
        - name: type
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/RbacResource"
          description: Filter for limiting the response to ACL entries for the specified RBAC resource type.
  /products/{product}/groups/{id}/acl:
    get:
      operationId: getConfigGroupAclByProductAndId
      tags:
        - groups
      x-speakeasy-group: groups.acl
      x-speakeasy-name-override: get
      summary: Get the Access Control List for a Worker Group or Edge Fleet
      description: Get the Access Control List (ACL) for the specified Worker Group or Edge Fleet.
      responses:
        "200":
          description: a list of UserAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserAccessControlList"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: product
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/ProductsCore"
          description: Name of the Cribl product to get the Worker Groups or Edge Fleets for.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The <code>id</code> of the Worker Group or Edge Fleet to get the ACL for.
        - name: type
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/RbacResource"
          description: Filter for limiting the response to ACL entries for the specified RBAC resource type.
