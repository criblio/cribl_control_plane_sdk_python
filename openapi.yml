openapi: 3.0.2
servers:
  - url: /
info:
  title: Cribl API Reference
  description: This API Reference lists available REST endpoints, along with their supported operations for accessing, creating, updating, or deleting resources. See our complementary product documentation at [docs.cribl.io](http://docs.cribl.io).
  version: 4.14.0-alpha.1752237468678-450f2fb6
  contact:
    name: Support
    email: support@cribl.io
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
    InputCollection:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - collection
          default: collection
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process results
        sendToRoutes:
          type: boolean
          default: true
          title: Send to Routes
          description: Send events to normal routing and event processing. Disable to select a specific Pipeline/Destination combination.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        output:
          type: string
          title: Destination
          description: Destination to send results to
      type: object
    InputKafka:
      required:
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kafka
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify the hostname and port (such as mykafkabroker:9092) or just the hostname (in which case @{product} will assign port 9092).
          minItems: 1
          items:
            type: string
            minLength: 1
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: |-
                    Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: |2-
                  Timeout used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires,
                  the broker will remove the client from the group and initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: |2-
                  Maximum allowed time for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: |2-
                  Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputMsk:
      required:
        - brokers
        - topics
        - region
        - awsAuthenticationMethod
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - msk
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify the hostname and port (such as mykafkabroker:9092) or just the hostname (in which case @{product} will assign port 9092).
          minItems: 1
          items:
            type: string
            minLength: 1
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: |2-
                  Timeout used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires,
                  the broker will remove the client from the group and initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: |2-
                  Maximum allowed time for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: |2-
                  Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: |-
                    Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the MSK cluster is located
        endpoint:
          type: string
          title: Endpoint
          description: MSK cluster service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to MSK cluster-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MSK cluster requests
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for MSK
          description: Use Assume Role credentials to access MSK
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
      type: object
    InputHttp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - http
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        criblAPI:
          type: string
          title: Cribl HTTP event API
          description: Absolute path on which to listen for the Cribl HTTP API requests. Only _bulk (default /cribl/_bulk) is available. Use empty string to disable.
          default: /cribl
          pattern: ^/|^$
        elasticAPI:
          type: string
          title: Elasticsearch API endpoint (Bulk API)
          description: Absolute path on which to listen for the Elasticsearch API requests. Only _bulk (default /elastic/_bulk) is available. Use empty string to disable.
          default: /elastic
          pattern: ^/|^$
        splunkHecAPI:
          type: string
          title: Splunk HEC endpoint
          description: Absolute path on which listen for the Splunk HTTP Event Collector API requests. Use empty string to disable.
          default: /services/collector
          pattern: ^/|^$
        splunkHecAcks:
          type: boolean
          title: Enable Splunk HEC acknowledgements
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        authTokensExt:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: "Shared secret to be provided by any client (Authorization: <token>)"
              description:
                type: string
                title: Description
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputSplunk:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - splunk
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        authTokens:
          type: array
          title: Auth tokens
          description: Shared secrets to be provided by any Splunk forwarder. If empty, unauthorized access is permitted.
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: Shared secrets to be provided by any Splunk forwarder. If empty, unauthorized access is permitted.
              description:
                type: string
                title: Description
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake
          enum:
            - v3
            - v4
          default: v3
        description:
          type: string
          title: Description
        useFwdTimezone:
          type: boolean
          title: Use Universal Forwarder time zone
          default: true
          description: Event Breakers will determine events' time zone from UF-provided metadata, when TZ can't be inferred from the raw event
        dropControlFields:
          type: boolean
          title: Drop control fields
          description: Drop Splunk control fields such as `crcSalt` and `_savedPort`. If disabled, control fields are stored in the internal field `__ctrlFields`.
          default: true
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Extract and process Splunk-generated metrics as Cribl metrics
          default: false
        compress:
          type: string
          title: Compression
          description: Controls whether to support reading compressed data from a forwarder. Select 'Automatic' to match the forwarder's configuration, or 'Disabled' to reject compressed connections.
          default: disabled
          enum:
            - disabled
            - auto
            - always
      type: object
    InputSplunkSearch:
      required:
        - searchHead
        - search
        - cronSchedule
        - endpoint
        - outputMode
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - splunk_search
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        searchHead:
          title: Search head
          type: string
          default: https://localhost:8089
          description: Search head base URL. Can be an expression. Default is https://localhost:8089.
        search:
          type: string
          title: Search
          description: "Enter Splunk search here. Examples: 'index=myAppLogs level=error channel=myApp' OR '| mstats avg(myStat) as myStat WHERE index=myStatsIndex.'"
        earliest:
          title: Earliest
          type: string
          description: "The earliest time boundary for the search. Can be an exact or relative time. Examples: '2022-01-14T12:00:00Z' or '-16m@m'"
          default: -16m@m
        latest:
          title: Latest
          type: string
          description: "The latest time boundary for the search. Can be an exact or relative time. Examples: '2022-01-14T12:00:00Z' or '-1m@m'"
          default: -1m@m
        cronSchedule:
          type: string
          title: Cron schedule
          description: A cron schedule on which to run this job
          default: "*/15 * * * *"
        endpoint:
          type: string
          title: Search endpoint
          default: /services/search/v2/jobs/export
          description: REST API used to create a search
        outputMode:
          type: string
          title: Output mode
          description: Format of the returned output
          enum:
            - csv
            - json
          default: json
        endpointParams:
          title: Endpoint parameters
          type: array
          description: Optional request parameters to send to the endpoint
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                title: Parameter Name
                type: string
              value:
                title: Value
                type: string
                description: JavaScript expression to compute the parameter's value, normally enclosed in backticks (e.g., `${earliest}`). If a constant, use single quotes (e.g., 'earliest'). Values without delimiters (e.g., earliest) are evaluated as strings.
        endpointHeaders:
          title: Endpoint headers
          description: Optional request headers to send to the endpoint
          type: array
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Header Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute the header's value, normally enclosed in backticks (e.g., `${earliest}`). If a constant, use single quotes (e.g., 'earliest'). Values without delimiters (e.g., earliest) are evaluated as strings.
        logLevel:
          type: string
          title: Log level
          enum:
            - error
            - warn
            - info
            - debug
          description: Collector runtime log level (verbosity)
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Use 0 for no timeout.
          minimum: 0
          maximum: 2400
          default: 0
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned
          default: false
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA (such as self-signed certificates)
          default: false
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of HTTP codes that trigger a retry. Leave empty to use the default list of 429 and 503.
              minItems: 1
              default:
                - 429
                - 503
              items:
                type: number
                minLength: 1
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          default:
            - Splunk Search Ruleset
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        authType:
          type: string
          title: Authentication type
          description: Splunk Search authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: basic
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
      type: object
    InputSplunkHec:
      required:
        - host
        - port
        - splunkHecAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - splunk_hec
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              authType:
                title: Authentication method
                type: string
                enum:
                  - manual
                  - secret
                default: manual
                description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
              tokenSecret: {}
              token: {}
              enabled:
                type: boolean
                title: Enable token
                default: true
              description:
                type: string
                title: Description
                description: Optional token description
              allowedIndexesAtToken:
                type: array
                title: Allowed indexes
                description: Enter the values you want to allow in the HEC event index field at the token level. Supports wildcards. To skip validation, leave blank.
                items:
                  type: string
                  minLength: 1
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck: {}
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        splunkHecAPI:
          type: string
          title: Splunk HEC endpoint
          description: Absolute path on which to listen for the Splunk HTTP Event Collector API requests. This input supports the /event, /raw and /s2s endpoints.
          default: /services/collector
          pattern: ^/
        metadata:
          type: array
          title: Fields
          description: Fields to add to every event. Overrides fields added at the token or request level. See [the Source documentation](https://docs.cribl.io/stream/sources-splunk-hec/#fields) for more info.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        allowedIndexes:
          type: array
          title: Allowed indexes
          description: List values allowed in HEC event index field. Leave blank to skip validation. Supports wildcards. The values here can expand index validation at the token level.
          items:
            type: string
            minLength: 1
        splunkHecAcks:
          type: boolean
          title: Splunk HEC acks
          description: Enable Splunk HEC acknowledgements
          default: false
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        useFwdTimezone:
          type: boolean
          title: Use Universal Forwarder time zone (S2S only)
          default: true
          description: Event Breakers will determine events' time zone from UF-provided metadata, when TZ can't be inferred from the raw event
        dropControlFields:
          type: boolean
          title: Drop control fields (S2S only)
          description: Drop Splunk control fields such as `crcSalt` and `_savedPort`. If disabled, control fields are stored in the internal field `__ctrlFields`.
          default: true
        extractMetrics:
          type: boolean
          title: Extract metrics (S2S only)
          description: Extract and process Splunk-generated metrics as Cribl metrics
          default: false
        accessControlAllowOrigin:
          title: CORS allowed origins
          type: array
          description: Optionally, list HTTP origins to which @{product} should send CORS (cross-origin resource sharing) Access-Control-Allow-* headers. Supports wildcards.
          items:
            type: string
            minLength: 1
        accessControlAllowHeaders:
          title: CORS allowed headers
          type: array
          description: Optionally, list HTTP headers that @{product} will send to allowed origins as "Access-Control-Allow-Headers" in a CORS preflight response. Use "*" to allow all headers.
          items:
            type: string
            minLength: 1
        emitTokenMetrics:
          type: boolean
          title: Emit per-token request metrics
          description: Emit per-token (<prefix>.http.perToken) and summary (<prefix>.http.summary) request metrics
          default: false
        description:
          type: string
          title: Description
      type: object
    InputAzureBlob:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - azure_blob
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        queueName:
          type: string
          title: Queue
          description: "The storage account queue name blob notifications will be read from. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myQueue-${C.vars.myVar}`"
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        visibilityTimeout:
          type: number
          title: Visibility timeout (secs)
          description: The duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a ReceiveMessage request.
          default: 600
          minimum: 0
          maximum: 604800
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages to return in a poll request. Azure storage queues never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 32."
          default: 1
          minimum: 1
          maximum: 32
        servicePeriodSecs:
          type: number
          title: Service period (secs)
          description: The duration (in seconds) which pollers should be validated and restarted if exited
          default: 5
          minimum: 1
          maximum: 10
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
            - clientSecret
            - clientCert
          default: manual
        description:
          type: string
          title: Description
        connectionString:
          type: string
          title: Connection string
          description: Enter your Azure Storage account connection string. If left blank, Stream will fall back to env.AZURE_STORAGE_CONNECTION_STRING.
        textSecret:
          type: string
          title: Connection string (text secret)
          description: Select or create a stored text secret
        storageAccountName:
          type: string
          title: Storage account name
          description: The name of your Azure storage account
        tenantId:
          type: string
          title: Tenant ID
          description: The service principal's tenant ID
        clientId:
          type: string
          title: Client ID
          description: The service principal's client ID
        azureCloud:
          type: string
          title: Azure Cloud
          description: The Azure cloud to use. Defaults to Azure Public Cloud.
        endpointSuffix:
          type: string
          title: Endpoint suffix
          description: Endpoint suffix for the service URL. Takes precedence over the Azure Cloud setting. Defaults to core.windows.net.
        clientTextSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
        certificate:
          type: object
          required:
            - certificateName
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The certificate you registered as credentials for your app in the Azure portal
      type: object
    InputElastic:
      required:
        - host
        - port
        - elasticAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - elastic
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        elasticAPI:
          type: string
          title: Elasticsearch API endpoint
          description: Absolute path on which to listen for Elasticsearch API requests. Defaults to /. _bulk will be appended automatically. For example, /myPath becomes /myPath/_bulk. Requests can then be made to either /myPath/_bulk or /myPath/<myIndexName>/_bulk. Other entries are faked as success.
          default: /
          pattern: ^/
        authType:
          type: string
          title: Authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - authTokens
          default: none
        apiVersion:
          type: string
          title: API version
          description: The API version to use for communicating with the server
          enum:
            - 6.8.4
            - 8.3.2
            - custom
          default: 8.3.2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Field Value
          default:
            - name: X-elastic-product
              value: Elasticsearch
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        proxyMode:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable proxy mode
              default: false
              description: Enable proxying of non-bulk API requests to an external Elastic server. Enable this only if you understand the implications. See [Cribl Docs](https://docs.cribl.io/stream/sources-elastic/#proxy-mode) for more details.
            url:
              type: string
              title: Proxy URL
              description: URL of the Elastic server to proxy non-bulk requests to, such as http://elastic:9200
            rejectUnauthorized:
              type: boolean
              title: Reject unauthorized certificates
              description: Reject certificates that cannot be verified against a valid CA (such as self-signed certificates)
              default: false
            removeHeaders:
              type: array
              title: Remove headers
              description: List of headers to remove from the request to proxy
              items:
                type: string
                minLength: 1
            timeoutSec:
              type: number
              default: 60
              minimum: 1
              maximum: 9007199254740991
              title: Proxy request timeout
              description: Amount of time, in seconds, to wait for a proxy request to complete before canceling it
            authType:
              title: Authentication method
              type: string
              enum:
                - none
                - manual
                - secret
              default: none
              description: Enter credentials directly, or select a stored secret
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        authTokens:
          type: array
          title: Token
          description: Bearer tokens to include in the authorization header
          items:
            type: string
        customAPIVersion:
          type: string
          title: Custom API Version
          description: Custom version information to respond to requests
          default: |-
            {
                "name": "AzU84iL",
                "cluster_name": "cribl",
                "cluster_uuid": "Js6_Z2VKS3KbfRSxPmPbaw",
                "version": {
                    "number": "8.3.2",
                    "build_type": "tar",
                    "build_hash": "bca0c8d",
                    "build_date": "2019-10-16T06:19:49.319352Z",
                    "build_snapshot": false,
                    "lucene_version": "9.7.2",
                    "minimum_wire_compatibility_version": "7.17.0",
                    "minimum_index_compatibility_version": "7.0.0"
                },
                "tagline": "You Know, for Search"
            }
      type: object
    InputConfluentCloud:
      required:
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - confluent_cloud
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        brokers:
          type: array
          title: Bootstrap servers
          description: List of Confluent Cloud bootstrap servers to use, such as yourAccount.confluent.cloud:9092
          minItems: 1
          items:
            type: string
            minLength: 1
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: |-
                Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
                - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: |-
                    Reject certificates that are not authorized by a CA in the CA certificate path, or by another
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            mechanism:
              type: string
              default: plain
              enum:
                - plain
                - scram-sha-256
                - scram-sha-512
                - kerberos
              title: SASL mechanism
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: |2-
                  Timeout used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires,
                  the broker will remove the client from the group and initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: |2-
                  Maximum allowed time for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: |2-
                  Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputGrafana:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - grafana
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep alive timeout (seconds)
          description: Maximum time to wait for additional data, after the last response was sent, before closing a socket connection. This can be very useful when Grafana Agent remote write's request frequency is high so, reusing connections, would help mitigating the cost of creating a new connection per request. Note that Grafana Agent's embedded Prometheus would attempt to keep connections open for up to 5 minutes.
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        prometheusAPI:
          type: string
          title: Remote Write API endpoint
          description: "Absolute path on which to listen for Grafana Agent's Remote Write requests. Defaults to /api/prom/push, which will expand as: 'http://<your‑upstream‑URL>:<your‑port>/api/prom/push'. Either this field or 'Logs API endpoint' must be configured."
          default: /api/prom/push
          pattern: ^/
        lokiAPI:
          type: string
          title: Logs API endpoint
          description: "Absolute path on which to listen for Loki logs requests. Defaults to /loki/api/v1/push, which will (in this example) expand as: 'http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push'. Either this field or 'Remote Write API endpoint' must be configured."
          default: /loki/api/v1/push
          pattern: ^/
        prometheusAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              description: Remote Write authentication type
              enum:
                - none
                - basic
                - credentialsSecret
                - token
                - textSecret
                - oauth
              default: none
            username:
              type: string
              title: Username
            password:
              type: string
              title: Password
            token:
              type: string
              title: Token
              description: Bearer token to include in the authorization header
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
            textSecret:
              type: string
              title: Token (text secret)
              description: Select or create a stored text secret
            loginUrl:
              type: string
              title: Login URL
              description: URL for OAuth
              pattern: ^https?://.*
            secretParamName:
              type: string
              title: OAuth Secret parameter name
              description: Secret parameter name to pass in request body
            secret:
              type: string
              title: OAuth secret
              description: Secret parameter value to pass in request body
            tokenAttributeName:
              type: string
              title: Token attribute name
              description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
            authHeaderExpr:
              type: string
              title: Authorize expression
              description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
              default: "`Bearer ${token}`"
            tokenTimeoutSecs:
              type: number
              title: Refresh interval (secs.)
              description: How often the OAuth token should be refreshed.
              minimum: 1
              maximum: 300000
              default: 3600
            oauthParams:
              type: array
              title: OAuth parameters
              description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth parameter name
                  value:
                    type: string
                    title: Value
                    description: OAuth parameter value
            oauthHeaders:
              type: array
              title: OAuth headers
              description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth header name
                  value:
                    type: string
                    title: Value
                    description: OAuth header value
        lokiAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              description: Loki logs authentication type
              enum:
                - none
                - basic
                - credentialsSecret
                - token
                - textSecret
                - oauth
              default: none
            username:
              type: string
              title: Username
            password:
              type: string
              title: Password
            token:
              type: string
              title: Token
              description: Bearer token to include in the authorization header
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
            textSecret:
              type: string
              title: Token (text secret)
              description: Select or create a stored text secret
            loginUrl:
              type: string
              title: Login URL
              description: URL for OAuth
              pattern: ^https?://.*
            secretParamName:
              type: string
              title: OAuth Secret parameter name
              description: Secret parameter name to pass in request body
            secret:
              type: string
              title: OAuth secret
              description: Secret parameter value to pass in request body
            tokenAttributeName:
              type: string
              title: Token attribute name
              description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
            authHeaderExpr:
              type: string
              title: Authorize expression
              description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
              default: "`Bearer ${token}`"
            tokenTimeoutSecs:
              type: number
              title: Refresh interval (secs.)
              description: How often the OAuth token should be refreshed.
              minimum: 1
              maximum: 300000
              default: 3600
            oauthParams:
              type: array
              title: OAuth parameters
              description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth parameter name
                  value:
                    type: string
                    title: Value
                    description: OAuth parameter value
            oauthHeaders:
              type: array
              title: OAuth headers
              description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth header name
                  value:
                    type: string
                    title: Value
                    description: OAuth header value
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
      anyOf:
        - required:
            - prometheusAPI
        - required:
            - lokiAPI
    InputLoki:
      required:
        - host
        - port
        - lokiAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - loki
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        lokiAPI:
          type: string
          title: Logs API endpoint
          description: "Absolute path on which to listen for Loki logs requests. Defaults to /loki/api/v1/push, which will (in this example) expand as: 'http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push'."
          default: /loki/api/v1/push
          pattern: ^/
        authType:
          type: string
          title: Authentication type
          description: Loki logs authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
      type: object
    InputPrometheusRw:
      required:
        - host
        - port
        - prometheusAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - prometheus_rw
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        prometheusAPI:
          type: string
          title: Remote Write API endpoint
          description: "Absolute path on which to listen for Prometheus requests. Defaults to /write, which will expand as: http://<your‑upstream‑URL>:<your‑port>/write."
          default: /write
          pattern: ^/
        authType:
          type: string
          title: Authentication type
          description: Remote Write authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
      type: object
    InputPrometheus:
      required:
        - interval
        - logLevel
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - prometheus
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        dimensionList:
          type: array
          title: Extra Dimensions
          default:
            - host
            - source
          description: Other dimensions to include in events
          items:
            type: string
            title: dimension
        discoveryType:
          title: Discovery Type
          type: string
          enum:
            - static
            - dns
            - ec2
          description: Target discovery mechanism. Use static to manually enter a list of targets.
          default: static
        interval:
          type: number
          title: Poll Interval
          description: How often in minutes to scrape targets for metrics, 60 must be evenly divisible by the value or save will fail.
          minimum: 1
          maximum: 60
          default: 15
        logLevel:
          type: string
          title: Log Level
          enum:
            - error
            - warn
            - info
            - debug
          description: Collector runtime Log Level
          default: info
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter credentials directly, or select a stored secret
        description:
          type: string
          title: Description
        targetList:
          type: array
          title: Targets
          minItems: 1
          default: []
          description: "List of Prometheus targets to pull metrics from. Values can be in URL or host[:port] format. For example: http://localhost:9090/metrics, localhost:9090, or localhost. In cases where just host[:port] is specified, the endpoint will resolve to 'http://host[:port]/metrics'."
          items:
            type: string
            title: Targets
        nameList:
          type: array
          title: DNS Names
          minItems: 1
          default: []
          description: List of DNS names to resolve
          items:
            type: string
            title: DNS Names
        recordType:
          type: string
          title: Record Type
          enum:
            - SRV
            - A
            - AAAA
          description: DNS Record type to resolve
          default: SRV
        scrapeProtocol:
          type: string
          title: Metrics Protocol
          enum:
            - http
            - https
          description: Protocol to use when collecting metrics
          default: http
        scrapePath:
          type: string
          title: Metrics Path
          description: Path to use when collecting metrics from discovered targets
          default: /metrics
          pattern: ^/.*
        usePublicIp:
          type: boolean
          title: Use Public IP
          description: Use public IP address for discovered targets. Set to false if the private IP address should be used.
          default: true
        scrapePort:
          type: number
          title: Metrics Port
          description: The port number in the metrics URL for discovered targets.
          minimum: 1
          maximum: 65535
          default: 9090
        searchFilter:
          title: Search Filter
          description: EC2 Instance Search Filter
          type: array
          items:
            type: object
            required:
              - Name
              - Values
            properties:
              Name:
                type: string
                title: Filter Name
                description: "Search filter attribute name, see: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html for more information. Attributes can be manually entered if not present in the drop down list"
              Values:
                type: array
                title: Filter Values
                description: Search Filter Values, if empty only "running" EC2 instances will be returned
                default: []
                items:
                  type: string
                  minLength: 1
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the EC2 is located
        endpoint:
          type: string
          title: Endpoint
          description: EC2 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to EC2-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing EC2 requests
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for EC2
          description: Use Assume Role credentials to access EC2
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        username:
          type: string
          title: Username
          description: Username for Prometheus Basic authentication
        password:
          type: string
          title: Password
          description: Password for Prometheus Basic authentication
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
      type: object
    InputEdgePrometheus:
      required:
        - interval
        - discoveryType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - edge_prometheus
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        dimensionList:
          type: array
          title: Extra Dimensions
          default:
            - host
            - source
          description: Other dimensions to include in events
          items:
            type: string
            title: dimension
        discoveryType:
          title: Discovery Type
          type: string
          enum:
            - static
            - dns
            - ec2
            - k8s-node
            - k8s-pods
          description: Target discovery mechanism. Use static to manually enter a list of targets.
          default: static
        interval:
          type: number
          title: Poll Interval
          description: How often in seconds to scrape targets for metrics.
          minimum: 2
          default: 15
        timeout:
          type: number
          title: HTTP Connection Timeout
          description: Timeout, in milliseconds, before aborting HTTP connection attempts; 1-60000 or 0 to disable
          default: 5000
          maximum: 60000
          minimum: 0
        persistence:
          type: object
          title: Disk Spooling
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events on disk for Cribl Edge and Search. Default is disabled.
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time period for grouping spooled events. Default is 10m.
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space that can be consumed before older buckets are deleted. Examples: 420MB, 4GB. Default is 1GB."
              pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data before older buckets are deleted. Examples: 2h, 4d. Default is 24h."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Compression
              description: Data compression format. Default is gzip.
              enum:
                - none
                - gzip
              default: gzip
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
            - kubernetes
          default: manual
          description: Enter credentials directly, or select a stored secret
        description:
          type: string
          title: Description
        targets:
          type: array
          title: Targets
          default: []
          minItems: 1
          items:
            type: object
            required:
              - host
            properties:
              protocol:
                type: string
                title: Protocol
                enum:
                  - http
                  - https
                description: Protocol to use when collecting metrics
                default: http
              host:
                type: string
                title: Host
                description: Name of host from which to pull metrics.
              port:
                type: number
                title: Port
                description: The port number in the metrics URL for discovered targets.
                minimum: 1
                maximum: 65535
                default: 9090
              path:
                type: string
                title: Path
                description: Path to use when collecting metrics from discovered targets
                default: /metrics
                pattern: ^/.*
        nameList:
          type: array
          title: DNS Names
          minItems: 1
          default: []
          description: List of DNS names to resolve
          items:
            type: string
            title: DNS Names
        recordType:
          type: string
          title: Record Type
          enum:
            - SRV
            - A
            - AAAA
          description: DNS Record type to resolve
          default: SRV
        scrapeProtocol:
          type: string
          title: Protocol
          enum:
            - http
            - https
          description: Protocol to use when collecting metrics
          default: http
        scrapePath:
          type: string
          title: Path
          description: Path to use when collecting metrics from discovered targets
          default: /metrics
          pattern: ^/.*
        usePublicIp:
          type: boolean
          title: Use Public IP
          description: Use public IP address for discovered targets. Set to false if the private IP address should be used.
          default: true
        scrapePort:
          type: number
          title: Port
          description: The port number in the metrics URL for discovered targets.
          minimum: 1
          maximum: 65535
          default: 9090
        searchFilter:
          title: Search Filter
          description: EC2 Instance Search Filter
          type: array
          items:
            type: object
            required:
              - Name
              - Values
            properties:
              Name:
                type: string
                title: Filter Name
                description: "Search filter attribute name, see: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html for more information. Attributes can be manually entered if not present in the drop down list"
              Values:
                type: array
                title: Filter Values
                description: Search Filter Values, if empty only "running" EC2 instances will be returned
                default: []
                items:
                  type: string
                  minLength: 1
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the EC2 is located
        endpoint:
          type: string
          title: Endpoint
          description: EC2 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to EC2-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing EC2 requests
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for EC2
          description: Use Assume Role credentials to access EC2
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        scrapeProtocolExpr:
          type: string
          title: Protocol
          description: Protocol to use when collecting metrics
          default: metadata.annotations['prometheus.io/scheme'] || 'http'
        scrapePortExpr:
          type: string
          title: Port
          description: The port number in the metrics URL for discovered targets.
          default: metadata.annotations['prometheus.io/port'] || 9090
        scrapePathExpr:
          type: string
          title: Path
          description: Path to use when collecting metrics from discovered targets
          default: metadata.annotations['prometheus.io/path'] || '/metrics'
        podFilter:
          type: array
          title: Filter Rules
          description: |2
              Add rules to decide which pods to discover for metrics.
              Pods are searched if no rules are given or of all the rules'
              expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to pods objects. Return 'true' to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: metadata.annotations['prometheus.io/scrape']
              description: Scrape pod if annotation is true
        username:
          type: string
          title: Username
          description: Username for Prometheus Basic authentication
        password:
          type: string
          title: Password
          description: Password for Prometheus Basic authentication
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
      type: object
    InputOffice365Mgmt:
      required:
        - tenantId
        - appId
        - planType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - office365_mgmt
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
          enum:
            - enterprise_gcc
            - gcc
            - gcc_high
            - dod
          default: enterprise_gcc
        tenantId:
          type: string
          title: Tenant ID
          description: Office 365 Azure Tenant ID
        appId:
          type: string
          title: App ID
          description: Office 365 Azure Application ID
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout, use 0 to disable
          minimum: 0
          maximum: 2400
          default: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        publisherIdentifier:
          type: string
          title: Publisher Identifier
          description: Optional Publisher Identifier to use in API requests, defaults to tenant id if not defined. For more information see [here](https://docs.microsoft.com/en-us/office/office-365-management-api/office-365-management-activity-api-reference#start-a-subscription)
        contentConfig:
          type: array
          title: Content Types
          default:
            - contentType: Active Directory
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: Exchange
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: SharePoint
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: General
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: DLP
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
          items:
            type: object
            properties:
              contentType:
                type: string
                title: Content Type
                description: Office 365 Management Activity API Content Type
              description:
                type: string
                title: Interval Description
                description: If interval type is minutes the value entered must evenly divisible by 60 or save will fail
              interval:
                type: number
                title: Interval
                minimum: 1
                maximum: 60
              logLevel:
                type: string
                title: Log Level
                enum:
                  - error
                  - warn
                  - info
                  - debug
                description: Collector runtime Log Level
              enabled:
                type: boolean
                title: Enabled
          description: "Enable Office 365 Management Activity API content types and polling intervals. Polling intervals are used to set up search date range and cron schedule, e.g.: */${interval} * * * *. Because of this, intervals entered must be evenly divisible by 60 to give a predictable schedule."
        ingestionLag:
          type: number
          title: Ingestion lag (minutes)
          description: Use this setting to account for ingestion lag. This is necessary because there can be a lag of 60 - 90 minutes (or longer) before Office 365 events are available for retrieval.
          default: 0
          minimum: 0
          maximum: 7200
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
              minItems: 1
              default:
                - 429
                - 500
                - 503
              items:
                type: number
                minLength: 1
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
        description:
          type: string
          title: Description
        clientSecret:
          type: string
          title: Client secret
          description: Office 365 Azure client secret
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
      type: object
    InputOffice365Service:
      required:
        - tenantId
        - appId
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - office365_service
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
          enum:
            - enterprise_gcc
            - gcc
            - gcc_high
            - dod
          default: enterprise_gcc
        tenantId:
          type: string
          title: Tenant ID
          description: Office 365 Azure Tenant ID
        appId:
          type: string
          title: App ID
          description: Office 365 Azure Application ID
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout, use 0 to disable
          minimum: 0
          maximum: 2400
          default: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        contentConfig:
          type: array
          title: Content Types
          default:
            - contentType: Current Status
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
            - contentType: Messages
              description: Poll interval minutes (1-60)
              interval: 15
              logLevel: info
              enabled: false
          items:
            type: object
            properties:
              contentType:
                type: string
                title: Content Type
                description: Office 365 Services API Content Type
              description:
                type: string
                title: Interval Description
                description: If interval type is minutes the value entered must evenly divisible by 60 or save will fail
              interval:
                type: number
                title: Interval
                minimum: 0
                maximum: 60
              logLevel:
                type: string
                title: Log Level
                enum:
                  - error
                  - warn
                  - info
                  - debug
                description: Collector runtime Log Level
              enabled:
                type: boolean
                title: Enabled
          description: "Enable Office 365 Service Communication API content types and polling intervals. Polling intervals are used to set up search date range and cron schedule, e.g.: */${interval} * * * *. Because of this, intervals entered for current and historical status must be evenly divisible by 60 to give a predictable schedule."
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
              minItems: 1
              default:
                - 429
                - 500
                - 503
              items:
                type: number
                minLength: 1
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
        description:
          type: string
          title: Description
        clientSecret:
          type: string
          title: Client secret
          description: Office 365 Azure client secret
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
      type: object
    InputOffice365MsgTrace:
      required:
        - url
        - interval
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - office365_msg_trace
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        url:
          title: Report URL
          type: string
          description: URL to use when retrieving report data.
          default: https://reports.office365.com/ecp/reportingwebservice/reporting.svc/MessageTrace
        interval:
          type: number
          title: Poll interval
          description: How often (in minutes) to run the report. Must divide evenly into 60 minutes to create a predictable schedule, or Save will fail.
          minimum: 1
          maximum: 60
          default: 60
        startDate:
          title: Date range start
          type: string
          description: "Backward offset for the search range's head. (E.g.: -3h@h) Message Trace data is delayed; this parameter (with Date range end) compensates for delay and gaps."
        endDate:
          title: Date range end
          type: string
          description: "Backward offset for the search range's tail. (E.g.: -2h@h) Message Trace data is delayed; this parameter (with Date range start) compensates for delay and gaps."
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Maximum is 2400 (40 minutes); enter 0 to wait indefinitely.
          minimum: 0
          maximum: 2400
          default: 300
        disableTimeFilter:
          type: boolean
          title: Disable time filter
          description: Disables time filtering of events when a date range is specified.
          default: true
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
            - oauth
            - oauthSecret
            - oauthCert
          default: oauth
          description: Select authentication method.
        rescheduleDroppedTasks:
          type: boolean
          title: Reschedule tasks
          description: Reschedule tasks that failed with non-fatal errors
          default: true
        maxTaskReschedule:
          type: number
          title: Task reschedule limit
          description: Maximum number of times a task can be rescheduled
          default: 1
          minimum: 1
        logLevel:
          type: string
          title: Log level
          description: Log Level (verbosity) for collection runtime behavior.
          enum:
            - error
            - warn
            - info
            - debug
            - silly
          default: info
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
              minItems: 1
              default:
                - 429
                - 500
                - 503
              items:
                type: number
                minLength: 1
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
          description: Username to run Message Trace API call.
        password:
          type: string
          title: Password
          description: Password to run Message Trace API call.
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials.
        clientSecret:
          type: string
          title: Client secret
          description: client_secret to pass in the OAuth request parameter.
        tenantId:
          type: string
          title: Tenant identifier
          description: Directory ID (tenant identifier) in Azure Active Directory.
        clientId:
          type: string
          title: Client ID
          description: client_id to pass in the OAuth request parameter.
        resource:
          type: string
          title: Resource
          description: Resource to pass in the OAuth request parameter.
          default: https://outlook.office365.com
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
          enum:
            - enterprise_gcc
            - gcc
            - gcc_high
            - dod
          default: enterprise_gcc
        textSecret:
          type: string
          title: Client secret
          description: Select or create a secret that references your client_secret to pass in the OAuth request parameter.
        certOptions:
          type: object
          required:
            - privKeyPath
            - certPath
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate.
            privKeyPath:
              type: string
              title: Private key path
              description: Path to the private key to use. Key should be in PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt the private key.
            certPath:
              type: string
              title: Certificate path
              description: Path to the certificate to use. Certificate should be in PEM format. Can reference $ENV_VARS.
      type: object
    InputEventhub:
      required:
        - brokers
        - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - eventhub
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        brokers:
          type: array
          title: Brokers
          description: "List of Event Hubs Kafka brokers to connect to (example: yourdomain.servicebus.windows.net:9093). The hostname can be found in the host portion of the primary or secondary connection string in Shared Access Policies."
          minItems: 1
          items:
            type: string
            minLength: 1
        topics:
          type: array
          title: Event Hub name
          description: "The name of the Event Hub (Kafka topic) to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Event Hubs Source to only a single topic."
          minItems: 1
          default: []
          items:
            type: string
            minLength: 1
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group this instance belongs to. Default is 'Cribl'.
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Start reading from earliest available data; relevant only during initial subscription
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            mechanism:
              type: string
              enum:
                - plain
                - oauthbearer
              title: SASL mechanism
              default: plain
        tls:
          type: object
          title: TLS settings (client side)
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certificates that are not authorized by a CA in the CA certificate path, or by another trusted CA (such as the system's)
              default: true
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: |2-
                  Timeout (session.timeout.ms in Kafka domain) used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires, the broker will remove the client from the group and initiate a rebalance.
                  Value must be lower than rebalanceTimeout.
                  See details [here](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 30000
          minimum: 6000
          maximum: 300000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: |2-
                  Maximum allowed time (rebalance.timeout.ms in Kafka domain) for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Recommended configurations](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 60000
          minimum: 1000
          maximum: 3600000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: |2-
                  Expected time (heartbeat.interval.ms in Kafka domain) between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Recommended configurations](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 3000
          minimum: 1000
          maximum: 3600000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
        minimizeDuplicates:
          type: boolean
          title: Minimize duplicates
          description: Minimize duplicate events by starting only one consumer for each topic partition
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputExec:
      required:
        - command
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          enum:
            - exec
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        command:
          type: string
          title: Command
          description: Command to execute; supports Bourne shell (or CMD on Windows) syntax
        retries:
          type: number
          title: Retry limit
          description: Maximum number of retry attempts in the event that the command fails
          default: 10
          minimum: 0
        scheduleType:
          title: Schedule type
          type: string
          enum:
            - interval
            - cronSchedule
          default: interval
          description: Select a schedule type; either an interval (in seconds) or a cron-style schedule.
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        interval:
          type: number
          title: Interval
          description: Interval between command executions in seconds.
          default: 60
          minimum: 1
        cronSchedule:
          type: string
          title: Schedule
          description: Cron schedule to execute the command on.
          default: "* * * * *"
      type: object
    InputFirehose:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - firehose
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputGooglePubsub:
      required:
        - topicName
        - subscriptionName
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - google_pubsub
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        topicName:
          type: string
          title: Topic ID
          description: ID of the topic to receive events from
        subscriptionName:
          type: string
          title: Subscription ID
          description: ID of the subscription to use when receiving events
        createTopic:
          type: boolean
          title: Create topic
          description: Create topic if it does not exist
          default: false
        createSubscription:
          type: boolean
          title: Create subscription
          description: Create subscription if it does not exist
          default: true
        region:
          type: string
          title: Region
          description: Region to retrieve messages from. Select 'default' to allow Google to auto-select the nearest region. When using ordered delivery, the selected region must be allowed by message storage policy.
        googleAuthMethod:
          type: string
          title: Google authentication method
          description: Choose Auto to use Google Application Default Credentials (ADC), Manual to enter Google service account credentials directly, or Secret to select or create a stored secret that references Google service account credentials.
          default: manual
          enum:
            - auto
            - manual
            - secret
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
        maxBacklog:
          type: number
          title: Backlog limit
          description: If Destination exerts backpressure, this setting limits how many inbound events Stream will queue for processing before it stops retrieving events
          default: 1000
          minimum: 1
        concurrency:
          type: number
          title: Number of concurrent streams
          description: How many streams to pull messages from at one time. Doubling the value doubles the number of messages this Source pulls from the topic (if available), while consuming more CPU and memory. Defaults to 5.
          default: 5
          minimum: 1
          maximum: 100
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Pull request timeout, in milliseconds
          default: 60000
          minimum: 10000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        orderedDelivery:
          type: boolean
          title: Ordered delivery
          description: Receive events in the order they were added to the queue. The process sending events must have ordering enabled.
          default: false
      type: object
    InputCribl:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - cribl
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        filter:
          type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputCriblTcp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - cribl_tcp
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
        description:
          type: string
          title: Description
      type: object
    InputCriblHttp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - cribl_http
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputCriblLakeHttp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - cribl_lake_http
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputTcpjson:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - tcpjson
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
        description:
          type: string
          title: Description
        authToken:
          type: string
          title: Auth token
          description: Shared secret to be provided by any client (in authToken header field). If empty, unauthorized access is permitted.
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
      type: object
    InputSystemMetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - system_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metric collections. Default is 10 seconds.
        host:
          type: object
          properties:
            mode:
              type: string
              description: Select level of detail for host metrics
              enum:
                - basic
                - all
                - custom
                - disabled
              default: basic
            custom:
              type: object
              properties:
                system:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for system metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                    processes:
                      type: boolean
                      default: false
                      title: Process metrics
                      description: Generate metrics for the numbers of processes in various states
                cpu:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for CPU metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                    perCpu:
                      type: boolean
                      default: false
                      title: Per-CPU metrics
                      description: Generate metrics for each CPU
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all CPU states
                    time:
                      type: boolean
                      default: false
                      title: CPU time metrics
                      description: Generate raw, monotonic CPU time counters
                memory:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for memory metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all memory states
                network:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for network metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                    devices:
                      type: array
                      title: Interface filter
                      description: "Network interfaces to include/exclude. Examples: eth0, !lo. All interfaces are included if this list is empty."
                      default:
                        - "!lo"
                        - "*"
                      items:
                        type: string
                    perInterface:
                      type: boolean
                      default: false
                      title: Per-interface metrics
                      description: Generate separate metrics for each interface
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full network metrics
                disk:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for disk metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                    devices:
                      type: array
                      title: Device filter
                      description: "Block devices to include/exclude. Examples: sda*, !loop*. Wildcards and ! (not) operators are supported. All devices are included if this list is empty."
                      default:
                        - "!loop*"
                        - "*"
                      items:
                        type: string
                    mountpoints:
                      type: array
                      title: Mountpoint filter
                      description: "Filesystem mountpoints to include/exclude. Examples: /, /home, !/proc*, !/tmp. Wildcards and ! (not) operators are supported. All mountpoints are included if this list is empty."
                      default: []
                      items:
                        type: string
                    fstypes:
                      type: array
                      title: Filesystem type filter
                      description: "Filesystem types to include/exclude. Examples: ext4, !*tmpfs, !squashfs. Wildcards and ! (not) operators are supported. All types are included if this list is empty."
                      default: []
                      items:
                        type: string
                    perDevice:
                      type: boolean
                      default: false
                      title: Per-device metrics
                      description: Generate separate metrics for each device
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full disk metrics
        process:
          type: object
          properties:
            sets:
              type: array
              title: Process sets
              description: Configure sets to collect process metrics
              items:
                type: object
                required:
                  - name
                  - filter
                properties:
                  name:
                    type: string
                    title: Set Name
                  filter:
                    type: string
                    title: Filter Expression
                  includeChildren:
                    type: boolean
                    title: Include Child Processes
                    default: false
        container:
          type: object
          properties:
            mode:
              type: string
              description: Select the level of detail for container metrics
              enum:
                - basic
                - all
                - custom
                - disabled
              default: basic
            dockerSocket:
              type: array
              title: Docker socket
              description: Full paths for Docker's UNIX-domain socket
              default:
                - /var/run/docker.sock
                - /run/docker.sock
              items:
                type: string
            dockerTimeout:
              type: number
              default: 5
              minimum: 1
              title: Docker timeout
              description: Timeout, in seconds, for the Docker API
            filters:
              type: array
              title: Container filters
              description: Containers matching any of these will be included. All are included if no filters are added.
              items:
                type: object
                required:
                  - expr
                properties:
                  expr:
                    type: string
                    title: Expression
            allContainers:
              type: boolean
              default: false
              title: All containers
              description: Include stopped and paused containers
            perDevice:
              type: boolean
              default: false
              title: Per-device metrics
              description: Generate separate metrics for each device
            detail:
              type: boolean
              default: false
              title: Detailed metrics
              description: Generate full container metrics
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/system_metrics
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/system_metrics
        description:
          type: string
          title: Description
      type: object
    InputSystemState:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - system_state
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        interval:
          type: number
          default: 300
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive state collections. Default is 300 seconds (5 minutes).
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        collectors:
          type: object
          properties:
            hostsfile:
              type: object
              title: Hosts File
              description: Creates events based on entries collected from the hosts file
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            interfaces:
              type: object
              title: Interfaces
              description: Creates events for each of the host’s network interfaces
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            disk:
              type: object
              title: Disks & File Systems
              description: Creates events for physical disks, partitions, and file systems
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            metadata:
              type: object
              title: Host Info
              description: Creates events based on the host system’s current state
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            routes:
              type: object
              title: Routes
              description: Creates events based on entries collected from the host’s network routes
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            dns:
              type: object
              title: DNS
              description: Creates events for DNS resolvers and search entries
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            user:
              type: object
              title: Users & Groups
              description: Creates events for local users and groups
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            firewall:
              type: object
              title: Firewall
              description: Creates events for Firewall rules entries
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            services:
              type: object
              title: Services
              description: Creates events from the list of services
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            ports:
              type: object
              title: Listening Ports
              description: Creates events from list of listening ports
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
            loginUsers:
              type: object
              title: Logged-In Users
              description: Creates events from list of logged-in users
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
        persistence:
          type: object
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: none
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/system_state
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/system_state
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell) to collect events instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-system-state/#advanced-tab)
        description:
          type: string
          title: Description
      type: object
    InputKubeMetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kube_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        interval:
          type: number
          default: 15
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metrics collections. Default is 15 secs.
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which Kubernetes objects to generate metrics for. Events are generated if no rules are given or of all the rules' expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Kubernetes objects. Return 'true' to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: "!metadata.namespace.startsWith('kube-')"
              description: Ignore the kube-* namespace
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics on disk for Cribl Search
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/kube_metrics
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/<id>
        description:
          type: string
          title: Description
      type: object
    InputKubeLogs:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kube_logs
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        interval:
          type: number
          default: 15
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between checks for new containers. Default is 15 secs.
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which Pods to collect logs from. Logs are collected if no rules are given or if all the rules' expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Pod objects. Return 'true' to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: "!metadata.namespace.startsWith('kube-')"
              description: Ignore the kube-* namespace
        timestamps:
          type: boolean
          default: false
          title: Enable timestamps
          description: For use when containers do not emit a timestamp, prefix each line of output with a timestamp. If you enable this setting, you can use the Kubernetes Logs Event Breaker and the kubernetes_logs Pre-processing Pipeline to remove them from the events after the timestamps are extracted.
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        persistence:
          type: object
          title: Disk Spooling
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events on disk for Cribl Edge and Search. Default is disabled.
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time period for grouping spooled events. Default is 10m.
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space that can be consumed before older buckets are deleted. Examples: 420MB, 4GB. Default is 1GB."
              pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data before older buckets are deleted. Examples: 2h, 4d. Default is 24h."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Compression
              description: Data compression format. Default is gzip.
              enum:
                - none
                - gzip
              default: gzip
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
        description:
          type: string
          title: Description
      type: object
    InputKubeEvents:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kube_events
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        rules:
          type: array
          title: Filter Rules
          description: Filtering on event fields
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Kubernetes objects. Return 'true' to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default: []
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputWindowsMetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - windows_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metric collections. Default is 10 seconds.
        host:
          type: object
          properties:
            mode:
              type: string
              description: Select level of detail for host metrics
              enum:
                - basic
                - all
                - custom
                - disabled
              default: basic
            custom:
              type: object
              properties:
                system:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for system metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all system information
                cpu:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for CPU metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                    perCpu:
                      type: boolean
                      default: false
                      title: Per-CPU metrics
                      description: Generate metrics for each CPU
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all CPU states
                    time:
                      type: boolean
                      default: false
                      title: CPU time metrics
                      description: Generate raw, monotonic CPU time counters
                memory:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for memory metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all memory states
                network:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for network metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                    devices:
                      type: array
                      title: Interface filter
                      description: Network interfaces to include/exclude. All interfaces are included if this list is empty.
                      default:
                        - "!6to4*"
                        - "!*Debug*"
                        - "!*Virtual*"
                        - "!*Tunneling*"
                        - "!*IP-HTTPS*"
                        - "*"
                      items:
                        type: string
                    perInterface:
                      type: boolean
                      default: false
                      title: Per interface metrics
                      description: Generate separate metrics for each interface
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full network metrics
                disk:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for disk metrics
                      enum:
                        - basic
                        - all
                        - custom
                        - disabled
                      default: basic
                    volumes:
                      type: array
                      title: Volume filter
                      description: "Windows volumes to include/exclude. E.g.: C:, !E:, etc. Wildcards and ! (not) operators are supported. All volumes are included if this list is empty."
                      default:
                        - "!HarddiskVolume*"
                        - "*"
                      items:
                        type: string
                    perVolume:
                      type: boolean
                      default: false
                      title: Per volume metrics
                      description: Generate separate metrics for each volume
        process:
          type: object
          properties:
            sets:
              type: array
              title: Process sets
              description: Configure sets to collect process metrics
              items:
                type: object
                required:
                  - name
                  - filter
                properties:
                  name:
                    type: string
                    title: Set Name
                  filter:
                    type: string
                    title: Filter Expression
                  includeChildren:
                    type: boolean
                    title: Include Child Processes
                    default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/windows_metrics
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/windows_metrics
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell) to collect metrics instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-windows-metrics/#advanced-tab)
        description:
          type: string
          title: Description
      type: object
    InputCrowdstrike:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - crowdstrike
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 21600
          minimum: 0
          maximum: 43200
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        tagAfterProcessing:
          enum:
            - false
            - true
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
      type: object
    InputDatadogAgent:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - datadog_agent
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Toggle to Yes to extract each incoming metric to multiple events, one per data point. This works well when sending metrics to a statsd-type output. If sending metrics to DatadogHQ or any destination that accepts arbitrary JSON, leave toggled to No (the default).
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        proxyMode:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Forward API key validation requests
              default: false
              description: Toggle to Yes to send key validation requests from Datadog Agent to the Datadog API. If toggled to No (the default), Stream handles key validation requests by always responding that the key is valid.
            rejectUnauthorized:
              type: boolean
              title: Reject unauthorized certificates
              description: Whether to reject certificates that cannot be verified against a valid CA (e.g., self-signed certificates).
              default: true
        description:
          type: string
          title: Description
      type: object
    InputDatagen:
      required:
        - samples
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - datagen
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        samples:
          title: Datagens
          type: array
          minItems: 1
          items:
            type: object
            required:
              - sample
              - eventsPerSec
            properties:
              sample:
                type: string
                title: Data Generator File Name
              eventsPerSec:
                type: number
                title: Events Per Second Per Worker Node
                description: Maximum number of events to generate per second per Worker Node. Defaults to 10.
                default: 10
                minimum: 1
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputHttpRaw:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - http_raw
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        allowedPaths:
          type: array
          title: Allowed URI paths
          description: List of URI paths accepted by this input, wildcards are supported, e.g /api/v*/hook. Defaults to allow all.
          default:
            - "*"
          items:
            type: string
            minLength: 1
        allowedMethods:
          type: array
          title: Allowed HTTP methods
          description: List of HTTP methods accepted by this input. Wildcards are supported (such as P*, GET). Defaults to allow all.
          default:
            - "*"
          items:
            type: string
            minLength: 1
        authTokensExt:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                title: Token
                description: "Shared secret to be provided by any client (Authorization: <token>)"
              description:
                type: string
                title: Description
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputKinesis:
      required:
        - streamName
        - region
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - kinesis
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        streamName:
          type: string
          title: Stream name
          description: Kinesis Data Stream to read data from
        serviceInterval:
          type: number
          title: Service period
          description: Time interval in minutes between consecutive service calls
          default: 1
          minimum: 1
          maximum: 5
        shardExpr:
          type: string
          title: Shard selection expression
          description: A JavaScript expression to be called with each shardId for the stream. If the expression evaluates to a truthy value, the shard will be processed.
          default: "true"
        shardIteratorType:
          type: string
          title: Shard iterator start
          description: Location at which to start reading a shard for the first time
          enum:
            - TRIM_HORIZON
            - LATEST
          default: TRIM_HORIZON
        payloadFormat:
          type: string
          title: Record data format
          description: Format of data inside the Kinesis Stream records. Gzip compression is automatically detected.
          enum:
            - cribl
            - ndjson
            - cloudwatch
            - line
          default: cribl
        getRecordsLimit:
          type: number
          title: Records limit per call
          description: Maximum number of records per getRecords call
          minimum: 5000
          default: 5000
          maximum: 10000
        getRecordsLimitTotal:
          type: number
          title: Total records limit
          description: Maximum number of records, across all shards, to pull down at once per Worker Process
          minimum: 20000
          default: 20000
        loadBalancingAlgorithm:
          type: string
          title: Shard load balancing
          description: The load-balancing algorithm to use for spreading out shards across Workers and Worker Processes
          enum:
            - ConsistentHashing
            - RoundRobin
          default: ConsistentHashing
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: Region where the Kinesis stream is located
        endpoint:
          type: string
          title: Endpoint
          description: Kinesis stream service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to Kinesis stream-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Kinesis stream requests
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for Kinesis stream
          description: Use Assume Role credentials to access Kinesis stream
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        verifyKPLCheckSums:
          type: boolean
          title: Verify KPL checksums
          description: Verify Kinesis Producer Library (KPL) event checksums
          default: false
        avoidDuplicates:
          type: boolean
          title: Avoid duplicate records
          description: When resuming streaming from a stored state, Stream will read the next available record, rather than rereading the last-read record. Enabling this setting can cause data loss after a Worker Node's unexpected shutdown or restart.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
      type: object
    InputCriblmetrics:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - criblmetrics
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        prefix:
          type: string
          title: Metric name prefix
          description: A prefix that is applied to the metrics provided by Cribl Stream
          default: cribl.logstream.
        fullFidelity:
          type: boolean
          title: Full fidelity
          description: "Include granular metrics. Disabling this will drop the following metrics events: `cribl.logstream.host.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.index.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.source.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.sourcetype.(in_bytes,in_events,out_bytes,out_events)`."
          default: true
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputMetrics:
      required:
        - host
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
        udpPort:
          type: number
          title: UDP Port
          maximum: 65535
          description: Enter UDP port number to listen on. Not required if listening on TCP.
        tcpPort:
          type: number
          title: TCP Port
          maximum: 65535
          description: Enter TCP port number to listen on. Not required if listening on UDP.
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking. Only applies to UDP.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy Protocol V1 or V2
          default: false
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
        description:
          type: string
          title: Description
      type: object
    InputS3:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - s3
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
        tagAfterProcessing:
          type: boolean
          title: Tag after processing
          description: Add a tag to processed S3 objects. Requires s3:GetObjectTagging and s3:PutObjectTagging AWS permissions.
          default: false
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
      type: object
    InputS3Inventory:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - s3_inventory
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        checksumSuffix:
          type: string
          title: Checksum Suffix
          description: Filename suffix of the manifest checksum file. If a filename matching this suffix is received        in the queue, the matching manifest file will be downloaded and validated against its value. Defaults to "checksum"
          default: checksum
        maxManifestSizeKB:
          type: integer
          title: Manifest size limit (KB)
          description: Maximum download size (KB) of each manifest or checksum file. Manifest files larger than this size will not be read.        Defaults to 4096.
          default: 4096
          minimum: 1
        validateInventoryFiles:
          type: boolean
          title: Validate inventory files
          description: If set to Yes, each inventory file in the manifest will be validated against its checksum. Defaults to false
          default: false
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        tagAfterProcessing:
          enum:
            - false
            - true
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
      type: object
    InputSnmp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - snmp
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
        port:
          type: number
          title: UDP port
          maximum: 65535
          description: UDP port to receive SNMP traps on. Defaults to 162.
          default: 162
        snmpV3Auth:
          type: object
          title: SNMPv3 authentication
          description: Authentication parameters for SNMPv3 trap. Set the log level to debug if you are experiencing authentication or decryption issues.
          required:
            - v3AuthEnabled
          properties:
            v3AuthEnabled:
              type: boolean
              title: Enabled
              default: false
            allowUnmatchedTrap:
              type: boolean
              title: Allow unmatched traps
              description: Pass through traps that don't match any of the configured users. @{product} will not attempt to decrypt these traps.
              default: false
            v3Users:
              type: array
              title: SNMP v3 users
              description: User credentials for receiving v3 traps
              minItems: 1
              items:
                type: object
                required:
                  - name
                properties:
                  name:
                    title: V3 name
                    type: string
                    minLength: 1
                  authProtocol:
                    type: string
                    default: none
                    enum:
                      - none
                      - md5
                      - sha
                      - sha224
                      - sha256
                      - sha384
                      - sha512
                    title: Authentication protocol
                  authKey: {}
                  privProtocol:
                    default: none
                    type: string
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
        varbindsWithTypes:
          type: boolean
          title: Include varbind types
          description: If enabled, parses varbinds as an array of objects that include OID, value, and type
          default: false
        bestEffortParsing:
          type: boolean
          title: Best effort parsing
          description: If enabled, the parser will attempt to parse varbind octet strings as UTF-8, first, otherwise will fallback to other methods
          default: false
        description:
          type: string
          title: Description
      type: object
    InputOpenTelemetry:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - open_telemetry
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 4317
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader: {}
        captureHeaders: {}
        activityLogSampleRate: {}
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 sec.; maximum 600 sec. (10 min.).
          default: 15
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Enable to expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist.
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        protocol:
          type: string
          title: Protocol
          description: Select whether to leverage gRPC or HTTP for OpenTelemetry
          enum:
            - grpc
            - http
          default: grpc
        extractSpans:
          type: boolean
          title: Extract spans
          description: Enable to extract each incoming span to a separate event
          default: false
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Enable to extract each incoming Gauge or IntGauge metric to multiple events, one per data point
          default: false
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when interpreting received data
          enum:
            - 0.10.0
            - 1.3.1
          default: 0.10.0
        authType:
          type: string
          title: Authentication type
          description: OpenTelemetry authentication type
          enum:
            - none
            - basic
            - credentialsSecret
            - token
            - textSecret
            - oauth
          default: none
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        description:
          type: string
          title: Description
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
              value:
                type: string
                title: Value
                description: OAuth parameter value
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
              value:
                type: string
                title: Value
                description: OAuth header value
        extractLogs:
          type: boolean
          title: Extract logs
          description: Enable to extract each incoming log record to a separate event
          default: false
      type: object
    InputModelDrivenTelemetry:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - model_driven_telemetry
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 57000
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        shutdownTimeoutMs:
          type: number
          title: Shutdown timeout
          description: Time in milliseconds to allow the server to shutdown gracefully before forcing shutdown. Defaults to 5000.
          default: 5000
          minimum: 1
        description:
          type: string
          title: Description
      type: object
    InputSqs:
      required:
        - queueName
        - queueType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - sqs
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read events from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can only be evaluated at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        queueType:
          title: Queue type
          type: string
          description: The queue type used (or created)
          enum:
            - standard
            - fifo
          default: standard
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
        createQueue:
          type: boolean
          title: Create queue
          description: Create queue if it does not exist
          default: false
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the SQS queue is located. Required, unless the Queue entry is a URL or ARN that includes a Region.
        endpoint:
          type: string
          title: Endpoint
          description: SQS service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to SQS-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SQS requests
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        enableAssumeRole:
          type: boolean
          title: Enable for SQS
          description: Use Assume Role credentials to access SQS
          default: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 10
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: number
          title: Visibility Timeout Seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 3
          minimum: 1
          maximum: 100
      type: object
    InputSyslog:
      required:
        - host
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - syslog
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
        udpPort:
          type: number
          title: UDP port
          maximum: 65535
          description: Enter UDP port number to listen on. Not required if listening on TCP.
        tcpPort:
          type: number
          title: TCP port
          maximum: 65535
          description: Enter TCP port number to listen on. Not required if listening on UDP.
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking. Only applies to UDP.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        timestampTimezone:
          type: string
          title: Default timezone
          description: Timezone to assign to timestamps without timezone info
          default: local
        singleMsgUdpPackets:
          type: boolean
          title: Single msg per UDP
          description: Treat UDP packet data received as full syslog message
          default: false
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy Protocol V1 or V2
          default: false
        keepFieldsList:
          type: array
          title: Fields to keep
          description: Wildcard list of fields to keep from source data; * = ALL (default)
          default: []
          items:
            type: string
        octetCounting:
          type: boolean
          title: Octet count framing
          description: Enable if incoming messages use octet counting per RFC 6587.
          default: false
        inferFraming:
          type: boolean
          title: Infer Syslog framing
          description: Enable if we should infer the syslog framing of the incoming messages.
          default: true
        strictlyInferOctetCounting:
          type: boolean
          title: Strictly infer octet count framing
          description: Enable if we should infer octet counting only if the messages comply with RFC 5424.
          default: true
        allowNonStandardAppName:
          type: boolean
          title: Allow non-standard app name
          description: Enable if RFC 3164-formatted messages have hyphens in the app name portion of the TAG section. If disabled, only alphanumeric characters and underscores are allowed. Ignored for RFC 5424-formatted messages.
          default: false
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process for TCP connections. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: TCP socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: TCP forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: TCP Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
        enableLoadBalancing:
          type: boolean
          title: Enable TCP load balancing
          description: Load balance traffic across all Worker Processes
          default: false
        description:
          type: string
          title: Description
        enableEnhancedProxyHeaderParsing:
          type: boolean
          title: Enable enhanced TLS handshake for proxy protocol
          description: When enabled, parses PROXY protocol headers during the TLS handshake. Disable if compatibility issues arise.
      type: object
      anyOf:
        - required:
            - host
            - udpPort
        - required:
            - host
            - tcpPort
    InputFile:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          enum:
            - file
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        mode:
          type: string
          enum:
            - auto
            - manual
          default: auto
          description: Choose how to discover files to monitor
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between scanning for files
        filenames:
          type: array
          title: Filename allowlist
          description: The full path of discovered files are matched against this wildcard list
          default:
            - "*/log/*"
            - "*log"
          items:
            type: string
        tailOnly:
          type: boolean
          default: false
          title: Collect from end
          description: Read only new entries at the end of all files discovered at next startup. @{product} will then read newly discovered files from the head. Disable this to resume reading all files from head.
        idleTimeout:
          type: number
          default: 300
          minimum: 1
          title: Idle timeout
          description: Time, in seconds, before an idle file is closed
        maxAgeDur:
          type: string
          title: Age duration limit
          description: "The maximum age of files to monitor. Format examples: 60s, 4h, 3d, 1w. Age is relative to file modification time. Leave empty to apply no age filters."
        checkFileModTime:
          type: boolean
          default: false
          title: Check file modification times
          description: Skip files with modification times earlier than the maximum age duration
        forceText:
          type: boolean
          default: false
          title: Force text format
          description: Forces files containing binary data to be streamed as text
        hashLen:
          type: number
          default: 256
          minimum: 1
          title: Hash length
          description: Length of file header bytes to use in hash for unique file identification
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        description:
          type: string
          title: Description
        path:
          type: string
          title: Search path
          description: Directory path to search for files. Environment variables will be resolved, e.g. $CRIBL_HOME/log/.
        depth:
          type: number
          minimum: 0
          title: Max depth
          description: Set how many subdirectories deep to search. Use 0 to search only files in the given path, 1 to also look in its immediate subdirectories, etc. Leave it empty for unlimited depth.
        suppressMissingPathErrors:
          type: boolean
          default: false
          title: Suppress errors when search path does not exist
        deleteFiles:
          type: boolean
          default: false
          title: Delete files
          description: Delete files after they have been collected
        includeUnidentifiableBinary:
          type: boolean
          default: false
          title: Enable binary files
          description: Stream binary files as Base64-encoded chunks.
      type: object
    InputTcp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - tcp
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        enableHeader:
          type: boolean
          title: Enable header
          description: 'Client will pass the header record with every new connection. The header can contain an authToken, and an object with a list of fields and values to add to every event. These fields can be used to simplify Event Breaker selection, routing, etc. Header has this format, and must be followed by a newline: { "authToken" : "myToken", "fields": { "field1": "value1", "field2": "value2" } }'
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        description:
          type: string
          title: Description
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
      type: object
    InputAppscope:
      required:
        - id
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - appscope
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        enableUnixPath:
          type: boolean
          title: UNIX domain socket
          description: Toggle to Yes to specify a file-backed UNIX domain socket connection, instead of a network host and port.
          default: false
        filter:
          type: object
          properties:
            allow:
              type: array
              title: Rules
              description: Specify processes that AppScope should be loaded into, and the config to use.
              items:
                type: object
                properties:
                  procname:
                    type: string
                    title: Process name
                    description: Specify the name of a process or family of processes.
                  arg:
                    type: string
                    title: Process argument
                    description: Specify a string to substring-match against process command-line.
                  config:
                    type: string
                    title: AppScope config
                    description: Choose a config to apply to processes that match the process name and/or argument.
                required:
                  - procname
                  - config
            transportURL:
              type: string
              title: Transport override
              description: To override the UNIX domain socket or address/port specified in General Settings (while leaving Authentication settings as is), enter a URL.
        persistence:
          type: object
          title: Persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events and metrics on disk for Cribl Edge and Search
              default: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
            compress:
              type: string
              title: Data compression format
              enum:
                - none
                - gzip
              default: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/appscope
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/appscope
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
        description:
          type: string
          title: Description
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        unixSocketPath:
          type: string
          title: UNIX socket path
          default: $CRIBL_HOME/state/appscope.sock
          description: Path to the UNIX domain socket to listen on.
        unixSocketPerms:
          type: string
          title: UNIX socket permissions
          description: Permissions to set for socket e.g., 777. If empty, falls back to the runtime user's default permissions.
        authToken:
          type: string
          title: Auth token
          description: Shared secret to be provided by any client (in authToken header field). If empty, unauthorized access is permitted.
          default: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
      type: object
    InputWef:
      required:
        - host
        - port
        - subscriptions
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - wef
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 5986
        authMethod:
          type: string
          title: Authentication method
          description: How to authenticate incoming client connections
          enum:
            - clientCert
            - kerberos
          default: clientCert
        tls:
          type: object
          title: mTLS settings
          required:
            - privKeyPath
            - certPath
            - caPath
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable TLS
              default: false
            rejectUnauthorized:
              type: boolean
              title: Validate client certs
              description: Required for WEF certificate authentication
              default: true
            requestCert:
              type: boolean
              title: Authenticate client
              description: Required for WEF certificate authentication
              default: true
            certificateName:
              type: string
              title: Certificate
              description: Name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Server path containing CA certificates (in PEM format) to use. Can reference $ENV_VARS. If multiple certificates are present in a .pem, each must directly certify the one preceding it.
            commonNameRegex:
              type: string
              title: Common name
              description: Regex matching allowable common names in peer certificates' subject attribute
              default: /.*/
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            ocspCheck:
              type: boolean
              title: Verify certificate via OCSP
              description: Enable OCSP check of certificate
              default: false
            keytab: {}
            principal: {}
            ocspCheckFailClose:
              type: boolean
              title: Strict validation
              description: If enabled, checks will fail on any OCSP error. Otherwise, checks will fail only when a certificate is revoked, ignoring other errors.
              default: false
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Preserve the client’s original IP address in the __srcIpPort field when connecting through an HTTP proxy that supports the X-Forwarded-For header. This does not apply to TCP-layer Proxy Protocol v1/v2.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events in the __headers field
          default: false
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 90
          minimum: 1
          maximum: 600
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        caFingerprint:
          type: string
          title: CA fingerprint override
          description: SHA1 fingerprint expected by the client, if it does not match the first certificate in the configured CA chain
        keytab:
          type: string
          title: Keytab location
          description: Path to the keytab file containing the service principal credentials. @{product} will use `/etc/krb5.keytab` if not provided.
        principal:
          type: string
          title: Service principal name
          description: Kerberos principal used for authentication, typically in the form HTTP/<hostname>@<REALM>
        allowMachineIdMismatch:
          type: boolean
          title: Allow MachineID mismatch
          description: Allow events to be ingested even if their MachineID does not match the client certificate CN
          default: false
        subscriptions:
          title: Subscriptions
          description: Subscriptions to events on forwarding endpoints
          type: array
          items:
            type: object
            required:
              - subscriptionName
              - contentFormat
              - heartbeatInterval
              - batchTimeout
              - targets
            minLength: 1
            properties:
              subscriptionName:
                title: Subscription name
                type: string
              version:
                title: Version
                type: string
                description: Version UUID for this subscription. If any subscription parameters are modified, this value will change.
              contentFormat:
                title: Format
                type: string
                enum:
                  - Raw
                  - RenderedText
                description: Content format in which the endpoint should deliver events
                default: Raw
              heartbeatInterval:
                title: Heartbeat
                type: number
                description: Maximum time (in seconds) between endpoint checkins before considering it unavailable
                minimum: 1
                default: 60
              batchTimeout:
                title: Batch timeout
                type: number
                description: Interval (in seconds) over which the endpoint should collect events before sending them to Stream
                minimum: 0
                default: 60
              readExistingEvents:
                title: Read existing events
                type: boolean
                description: Newly subscribed endpoints will send previously existing events. Disable to receive new events only.
                default: false
              sendBookmarks:
                title: Use bookmarks
                type: boolean
                description: Keep track of which events have been received, resuming from that point after a re-subscription. This setting takes precedence over 'Read existing events'. See [Cribl Docs](https://docs.cribl.io/stream/sources-wef/#subscriptions) for more details.
                default: true
              compress:
                title: Compression
                type: boolean
                description: Receive compressed events from the source
                default: true
              targets:
                type: array
                title: Targets
                description: The DNS names of the endpoints that should forward these events. You may use wildcards, such as *.mydomain.com
                items:
                  type: string
                  minLength: 1
                default:
                  - "*"
              locale:
                title: Locale
                type: string
                description: The RFC-3066 locale the Windows clients should use when sending events. Defaults to "en-US".
                default: en-US
              querySelector:
                type: string
                title: Query builder mode
                enum:
                  - simple
                  - xml
                default: simple
              metadata:
                type: array
                title: Fields
                description: Fields to add to events ingested under this subscription
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
        logFingerprintMismatch:
          type: boolean
          title: Log CA fingerprint mismatch warning
          description: Log a warning if the client certificate authority (CA) fingerprint does not match the expected value. A mismatch prevents Cribl from receiving events from the Windows Event Forwarder.
          default: false
      type: object
    InputWinEventLogs:
      required:
        - logNames
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - win_event_logs
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        logNames:
          type: array
          title: Event logs
          description: Enter the event logs to collect. Run "Get-WinEvent -ListLog *" in PowerShell to see the available logs.
          default:
            - ""
          items:
            minLength: 1
            type: string
          minItems: 1
          uniqueItems: true
        readMode:
          type: string
          default: oldest
          enum:
            - oldest
            - newest
          title: Read mode
          description: Read all stored and future event logs, or only future events
        eventFormat:
          type: string
          default: json
          enum:
            - json
            - xml
          title: Event format
          description: Format of individual events
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell for JSON, wevtutil for XML) to collect event logs instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-windows-event-logs/#advanced-settings)
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between checking for new entries (Applicable for pre-4.8.0 nodes that use Windows Tools)
        batchSize:
          type: number
          default: 500
          minimum: 1
          title: Batch size
          description: The maximum number of events to read in one polling interval. A batch size higher than 500 can cause delays when pulling from multiple event logs. (Applicable for pre-4.8.0 nodes that use Windows Tools)
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        maxEventBytes:
          type: number
          title: Max event bytes
          description: The maximum number of bytes in an event before it is flushed to the pipelines
          default: 51200
          minimum: 1
          maximum: 134217728
        description:
          type: string
          title: Description
      type: object
    InputRawUdp:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - raw_udp
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking.
          default: 1000
          minimum: 0
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
        singleMsgUdpPackets:
          type: boolean
          title: Single msg per UDP
          description: If true, each UDP packet is assumed to contain a single message. If false, each UDP packet is assumed to contain multiple messages, separated by newlines.
          default: false
        ingestRawBytes:
          type: boolean
          title: Ingest raw bytes
          description: If true, a __rawBytes field will be added to each event containing the raw bytes of the datagram.
          default: false
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputJournalFiles:
      required:
        - path
        - journals
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          enum:
            - journal_files
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        path:
          type: string
          title: Search path
          description: Directory path to search for journals. Environment variables will be resolved, e.g. $CRIBL_EDGE_FS_ROOT/var/log/journal/$MACHINE_ID.
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: "Time, in seconds, between scanning for journals. "
        journals:
          type: array
          title: Journal allowlist
          description: The full path of discovered journals are matched against this wildcard list.
          default:
            - system
          items:
            type: string
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which journal objects to allow. Events are generated if no rules are given or if all the rules' expressions evaluate to true.
          items:
            type: object
            required:
              - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Journal objects. Return 'true' to include it.
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
          default:
            - filter: severity <= 4
              description: Allow log messages having 'emergency', 'alert', 'critical', 'error', or 'warning' priority
        currentBoot:
          type: boolean
          default: false
          title: Current boot only
          description: Skip log messages that are not part of the current boot session.
        maxAgeDur:
          type: string
          title: Age duration limit
          description: "The maximum log message age, in duration form (e.g,: 60s, 4h, 3d, 1w).  Default of no value will apply no max age filters."
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputWiz:
      required:
        - endpoint
        - authUrl
        - clientId
        - contentConfig
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - wiz
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        endpoint:
          type: string
          title: GraphQL endpoint
          description: "The Wiz GraphQL API endpoint. Example: https://api.us1.app.wiz.io/graphql"
          default: https://api.<region>.app.wiz.io/graphql
          pattern: ^https:\/\/
        authUrl:
          type: string
          title: Authentication URL
          description: The authentication URL to generate an OAuth token
        authAudienceOverride:
          type: string
          title: Authentication audience
          description: The audience to use when requesting an OAuth token for a custom auth URL. When not specified, `wiz-api` will be used.
        clientId:
          type: string
          title: Client ID
          description: The client ID of the Wiz application
        contentConfig:
          type: array
          title: Content types
          default:
            - contentType: Audit Logs
              contentDescription: Get all Audit Logs
              contentQuery: |-
                ({
















                  query: `query AuditLogTable($first: Int $after: String $filterBy: AuditLogEntryFilters){
                    auditLogEntries(first: $first after: $after filterBy: $filterBy) {
                      nodes {
                        id
                        action
                        requestId
                        status
                        timestamp
                        actionParameters
                        userAgent
                        sourceIP
                        serviceAccount {
                          id
                          name
                        }
                        user {
                          id
                          name
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      timestamp: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      },
                      status: ["SUCCESS", "FAILED","INVALID","ACCESS_DENIED"]
                    }
                  }
                })
              cronSchedule: "*/15 * * * *"
              earliest: -15m@m
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 100
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
            - contentType: Configuration Findings
              contentDescription: Get Cloud Configuration Report
              contentQuery: |-
                ({
















                  query: `query CloudConfigurationFindingsPage($filterBy: ConfigurationFindingFilters, $first: Int, $after: String, $orderBy: ConfigurationFindingOrder) {
                    configurationFindings(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                      nodes {
                        id
                        targetExternalId
                        targetObjectProviderUniqueId
                        firstSeenAt
                        severity
                        result
                        status
                        remediation
                        resource {
                          id
                          providerId
                          name
                          nativeType
                          type
                          region
                          subscription {
                            id
                            name
                            externalId
                            cloudProvider
                          }
                          projects {
                            id
                            name
                            riskProfile {
                              businessImpact
                            }
                          }
                          tags {
                            key
                            value
                          }
                        }
                        rule {
                          id
                          graphId
                          name
                          description
                          remediationInstructions
                          functionAsControl
                        }
                        securitySubCategories {
                          id
                          title
                          category {
                            id
                            name
                            framework {
                              id
                              name
                            }
                          }
                        }
                        ignoreRules {
                          id
                          name
                          enabled
                          expiredAt
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      id: [],
                      source: [],
                      rule: {
                        id: [],
                        name: [],
                        description: []
                      },
                      result: ["PASS","FAIL","ERROR", "NOT_ASSESSED"],
                      severity: ["NONE","LOW","MEDIUM","HIGH","CRITICAL"],
                      status: ["OPEN","IN_PROGRESS","RESOLVED","REJECTED"
                      ],
                      frameworkCategory: [],
                      firstSeenAt: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      }
                    }
                  }
                })
              cronSchedule: 0 */12 * * *
              earliest: -12h@h
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 100
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
            - contentType: Issues
              contentDescription: Get Open Issues
              contentQuery: |-
                ({
















                  query: `query IssuesTable($filterBy: IssueFilters, $first: Int, $after: String, $orderBy: IssueOrder) {
                    issues: issuesV2(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                      nodes {
                        id
                        control {
                          id
                          name
                          description
                          resolutionRecommendation
                          securitySubCategories {
                            title
                            category {
                              name
                              framework {
                                name
                              }
                            }
                          }
                        }
                        createdAt
                        updatedAt
                        sourceRule {
                          id
                          name
                        }
                        dueAt
                        resolvedAt
                        statusChangedAt
                        project {
                          id
                          name
                          slug
                          businessUnit
                          riskProfile {
                            businessImpact
                          }
                        }
                        status
                        severity
                        type
                        entitySnapshot {
                          id
                          type
                          nativeType
                          name
                          status
                          cloudPlatform
                          cloudProviderURL
                          providerId
                          region
                          resourceGroupExternalId
                          subscriptionExternalId
                          subscriptionName
                          subscriptionTags
                          tags
                          externalId
                        }
                        notes {
                          createdAt
                          updatedAt
                          text
                          user {
                            name
                            email
                          }
                          serviceAccount {
                            name
                          }
                        }
                        serviceTickets {
                          externalId
                          name
                          url
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      sourceRule: {
                        id: []
                      },
                      relatedEntity: {
                        type: []
                      },
                      status: ["OPEN","IN_PROGRESS","RESOLVED","REJECTED"],
                      severity: ["INFORMATIONAL","LOW","MEDIUM","HIGH","CRITICAL"],
                      type: ["TOXIC_COMBINATION","THREAT_DETECTION","CLOUD_CONFIGURATION"],
                      createdAt: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      }
                    }
                  }
                })
              cronSchedule: 0 */12 * * *
              earliest: -12h@h
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 0
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
            - contentType: Vulnerabilities
              contentDescription: Get Vulnerability Findings
              contentQuery: |-
                ({
















                  query: `query VulnerabilityFindingsPage($filterBy: VulnerabilityFindingFilters, $first: Int, $after: String, $orderBy: VulnerabilityFindingOrder) {
                    vulnerabilityFindings(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                      nodes {
                        id
                        portalUrl
                        name
                        CVEDescription
                        CVSSSeverity
                        score
                        exploitabilityScore
                        impactScore
                        hasExploit
                        hasCisaKevExploit
                        status
                        vendorSeverity
                        firstDetectedAt
                        lastDetectedAt
                        resolvedAt
                        description
                        remediation
                        detailedName
                        version
                        fixedVersion
                        detectionMethod
                        link
                        locationPath
                        resolutionReason
                        vulnerableAsset {
                          ... on VulnerableAssetBase {
                            id
                            type
                            name
                            region
                            providerUniqueId
                            cloudProviderURL
                            cloudPlatform
                            status
                            subscriptionName
                            subscriptionExternalId
                            subscriptionId
                            tags
                          }
                          ... on VulnerableAssetVirtualMachine {
                            operatingSystem
                            ipAddresses
                          }
                          ... on VulnerableAssetServerless {
                            runtime
                          }
                          ... on VulnerableAssetContainerImage {
                            imageId
                          }
                          ... on VulnerableAssetContainer {
                            ImageExternalId
                            VmExternalId
                            ServerlessContainer
                            PodNamespace
                            PodName
                            NodeName
                          }
                        }
                      }
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                    }
                  }`,
                  variables: {
                    first: 100,
                    after: endCursor,
                    filterBy: {
                      id: [],
                      status: [],
                      assetType: [],
                      vendorSeverity: [],
                      assetId: [],
                      vulnerabilityId: [],
                      detectionMethod: [],
                      assetStatus: [],
                      firstSeenAt: {
                        after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                        before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                      }
                    }
                  }
                })
              cronSchedule: 0 */12 * * *
              earliest: -12h@h
              latest: now
              jobTimeout: "0"
              logLevel: info
              maxPages: 0
              enabled: false
              stateTracking: false
              stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
              stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
          items:
            type: object
            required:
              - contentType
              - contentQuery
              - cronSchedule
              - earliest
              - latest
            properties:
              contentType:
                type: string
                title: Content name
                description: The name of the Wiz query
                pattern: ^[a-zA-Z0-9_-\s]+$
              contentDescription:
                type: string
                title: Description
              enabled:
                type: boolean
                title: Enable content
                default: false
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Use 0 to disable.
          minimum: 0
          maximum: 2400
          default: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Worker Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        retryRules:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
                - none
                - backoff
                - static
              default: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of HTTP codes that trigger a retry. Leave empty to use the default list of 429 and 503.
              minItems: 1
              default:
                - 429
                - 503
              items:
                type: number
                minLength: 1
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
        authType:
          title: Authentication method
          type: string
          enum:
            - manual
            - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
        description:
          type: string
          title: Description
        clientSecret:
          type: string
          title: Client secret
          description: The client secret of the Wiz application
        textSecret:
          type: string
          title: Client Secret (text secret)
          description: Select or create a stored text secret
      type: object
    InputNetflow:
      required:
        - host
        - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - netflow
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 2055
        enablePassThrough:
          type: boolean
          title: Enable pass-through
          default: false
          description: Allow forwarding of events to a NetFlow destination. Enabling this feature will generate an extra event containing __netflowRaw which can be routed to a NetFlow destination. Note that these events will not count against ingest quota.
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist.
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
        templateCacheMinutes:
          type: number
          title: Template cache minutes
          description: Specifies how many minutes NetFlow v9 templates are cached before being discarded if not refreshed. Adjust based on your network's template update frequency to optimize performance and memory usage.
          minimum: 1
          maximum: 3600
          default: 30
        v5Enabled:
          type: boolean
          title: V5
          description: Accept messages in Netflow V5 format.
          default: true
        v9Enabled:
          type: boolean
          title: V9
          description: Accept messages in Netflow V9 format.
          default: true
        ipfixEnabled:
          type: boolean
          title: IPFIX
          description: Accept messages in IPFIX format.
          default: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        description:
          type: string
          title: Description
      type: object
    InputSecurityLake:
      required:
        - queueName
        - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - security_lake
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
            - auto
            - manual
            - secret
        awsSecretKey:
          type: string
          title: Secret key
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
            - v2
            - v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
        preprocess:
          type: object
          required:
            - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
        checkpointing:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
        description:
          type: string
          title: Description
        awsApiKey:
          type: string
          title: Access key
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
        tagAfterProcessing:
          enum:
            - false
            - true
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
      type: object
    InputZscalerHec:
      required:
        - host
        - port
        - hecAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
        type:
          type: string
          enum:
            - zscaler_hec
        disabled:
          type: boolean
          title: Disabled
          default: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: []
          items:
            type: string
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
              - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
              output:
                title: Destination
                type: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
                - smart
                - always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
            compress:
              type: string
              default: none
              enum:
                - none
                - gzip
              title: Compression
              description: Codec to use to compress the persisted data
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
              - token
            properties:
              authType:
                title: Authentication method
                type: string
                enum:
                  - manual
                  - secret
                default: manual
                description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
              tokenSecret: {}
              token: {}
              enabled:
                type: boolean
                title: Enable token
                default: true
              description:
                type: string
                title: Description
              allowedIndexesAtToken:
                type: array
                title: Allowed indexes
                description: Enter the values you want to allow in the HEC event index field at the token level. Supports wildcards. To skip validation, leave blank.
                items:
                  type: string
                  minLength: 1
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
            rejectUnauthorized: {}
            commonNameRegex: {}
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - TLSv1.3
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
        enableHealthCheck: {}
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
        hecAPI:
          type: string
          title: HEC endpoint
          description: Absolute path on which to listen for the Zscaler HTTP Event Collector API requests. This input supports the /event endpoint.
          default: /services/collector
          pattern: ^/
        metadata:
          type: array
          title: Fields
          description: Fields to add to every event. May be overridden by fields added at the token or request level.
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                title: Field Name
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
        allowedIndexes:
          type: array
          title: Allowed indexes
          description: List values allowed in HEC event index field. Leave blank to skip validation. Supports wildcards. The values here can expand index validation at the token level.
          items:
            type: string
            minLength: 1
        hecAcks:
          type: boolean
          title: Zscaler HEC Acks
          description: Whether to enable Zscaler HEC acknowledgements
          default: false
        accessControlAllowOrigin:
          title: CORS allowed origins
          type: array
          description: Optionally, list HTTP origins to which @{product} should send CORS (cross-origin resource sharing) Access-Control-Allow-* headers. Supports wildcards.
          items:
            type: string
            minLength: 1
        accessControlAllowHeaders:
          title: CORS allowed headers
          type: array
          description: Optionally, list HTTP headers that @{product} will send to allowed origins as "Access-Control-Allow-Headers" in a CORS preflight response. Use "*" to allow all headers.
          items:
            type: string
            minLength: 1
        emitTokenMetrics:
          type: boolean
          title: Emit per-token request metrics
          description: Enable to emit per-token (<prefix>.http.perToken) and summary (<prefix>.http.summary) request metrics
          default: false
        description:
          type: string
          title: Description
      type: object
    Input:
      oneOf:
        - $ref: "#/components/schemas/InputCollection"
        - $ref: "#/components/schemas/InputKafka"
        - $ref: "#/components/schemas/InputMsk"
        - $ref: "#/components/schemas/InputHttp"
        - $ref: "#/components/schemas/InputSplunk"
        - $ref: "#/components/schemas/InputSplunkSearch"
        - $ref: "#/components/schemas/InputSplunkHec"
        - $ref: "#/components/schemas/InputAzureBlob"
        - $ref: "#/components/schemas/InputElastic"
        - $ref: "#/components/schemas/InputConfluentCloud"
        - $ref: "#/components/schemas/InputGrafana"
        - $ref: "#/components/schemas/InputLoki"
        - $ref: "#/components/schemas/InputPrometheusRw"
        - $ref: "#/components/schemas/InputPrometheus"
        - $ref: "#/components/schemas/InputEdgePrometheus"
        - $ref: "#/components/schemas/InputOffice365Mgmt"
        - $ref: "#/components/schemas/InputOffice365Service"
        - $ref: "#/components/schemas/InputOffice365MsgTrace"
        - $ref: "#/components/schemas/InputEventhub"
        - $ref: "#/components/schemas/InputExec"
        - $ref: "#/components/schemas/InputFirehose"
        - $ref: "#/components/schemas/InputGooglePubsub"
        - $ref: "#/components/schemas/InputCribl"
        - $ref: "#/components/schemas/InputCriblTcp"
        - $ref: "#/components/schemas/InputCriblHttp"
        - $ref: "#/components/schemas/InputCriblLakeHttp"
        - $ref: "#/components/schemas/InputTcpjson"
        - $ref: "#/components/schemas/InputSystemMetrics"
        - $ref: "#/components/schemas/InputSystemState"
        - $ref: "#/components/schemas/InputKubeMetrics"
        - $ref: "#/components/schemas/InputKubeLogs"
        - $ref: "#/components/schemas/InputKubeEvents"
        - $ref: "#/components/schemas/InputWindowsMetrics"
        - $ref: "#/components/schemas/InputCrowdstrike"
        - $ref: "#/components/schemas/InputDatadogAgent"
        - $ref: "#/components/schemas/InputDatagen"
        - $ref: "#/components/schemas/InputHttpRaw"
        - $ref: "#/components/schemas/InputKinesis"
        - $ref: "#/components/schemas/InputCriblmetrics"
        - $ref: "#/components/schemas/InputMetrics"
        - $ref: "#/components/schemas/InputS3"
        - $ref: "#/components/schemas/InputS3Inventory"
        - $ref: "#/components/schemas/InputSnmp"
        - $ref: "#/components/schemas/InputOpenTelemetry"
        - $ref: "#/components/schemas/InputModelDrivenTelemetry"
        - $ref: "#/components/schemas/InputSqs"
        - $ref: "#/components/schemas/InputSyslog"
        - $ref: "#/components/schemas/InputFile"
        - $ref: "#/components/schemas/InputTcp"
        - $ref: "#/components/schemas/InputAppscope"
        - $ref: "#/components/schemas/InputWef"
        - $ref: "#/components/schemas/InputWinEventLogs"
        - $ref: "#/components/schemas/InputRawUdp"
        - $ref: "#/components/schemas/InputJournalFiles"
        - $ref: "#/components/schemas/InputWiz"
        - $ref: "#/components/schemas/InputNetflow"
        - $ref: "#/components/schemas/InputSecurityLake"
        - $ref: "#/components/schemas/InputZscalerHec"
    HealthStatus:
      type: object
      required:
        - status
        - startTime
      properties:
        role:
          type: string
          enum:
            - primary
            - standby
        status:
          type: string
          enum:
            - healthy
            - shutting down
            - standby
        startTime:
          type: number
    GitFile:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/GitFile"
        name:
          type: string
        state:
          type: string
      required:
        - name
security:
  - bearerAuth: []
tags:
  - name: ai-settings
    description: Actions related to Ai Settings
  - name: appscope-configs
    description: Actions related to Appscope Configs
  - name: auth
    description: Actions related to authentication. Do not use the /auth endpoints in Cribl.Cloud deployments. Instead, follow the instructions at https://docs.cribl.io/stream/api-tutorials/#criblcloud to authenticate for Cribl.Cloud.
  - name: authorize
    description: Actions related to Authorize
  - name: banners
    description: Actions related to Banners
  - name: certificates
    description: Actions related to Certificates
  - name: changelog
    description: Actions related to Changelog
  - name: click-house
    description: Actions related to ClickHouse
  - name: clui
    description: Actions related to CLUI
  - name: collectors
    description: Actions related to Collectors
  - name: conditions
    description: Actions related to Conditions
  - name: consent
    description: Actions related to Consent
  - name: dashboardCategories
    description: Actions related to DashboardCategories
  - name: dashboards
    description: Actions related to Dashboards
  - name: database-connections
    description: Actions related to Database Connections
  - name: datasets
    description: Actions related to Datasets
  - name: diag
    description: Actions related to diagnostics
  - name: distributed
    description: Actions related to Distributed
  - name: edge
    description: Actions enabled in Edge
  - name: edgeAppScopeProcesses
    description: Actions related to Edge AppScope processes
  - name: edgeContainers
    description: Actions related to Edge containers
  - name: edgeEvents
    description: Actions related to EdgeEvents
  - name: edgeFiles
    description: Actions related to Edge Files
  - name: edgeLs
    description: Actions related to Edge listing
  - name: edgeProcesses
    description: Actions related to Edge processes
  - name: event_breaker_rules
    description: Actions related to Event Breaker rules
  - name: events
    description: Actions related to Events
  - name: executors
    description: Actions related to Executors
  - name: expressions
    description: Actions related to expressions
  - name: features
    description: Actions related to Features
  - name: file
    description: Actions related to File
  - name: fileSampler
    description: Actions related to FileSampler
  - name: functions
    description: Actions related to functions
  - name: git
    description: Actions related to Git
  - name: global_variables
    description: Actions related to Global Variables
  - name: grokfiles
    description: Actions related to Grok files
  - name: groups
    description: Actions related to Groups
  - name: health
    description: Actions related to REST server health
  - name: hmac-functions
    description: Actions related to HMAC functions
  - name: ingest
    description: Actions related to Ingest
  - name: inputs
    description: Actions related to inputs
  - name: iometrics
    description: Actions related to source/destination metrics
  - name: jobs
    description: Actions related to Jobs
  - name: keys
    description: Actions related to encryption keys
  - name: kube-logs
    description: Actions related to Kube Logs
  - name: kube-proxy
    description: Actions related to Kube Proxy
  - name: lake
    description: Actions related to Lake
  - name: licenses
    description: Actions related to licenses. The <code>/licenses</code> endpoints do not apply to Cribl.Cloud deployments.
  - name: logger
    description: Actions related to Logger
  - name: logging
    description: Actions related to logging
  - name: lookups
    description: Actions related to lookups
  - name: macros
    description: Actions related to Macros
  - name: messages
    description: Actions related to messages
  - name: metrics
    description: Actions related to metrics
  - name: notification-targets
    description: Actions related to Notification Targets
  - name: notifications
    description: Actions related to Notifications
  - name: onlyOnPrem
    description: Actions only available for onprem deployments and do not apply to Cribl.Cloud deployments
  - name: outputs
    description: Actions related to outputs
  - name: packs
    description: Actions related to Packs
  - name: parquetschemas
    description: Actions related to Parquet schemas
  - name: parsers
    description: Actions related to parsers
  - name: pipelines
    description: Actions related to Pipelines
  - name: policies
    description: Actions related to Policies
  - name: preview
    description: Actions related to data preview
  - name: processes
    description: Actions related to Processes
  - name: profiler
    description: Actions related to Profiler
  - name: projects
    description: Actions related to Projects
  - name: protobuflibraries
    description: Actions related to Protobuf libraries
  - name: query
    description: Actions related to Query
  - name: regexes
    description: Actions related to regular expressions
  - name: roles
    description: Actions related to Roles
  - name: routes
    description: Actions related to Routes
  - name: samples
    description: Actions related to samples
  - name: saved-jobs
    description: Actions related to Saved Jobs
  - name: savedQueries
    description: Actions related to saved queries
  - name: schemas
    description: Actions related to Schemas
  - name: scripts
    description: Actions related to scripts
  - name: sds-rules
    description: Actions related to Sds Rules
  - name: search
    description: Actions related to Search
  - name: secrets
    description: Actions related to Secrets
  - name: security
    description: Actions related to Security
  - name: subscriptions
    description: Actions related to Subscriptions
  - name: system
    description: Actions related to system settings
  - name: teams
    description: Actions related to Teams
  - name: teams ACL
    description: Actions related to Teams ACL
  - name: trust-policies
    description: Actions related to Trust Policies
  - name: uiState
    description: Actions related to UiState
  - name: usage-groups
    description: Actions related to Usage Groups
  - name: users
    description: Actions related to users. The <code>/system/users</code> endpoints do not apply to Cribl.Cloud deployments. Instead use <code>/products/{product}/users</code>
  - name: users ACL
    description: Actions related to Users ACL
  - name: users,onlyOnPrem
    description: Actions related to Users,onlyOnPrem
  - name: versioning
    description: Actions related to Versioning
  - name: workers
    description: Actions related to Workers
paths:
  /system/inputs:
    get:
      operationId: listInput
      tags:
        - inputs
      summary: Get a list of Input objects
      description: Get a list of Input objects
      responses:
        "200":
          description: a list of Input objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Input"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /health:
    get:
      operationId: getHealthInfo
      summary: Provides health info for REST server
      security: []
      tags:
        - diag
        - health
      responses:
        "200":
          description: Healthy status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
        "420":
          description: Shutting Down or Standby status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
