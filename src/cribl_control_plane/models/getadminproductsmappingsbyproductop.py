"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .mappingruleset import MappingRuleset, MappingRulesetTypedDict
from .productscore import ProductsCore
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import (
    FieldMetadata,
    PathParamMetadata,
    validate_open_enum,
)
from pydantic.functional_validators import PlainValidator
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetAdminProductsMappingsByProductRequestTypedDict(TypedDict):
    product: ProductsCore
    r"""Name of the Cribl product to list the Mapping Rulesets for"""


class GetAdminProductsMappingsByProductRequest(BaseModel):
    product: Annotated[
        Annotated[ProductsCore, PlainValidator(validate_open_enum(False))],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Name of the Cribl product to list the Mapping Rulesets for"""


class GetAdminProductsMappingsByProductResponseTypedDict(TypedDict):
    r"""a list of MappingRuleset objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[MappingRulesetTypedDict]]


class GetAdminProductsMappingsByProductResponse(BaseModel):
    r"""a list of MappingRuleset objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[MappingRuleset]] = None
