"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .mappingrulesetevalmappingfunction import (
    MappingRulesetEvalMappingFunction,
    MappingRulesetEvalMappingFunctionTypedDict,
)
from .mappingrulesetgenericmappingfunction import (
    MappingRulesetGenericMappingFunction,
    MappingRulesetGenericMappingFunctionTypedDict,
)
from cribl_control_plane.types import BaseModel
from typing import List, Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict


FunctionTypedDict = TypeAliasType(
    "FunctionTypedDict",
    Union[
        MappingRulesetGenericMappingFunctionTypedDict,
        MappingRulesetEvalMappingFunctionTypedDict,
    ],
)


Function = TypeAliasType(
    "Function",
    Union[MappingRulesetGenericMappingFunction, MappingRulesetEvalMappingFunction],
)


class MappingRulesetConfTypedDict(TypedDict):
    functions: NotRequired[List[FunctionTypedDict]]
    r"""List of functions to pass data through"""


class MappingRulesetConf(BaseModel):
    functions: Optional[List[Function]] = None
    r"""List of functions to pass data through"""


class MappingRulesetTypedDict(TypedDict):
    id: str
    conf: NotRequired[MappingRulesetConfTypedDict]
    active: NotRequired[bool]


class MappingRuleset(BaseModel):
    id: str

    conf: Optional[MappingRulesetConf] = None

    active: Optional[bool] = None
