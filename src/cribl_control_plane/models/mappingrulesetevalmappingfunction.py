"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_control_plane import utils
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import validate_open_enum
from enum import Enum
import pydantic
from pydantic.functional_validators import PlainValidator
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ID(str, Enum, metaclass=utils.OpenEnumMeta):
    r"""Unique function identifier."""

    EVAL = "eval"


class AddTypedDict(TypedDict):
    value: str
    r"""JavaScript expression to compute the value (can be constant)"""
    name: NotRequired[str]


class Add(BaseModel):
    value: str
    r"""JavaScript expression to compute the value (can be constant)"""

    name: Optional[str] = None


class MappingRulesetEvalMappingFunctionConfTypedDict(TypedDict):
    add: NotRequired[List[AddTypedDict]]
    r"""Set of key-value pairs to evaluate and add/set"""


class MappingRulesetEvalMappingFunctionConf(BaseModel):
    add: Optional[List[Add]] = None
    r"""Set of key-value pairs to evaluate and add/set"""


class MappingRulesetEvalMappingFunctionTypedDict(TypedDict):
    id: ID
    r"""Unique function identifier."""
    filter_: NotRequired[str]
    r"""Filter expression controlling when this function runs"""
    description: NotRequired[str]
    r"""Optional function description"""
    disabled: NotRequired[bool]
    r"""Indicates whether the function is disabled"""
    final: NotRequired[bool]
    conf: NotRequired[MappingRulesetEvalMappingFunctionConfTypedDict]


class MappingRulesetEvalMappingFunction(BaseModel):
    id: Annotated[ID, PlainValidator(validate_open_enum(False))]
    r"""Unique function identifier."""

    filter_: Annotated[Optional[str], pydantic.Field(alias="filter")] = None
    r"""Filter expression controlling when this function runs"""

    description: Optional[str] = None
    r"""Optional function description"""

    disabled: Optional[bool] = None
    r"""Indicates whether the function is disabled"""

    final: Optional[bool] = None

    conf: Optional[MappingRulesetEvalMappingFunctionConf] = None
