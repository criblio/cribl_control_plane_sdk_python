"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .mappingruleset import MappingRuleset, MappingRulesetTypedDict
from .productscore import ProductsCore
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import (
    FieldMetadata,
    PathParamMetadata,
    RequestMetadata,
    validate_open_enum,
)
import pydantic
from pydantic.functional_validators import PlainValidator
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateAdminProductsMappingsByProductAndIDRequestTypedDict(TypedDict):
    product: ProductsCore
    r"""Name of the Cribl product to update the Mapping Ruleset for"""
    id_param: str
    r"""The <code>id</code> of the Mapping Ruleset to update."""
    mapping_ruleset: MappingRulesetTypedDict
    r"""MappingRuleset object"""


class UpdateAdminProductsMappingsByProductAndIDRequest(BaseModel):
    product: Annotated[
        Annotated[ProductsCore, PlainValidator(validate_open_enum(False))],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Name of the Cribl product to update the Mapping Ruleset for"""

    id_param: Annotated[
        str,
        pydantic.Field(alias="id"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The <code>id</code> of the Mapping Ruleset to update."""

    mapping_ruleset: Annotated[
        MappingRuleset,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""MappingRuleset object"""


class UpdateAdminProductsMappingsByProductAndIDResponseTypedDict(TypedDict):
    r"""A list containing the updated Mapping Ruleset objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[MappingRulesetTypedDict]]


class UpdateAdminProductsMappingsByProductAndIDResponse(BaseModel):
    r"""A list containing the updated Mapping Ruleset objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[MappingRuleset]] = None
